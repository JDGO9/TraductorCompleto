/* The following code was generated by JFlex 1.4.3 on 27/05/22 15:31 */

package Complementos;
import javax.swing.table.DefaultTableModel;
import static Complementos.Tokens.*;
import java_cup.runtime.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 27/05/22 15:31 from the specification file
 * <tt>C:/Users/DEMO FAST III/Desktop/AnalizadorLexicoS/src/Complementos/LexerCup.flex</tt>
 */
public class LexerCup implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = {
     0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  5,  0,  0,  3,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
    33, 36,  0,  0,  0,  0,  0, 34, 37, 38,  0,  0,  3, 32, 35,  4, 
     2,  2,  2,  2,  2,  2,  2,  2,  2,  2, 36, 36,  0,  0,  0, 36, 
     0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 
     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 36,  0, 36,  0,  1, 
     0,  6, 20,  7, 23, 13, 28, 12, 25,  9, 29, 22, 16, 15, 11, 10, 
    19, 30, 14, 17,  8, 26, 27, 18, 24, 21, 31, 36,  0, 36,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0, 36,  0,  0,  0,  0,  0,  0,  0,  0,  0, 36,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 36,  0,  0,  0, 36, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
  };

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\2\1\1\2\1\3\1\1\1\4\2\1\1\5"+
    "\25\1\1\6\1\1\2\6\1\3\2\1\1\7\1\1"+
    "\1\4\3\1\1\10\3\1\1\11\1\1\1\11\16\1"+
    "\1\5\1\12\1\1\1\13\1\1\1\10\1\0\3\1"+
    "\1\7\1\14\5\1\1\7\1\0\2\1\1\15\10\1"+
    "\1\0\20\1\1\5\1\16\11\1\1\17\14\1\1\5"+
    "\16\1\1\7\3\1\1\0\11\1\1\5\3\1\1\5"+
    "\1\7\16\1\1\0\1\20\3\0\3\1\1\21\4\1"+
    "\1\22\1\14\1\1\1\23\6\1\1\22\1\1\1\0"+
    "\23\1\1\21\15\1\1\17\4\1\1\0\2\24\4\1"+
    "\1\25\1\1\1\16\5\1\1\0\10\1\1\26\5\1"+
    "\1\12\1\1\1\16\1\1\1\7\2\0\4\1\1\15"+
    "\1\1\1\27\16\1\1\0\1\1\1\21\25\1\1\21"+
    "\43\1\1\24\5\1\1\0\1\1\1\21\14\1\1\5"+
    "\2\1\1\21\10\1\1\0\3\1\1\30\1\1\1\30"+
    "\3\1\1\7\7\1\1\11\13\1\1\5\2\1\1\0"+
    "\16\1\1\5\1\16\2\1\1\30\2\1\1\16\1\0"+
    "\10\1\1\12\4\1\1\7\12\1\1\0\16\1\3\0"+
    "\1\12\4\1\1\0\7\1\1\21\14\1\23\0\3\1"+
    "\1\31\5\1\2\5\2\1\1\7\6\1\2\0\6\1"+
    "\1\0\1\1\1\5\1\1\2\0\2\1\1\24\1\1"+
    "\2\0\7\1\1\0\30\1\1\22\2\1\1\27\15\1"+
    "\1\27\1\22\3\1\1\0\6\1\1\26\1\1\1\21"+
    "\3\1\1\32\6\1\1\21\21\1\1\16\1\0\11\1"+
    "\1\26\21\1\1\24\4\1\1\2\12\1\4\0\10\1"+
    "\1\21\2\1\17\0\1\33\22\0\1\33\17\0\1\34"+
    "\4\1\1\16\1\12\7\1\2\0\1\22\3\1\1\0"+
    "\1\1\2\0\2\1\2\0\2\1\1\15\3\1\1\24"+
    "\4\1\1\0\6\1\1\35\4\1\1\0\6\1\1\30"+
    "\12\1\1\5\6\1\1\0\10\1\4\0\5\1\22\0"+
    "\1\33\21\0\4\1\1\36\1\1\2\0\3\1\1\7"+
    "\1\1\2\0\1\1\2\0\7\1\2\0\2\1\1\0"+
    "\14\1\1\0\5\1\3\0\2\1\11\0\5\1\1\10"+
    "\1\0\1\1\3\0\3\1\1\0\2\1\1\10\3\1"+
    "\5\0\2\1\1\0\1\36\1\0\1\14\3\1\10\0"+
    "\1\1\5\0\1\15\1\1\3\0\1\1\1\0\1\26";

  private static int [] zzUnpackAction() {
    int [] result = new int[1035];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\47\0\116\0\165\0\234\0\303\0\352\0\u0111"+
    "\0\u0138\0\u015f\0\u0186\0\u01ad\0\u01d4\0\u01fb\0\u0222\0\u0249"+
    "\0\u0270\0\u0297\0\u02be\0\u02e5\0\u030c\0\u0333\0\u035a\0\u0381"+
    "\0\u03a8\0\u03cf\0\u03f6\0\u041d\0\u0444\0\u046b\0\u0492\0\47"+
    "\0\u04b9\0\u04e0\0\u0507\0\u052e\0\u0555\0\u057c\0\u05a3\0\u05ca"+
    "\0\u05f1\0\u0618\0\u063f\0\u0666\0\u068d\0\u06b4\0\u06db\0\u0702"+
    "\0\116\0\u0729\0\u0750\0\u0777\0\u079e\0\u07c5\0\u07ec\0\u0813"+
    "\0\u083a\0\u0861\0\u0888\0\u08af\0\u08d6\0\u08fd\0\u0924\0\u094b"+
    "\0\u0972\0\u0999\0\u09c0\0\u09e7\0\u0a0e\0\u0a35\0\116\0\u0a5c"+
    "\0\u0a83\0\u0aaa\0\u0ad1\0\u0af8\0\u0b1f\0\u0b46\0\u0b6d\0\u0b94"+
    "\0\u0bbb\0\u0be2\0\u0c09\0\u0c30\0\u0c57\0\u0c7e\0\u0ca5\0\u0ccc"+
    "\0\u0cf3\0\u0d1a\0\u0d41\0\u0d68\0\u0d8f\0\u0db6\0\u0ddd\0\u0e04"+
    "\0\u0e2b\0\u0e52\0\u0e79\0\u0ea0\0\u0ec7\0\u0eee\0\u0f15\0\u0f3c"+
    "\0\u0f63\0\u0f8a\0\u0fb1\0\u0fd8\0\u0fff\0\u1026\0\u104d\0\u1074"+
    "\0\u109b\0\u10c2\0\u10e9\0\u1110\0\u1137\0\u115e\0\u1185\0\u11ac"+
    "\0\u11d3\0\u11fa\0\u1221\0\u1248\0\u126f\0\u1296\0\u12bd\0\u12e4"+
    "\0\u130b\0\u1332\0\u1359\0\u1380\0\u13a7\0\u13ce\0\u13f5\0\u141c"+
    "\0\u1443\0\u146a\0\u1491\0\u14b8\0\u14df\0\u1506\0\u152d\0\u1554"+
    "\0\u157b\0\u15a2\0\u15c9\0\u15f0\0\u1617\0\u163e\0\u1665\0\116"+
    "\0\u168c\0\u16b3\0\u16da\0\u1701\0\u1728\0\u174f\0\u1776\0\u179d"+
    "\0\u17c4\0\u17eb\0\u1812\0\u1839\0\u1860\0\u1887\0\u18ae\0\u18d5"+
    "\0\u18fc\0\116\0\u1923\0\u194a\0\u1971\0\u1998\0\u19bf\0\u19e6"+
    "\0\u1a0d\0\u1a34\0\u1a5b\0\u1a82\0\u1aa9\0\u1ad0\0\u1af7\0\u1b1e"+
    "\0\u1b45\0\u1b6c\0\47\0\u1b93\0\u1bba\0\u1be1\0\u1c08\0\u1c2f"+
    "\0\u1c56\0\116\0\u1c7d\0\u1ca4\0\u1ccb\0\u1cf2\0\u1d19\0\116"+
    "\0\u1d40\0\u1d67\0\u1d8e\0\u1db5\0\u1ddc\0\u1e03\0\u1e2a\0\u1e51"+
    "\0\116\0\u1e78\0\u1e9f\0\u1ec6\0\u1eed\0\u1f14\0\u1f3b\0\u1f62"+
    "\0\u1f89\0\u1fb0\0\u1fd7\0\u1ffe\0\u2025\0\u204c\0\u2073\0\u209a"+
    "\0\u20c1\0\u20e8\0\u210f\0\u2136\0\u215d\0\u2184\0\u21ab\0\u21d2"+
    "\0\u21f9\0\u2220\0\u2247\0\u226e\0\u2295\0\u22bc\0\u22e3\0\u230a"+
    "\0\u2331\0\u2358\0\u237f\0\u23a6\0\116\0\u23cd\0\u23f4\0\u241b"+
    "\0\u2442\0\u2469\0\u2490\0\116\0\u24b7\0\u24de\0\u2505\0\u252c"+
    "\0\u2553\0\u257a\0\u25a1\0\u25c8\0\u25ef\0\u2616\0\u263d\0\u2664"+
    "\0\u268b\0\u26b2\0\u26d9\0\u2700\0\u2727\0\u274e\0\u2775\0\u279c"+
    "\0\u27c3\0\116\0\u27ea\0\u2811\0\u2838\0\u285f\0\u2886\0\u28ad"+
    "\0\u28d4\0\u28fb\0\u2922\0\u2949\0\u2970\0\u2997\0\u29be\0\u29e5"+
    "\0\u2a0c\0\u2a33\0\u2a5a\0\u2a81\0\u2aa8\0\u2acf\0\u2af6\0\u2b1d"+
    "\0\u2b44\0\u2b6b\0\u2b92\0\u2bb9\0\u2be0\0\u2c07\0\u2c2e\0\u2c55"+
    "\0\u2c7c\0\u2ca3\0\u2cca\0\u2cf1\0\u2d18\0\u2d3f\0\u2d66\0\u2d8d"+
    "\0\u2db4\0\u2ddb\0\u2e02\0\u2e29\0\u2e50\0\u2e77\0\u2e9e\0\u2ec5"+
    "\0\u2eec\0\u2f13\0\u2f3a\0\u2f61\0\u2f88\0\u2faf\0\u2fd6\0\u2ffd"+
    "\0\u3024\0\u304b\0\u3072\0\u3099\0\u30c0\0\u30e7\0\u310e\0\u3135"+
    "\0\u315c\0\u3183\0\u31aa\0\u31d1\0\u31f8\0\u321f\0\u25a1\0\u3246"+
    "\0\u326d\0\u3294\0\u32bb\0\u32e2\0\u3309\0\u3330\0\u3357\0\u337e"+
    "\0\u33a5\0\u33cc\0\u33f3\0\u341a\0\u3441\0\u3468\0\u348f\0\u34b6"+
    "\0\u34dd\0\u3504\0\u352b\0\u3552\0\u3579\0\u35a0\0\u35c7\0\u35ee"+
    "\0\u3615\0\u363c\0\u3663\0\u368a\0\u36b1\0\u36d8\0\u36ff\0\u321f"+
    "\0\u3726\0\u374d\0\u3774\0\u379b\0\u37c2\0\u37e9\0\u3810\0\u3837"+
    "\0\u385e\0\u3885\0\u1d67\0\u38ac\0\u337e\0\u38d3\0\u38fa\0\u3921"+
    "\0\u3948\0\u396f\0\u3996\0\u39bd\0\u39e4\0\u3a0b\0\u3a32\0\u3a59"+
    "\0\u3a80\0\u3aa7\0\u3ace\0\u3af5\0\u3b1c\0\u3b43\0\116\0\u3b6a"+
    "\0\u3b91\0\u3bb8\0\u3bdf\0\u3c06\0\u3c2d\0\u3c54\0\u3c7b\0\u3ca2"+
    "\0\u3cc9\0\u3cf0\0\u2f88\0\u3d17\0\u3d3e\0\u3d65\0\u3d8c\0\u3db3"+
    "\0\u3dda\0\u3e01\0\u3e28\0\u3e4f\0\u3e76\0\u3e9d\0\u3ec4\0\u3eeb"+
    "\0\u3f12\0\u3f39\0\u3f60\0\u3f87\0\u3fae\0\u3fd5\0\u3ffc\0\u4023"+
    "\0\u404a\0\u4071\0\u4098\0\u40bf\0\u40e6\0\u410d\0\u4134\0\u415b"+
    "\0\u10c2\0\u4182\0\u41a9\0\u41d0\0\u41f7\0\u421e\0\u4245\0\u426c"+
    "\0\u4293\0\u42ba\0\u42e1\0\u4308\0\u432f\0\u4356\0\u437d\0\u43a4"+
    "\0\u43cb\0\116\0\u43f2\0\u4419\0\u4440\0\u4467\0\u448e\0\u44b5"+
    "\0\u44dc\0\u4503\0\u452a\0\u4551\0\u4578\0\u459f\0\u45c6\0\u45ed"+
    "\0\u4614\0\u463b\0\u4662\0\u4689\0\u46b0\0\u46d7\0\u46fe\0\u4725"+
    "\0\u474c\0\u4773\0\u479a\0\u47c1\0\u47e8\0\u480f\0\u4836\0\u485d"+
    "\0\u4884\0\u48ab\0\u48d2\0\u48f9\0\u4920\0\u4947\0\u496e\0\u4995"+
    "\0\u49bc\0\u49e3\0\u4a0a\0\u4a31\0\u4a58\0\u4a7f\0\u4aa6\0\u4acd"+
    "\0\u4af4\0\u4b1b\0\u4b42\0\u4b69\0\u4b90\0\u4bb7\0\u4bde\0\u4c05"+
    "\0\u4c2c\0\u4c53\0\u4c7a\0\u4ca1\0\u4cc8\0\u4cef\0\u4d16\0\u4d3d"+
    "\0\u4d64\0\u4d8b\0\u4db2\0\u4dd9\0\u4e00\0\u4e27\0\u4e4e\0\u4e75"+
    "\0\u4e9c\0\u4ec3\0\u4eea\0\u4f11\0\u4f38\0\u4f5f\0\u4f86\0\u4fad"+
    "\0\u4fd4\0\u4ffb\0\u5022\0\116\0\u5049\0\u5070\0\u5097\0\u50be"+
    "\0\u50e5\0\u510c\0\u5133\0\u515a\0\u5181\0\u51a8\0\u51cf\0\u51f6"+
    "\0\u521d\0\u5244\0\u526b\0\u5292\0\u52b9\0\u52e0\0\u5307\0\u532e"+
    "\0\u5355\0\u537c\0\u53a3\0\u53ca\0\u53f1\0\u5418\0\u543f\0\u5466"+
    "\0\u548d\0\u54b4\0\u54db\0\u5502\0\u5529\0\u5550\0\u5577\0\u559e"+
    "\0\u55c5\0\u55ec\0\u5613\0\u563a\0\u5661\0\u5688\0\u56af\0\u56d6"+
    "\0\u56fd\0\u5724\0\u574b\0\u5772\0\u5799\0\u57c0\0\u57e7\0\u580e"+
    "\0\u5835\0\u585c\0\u5883\0\u58aa\0\u58d1\0\u58f8\0\u591f\0\u5946"+
    "\0\u596d\0\u5994\0\u59bb\0\u59e2\0\u5a09\0\u5a30\0\u5a57\0\u5a7e"+
    "\0\u5aa5\0\u5acc\0\u5af3\0\u5b1a\0\u5b41\0\u5b68\0\u5b8f\0\u5bb6"+
    "\0\u5bdd\0\u5c04\0\u5c2b\0\u5c52\0\u5c79\0\u5ca0\0\u5cc7\0\u5cee"+
    "\0\u5d15\0\116\0\u5d3c\0\u5d63\0\u5d8a\0\u5db1\0\u5dd8\0\u5dff"+
    "\0\u5e26\0\u5e4d\0\u5e74\0\u5e9b\0\u5ec2\0\u3cc9\0\u5ee9\0\u5f10"+
    "\0\u5f37\0\u5f5e\0\u5f85\0\116\0\u5fac\0\u5fd3\0\u5ffa\0\u6021"+
    "\0\u6048\0\u606f\0\u1728\0\u6096\0\u60bd\0\u60e4\0\u610b\0\u6132"+
    "\0\u6159\0\u6180\0\u61a7\0\u61ce\0\u61f5\0\u621c\0\u6243\0\u626a"+
    "\0\u6291\0\u62b8\0\u62df\0\u6306\0\u632d\0\u6354\0\u637b\0\u63a2"+
    "\0\u63c9\0\u63f0\0\u6417\0\u643e\0\u6465\0\u648c\0\u64b3\0\u64da"+
    "\0\u6501\0\u6528\0\u654f\0\u6576\0\u659d\0\u65c4\0\u65eb\0\u6612"+
    "\0\u05a3\0\u6639\0\u6660\0\u6687\0\u66ae\0\u66d5\0\u66fc\0\u6723"+
    "\0\u674a\0\u4440\0\u6771\0\u6798\0\u67bf\0\u67e6\0\47\0\u680d"+
    "\0\u6834\0\u685b\0\u6882\0\u68a9\0\u68d0\0\u68f7\0\u691e\0\u6945"+
    "\0\u696c\0\u6993\0\u69ba\0\u69e1\0\u6a08\0\u6a2f\0\u6a56\0\u6a7d"+
    "\0\u6aa4\0\u6acb\0\u6af2\0\u6b19\0\u6b40\0\u6b67\0\u6b8e\0\u6bb5"+
    "\0\u6bdc\0\u6c03\0\u6c2a\0\u6c51\0\u6c78\0\u6c9f\0\u6cc6\0\u6ced"+
    "\0\u6d14\0\u6d3b\0\u6d62\0\u6d89\0\u6db0\0\u6dd7\0\u6dfe\0\47"+
    "\0\u6e25\0\u6e4c\0\u6e73\0\u6e9a\0\u6ec1\0\u6ee8\0\u6f0f\0\u6f36"+
    "\0\u6f5d\0\u6f84\0\u6fab\0\u6fd2\0\u6ff9\0\u7020\0\u7047\0\u706e"+
    "\0\u7095\0\u70bc\0\u70e3\0\u710a\0\u7131\0\u7158\0\u717f\0\u71a6"+
    "\0\u71cd\0\u71f4\0\u721b\0\u7242\0\u7269\0\u7290\0\u72b7\0\u72de"+
    "\0\u7305\0\u732c\0\116\0\u7353\0\u2490\0\u737a\0\u73a1\0\u6528"+
    "\0\u73c8\0\u543f\0\u73ef\0\u7416\0\u743d\0\u7464\0\u748b\0\u74b2"+
    "\0\u74d9\0\u7500\0\u33a5\0\u7527\0\u754e\0\u7575\0\u759c\0\u75c3"+
    "\0\u75ea\0\u7611\0\u7638\0\u765f\0\u7686\0\u76ad\0\u76d4\0\u76fb"+
    "\0\u7722\0\u7749\0\u7770\0\u7797\0\u5d15\0\u77be\0\u77e5\0\u780c"+
    "\0\u7833\0\u785a\0\u7881\0\u78a8\0\u78cf\0\u78f6\0\u791d\0\u7944"+
    "\0\116\0\u796b\0\u7992\0\u79b9\0\u79e0\0\u7a07\0\u7a2e\0\u7a55"+
    "\0\u7a7c\0\u7aa3\0\u7aca\0\u7af1\0\u7b18\0\u7b3f\0\u7b66\0\u7b8d"+
    "\0\u7bb4\0\u7bdb\0\u7c02\0\u7c29\0\u7c50\0\u7c77\0\u7c9e\0\u25a1"+
    "\0\u7cc5\0\u7cec\0\u7d13\0\u7d3a\0\u7d61\0\u7d88\0\u7daf\0\u7dd6"+
    "\0\u7dfd\0\u7e24\0\u7e4b\0\u7e72\0\u7e99\0\u7ec0\0\u7ee7\0\u7f0e"+
    "\0\u7f35\0\u7f5c\0\u7f83\0\u7faa\0\u7fd1\0\u7ff8\0\u801f\0\u8046"+
    "\0\u806d\0\u8094\0\u80bb\0\u80e2\0\u8109\0\u8130\0\u8157\0\u817e"+
    "\0\u81a5\0\u81cc\0\u81f3\0\u821a\0\u8241\0\u8268\0\u828f\0\u82b6"+
    "\0\u82dd\0\u8304\0\u832b\0\u8352\0\u8379\0\u83a0\0\u83c7\0\u83ee"+
    "\0\u8415\0\u843c\0\u8463\0\u848a\0\u84b1\0\u84d8\0\u84ff\0\u8526"+
    "\0\u854d\0\u8574\0\u859b\0\u85c2\0\u85e9\0\u8610\0\u8637\0\u865e"+
    "\0\116\0\u8685\0\u86ac\0\u86d3\0\u86fa\0\u8721\0\u8748\0\47"+
    "\0\u876f\0\u8796\0\u87bd\0\u87e4\0\u880b\0\u8832\0\u8859\0\u8880"+
    "\0\u88a7\0\u5b1a\0\u88ce\0\u88f5\0\u891c\0\u8943\0\u896a\0\u8991"+
    "\0\u89b8\0\u89df\0\u8a06\0\u8a2d\0\u8a54\0\u8a7b\0\u8aa2\0\u8ac9"+
    "\0\u8af0\0\u8b17\0\u8b3e\0\u8b65\0\u8b8c\0\u8bb3\0\u8bda\0\u8c01"+
    "\0\u8c28\0\u8c4f\0\u8c76\0\u8c9d\0\u8cc4\0\u8ceb\0\u8d12\0\u8d39"+
    "\0\u8d60\0\u8d87\0\u8dae\0\u8dd5\0\u8dfc\0\u8e23\0\u8e4a\0\u8e71"+
    "\0\u8e98\0\u8ebf\0\u8ee6\0\u8f0d\0\u8f34\0\u8f5b\0\u8f82\0\47"+
    "\0\u8fa9\0\u8fd0\0\u8ff7\0\u901e\0\u9045\0\u906c\0\u9093\0\u90ba"+
    "\0\u90e1\0\u9108\0\u912f\0\u9156\0\u917d\0\u91a4\0\u91cb\0\u91f2"+
    "\0\u9219\0\u9240\0\u9267\0\u928e\0\u92b5\0\u92dc\0\u9303\0\47"+
    "\0\u932a\0\47\0\u9351\0\u9378\0\u939f\0\u93c6\0\u93ed\0\u9414"+
    "\0\u943b\0\u9462\0\u9489\0\u94b0\0\u94d7\0\u94fe\0\u9525\0\u954c"+
    "\0\u9573\0\u959a\0\u95c1\0\47\0\u95e8\0\u960f\0\u9636\0\u965d"+
    "\0\u9684\0\u96ab\0\47";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1035];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\5\1\7\1\10"+
    "\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20"+
    "\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
    "\1\3\1\31\1\32\1\33\1\34\1\35\1\36\1\37"+
    "\1\40\1\5\1\41\1\42\1\40\1\43\1\40\50\0"+
    "\2\3\3\0\32\3\11\0\1\4\47\0\1\5\1\0"+
    "\1\5\33\0\1\5\11\0\1\44\43\0\2\3\3\0"+
    "\1\45\1\46\1\47\1\50\1\3\1\51\1\52\1\3"+
    "\1\53\1\3\1\54\1\55\1\56\1\57\1\60\1\61"+
    "\1\3\1\62\1\3\1\63\2\3\1\64\3\3\10\0"+
    "\2\3\3\0\1\65\2\3\1\66\1\67\2\3\1\70"+
    "\1\71\1\3\1\72\10\3\1\73\6\3\10\0\2\3"+
    "\3\0\3\3\1\74\1\75\2\3\1\76\4\3\1\77"+
    "\6\3\1\100\6\3\10\0\2\3\3\0\1\3\1\101"+
    "\1\102\2\3\1\103\2\3\1\104\2\3\1\105\5\3"+
    "\1\106\4\3\1\107\3\3\2\0\1\110\5\0\2\3"+
    "\3\0\1\3\1\111\1\112\1\113\1\3\1\114\2\3"+
    "\1\115\1\3\1\116\2\3\1\117\1\120\4\3\1\61"+
    "\1\121\1\122\1\123\3\3\2\0\1\124\5\0\2\3"+
    "\3\0\1\125\2\3\1\126\1\127\2\3\1\130\14\3"+
    "\1\131\5\3\10\0\2\3\3\0\1\132\2\3\1\133"+
    "\1\134\2\3\1\135\1\136\1\3\1\137\17\3\2\0"+
    "\1\140\5\0\2\3\3\0\1\141\2\3\1\142\1\3"+
    "\1\143\1\144\1\3\1\61\1\145\1\146\4\3\1\101"+
    "\2\3\1\147\1\61\1\3\1\150\4\3\10\0\2\3"+
    "\3\0\1\151\2\3\1\152\1\153\2\3\1\154\14\3"+
    "\1\155\5\3\10\0\2\3\3\0\1\156\2\3\1\157"+
    "\1\160\2\3\1\161\7\3\1\162\4\3\1\163\5\3"+
    "\10\0\2\3\3\0\1\164\2\3\1\165\1\166\2\3"+
    "\1\167\22\3\10\0\2\3\3\0\1\170\1\171\1\172"+
    "\1\173\1\174\1\175\1\3\1\176\1\3\1\177\1\200"+
    "\2\3\1\201\2\3\1\202\2\3\1\203\1\204\3\3"+
    "\1\205\1\3\10\0\2\3\3\0\1\206\2\3\1\207"+
    "\1\210\2\3\1\211\1\212\12\3\1\213\6\3\10\0"+
    "\2\3\3\0\1\214\3\3\1\215\2\3\1\216\1\217"+
    "\12\3\1\220\1\221\5\3\10\0\2\3\3\0\1\222"+
    "\2\3\1\223\1\224\2\3\1\225\1\226\1\3\1\227"+
    "\4\3\1\230\4\3\1\231\5\3\10\0\2\3\3\0"+
    "\4\3\1\232\2\3\1\233\22\3\2\0\1\234\5\0"+
    "\2\3\3\0\7\3\1\235\22\3\10\0\2\3\3\0"+
    "\1\235\2\3\1\236\1\237\2\3\1\240\1\241\13\3"+
    "\1\242\5\3\10\0\2\3\3\0\1\243\2\3\1\244"+
    "\1\245\2\3\1\246\14\3\1\247\5\3\10\0\2\3"+
    "\3\0\5\3\1\250\1\251\4\3\1\252\1\3\1\253"+
    "\14\3\10\0\2\3\3\0\3\3\1\254\1\255\2\3"+
    "\1\256\22\3\10\0\2\3\3\0\1\257\2\3\1\260"+
    "\1\261\2\3\1\262\1\263\13\3\1\264\5\3\10\0"+
    "\2\3\3\0\4\3\1\265\2\3\1\266\14\3\1\267"+
    "\5\3\10\0\2\3\3\0\24\3\1\270\5\3\10\0"+
    "\2\3\3\0\7\3\1\271\22\3\27\0\1\272\1\273"+
    "\5\0\1\273\3\0\1\274\56\0\1\275\43\0\1\276"+
    "\6\0\5\44\1\0\41\44\1\0\2\3\3\0\23\3"+
    "\1\61\6\3\10\0\2\3\3\0\2\3\1\277\5\3"+
    "\1\300\21\3\10\0\2\3\3\0\2\3\1\301\27\3"+
    "\10\0\2\3\3\0\10\3\1\302\21\3\10\0\2\3"+
    "\3\0\1\3\1\303\1\3\1\304\2\3\1\305\4\3"+
    "\1\306\3\3\1\307\1\3\1\310\10\3\10\0\2\3"+
    "\3\0\4\3\1\230\2\3\1\302\22\3\10\0\2\3"+
    "\3\0\2\3\1\302\1\3\1\311\2\3\1\312\22\3"+
    "\10\0\2\3\3\0\1\313\1\3\1\314\1\315\1\316"+
    "\3\3\1\317\1\320\1\321\17\3\10\0\2\3\3\0"+
    "\12\3\1\322\17\3\1\0\1\323\6\0\2\3\3\0"+
    "\1\324\31\3\10\0\2\3\3\0\15\3\1\325\14\3"+
    "\10\0\2\3\3\0\4\3\1\326\3\3\1\327\21\3"+
    "\10\0\2\3\3\0\4\3\1\330\25\3\10\0\2\3"+
    "\3\0\7\3\1\331\22\3\10\0\2\3\3\0\2\3"+
    "\1\122\27\3\10\0\2\3\3\0\2\3\1\302\2\3"+
    "\1\332\2\3\1\333\1\3\1\334\1\101\1\3\1\335"+
    "\6\3\1\336\5\3\10\0\2\3\3\0\2\3\1\235"+
    "\5\3\1\337\21\3\10\0\2\3\3\0\1\340\1\3"+
    "\1\341\1\3\1\342\1\343\2\3\1\344\1\345\1\346"+
    "\1\3\1\347\1\235\6\3\1\350\5\3\10\0\2\3"+
    "\3\0\5\3\1\351\2\3\1\352\21\3\10\0\2\3"+
    "\3\0\1\353\3\3\1\354\25\3\10\0\2\3\3\0"+
    "\1\355\3\3\1\356\2\3\1\357\22\3\10\0\2\3"+
    "\3\0\1\360\2\3\1\361\3\3\1\362\14\3\1\363"+
    "\5\3\10\0\2\3\3\0\10\3\1\364\21\3\10\0"+
    "\2\3\3\0\4\3\1\365\4\3\1\366\1\367\1\3"+
    "\1\370\4\3\1\371\10\3\1\0\1\372\6\0\2\3"+
    "\3\0\5\3\1\373\24\3\10\0\2\3\3\0\4\3"+
    "\1\374\2\3\1\375\22\3\10\0\2\3\3\0\1\376"+
    "\2\3\1\377\1\u0100\2\3\1\u0101\1\u0102\21\3\10\0"+
    "\2\3\3\0\7\3\1\302\22\3\10\0\2\3\3\0"+
    "\13\3\1\u0103\16\3\10\0\2\3\3\0\1\3\1\u0104"+
    "\1\u0105\10\3\1\u0106\5\3\1\u0107\4\3\1\u0108\3\3"+
    "\1\0\1\u0109\6\0\2\3\3\0\4\3\1\344\3\3"+
    "\1\u010a\21\3\10\0\2\3\3\0\5\3\1\332\4\3"+
    "\1\u010b\17\3\10\0\2\3\3\0\7\3\1\u010c\22\3"+
    "\26\0\1\273\30\0\2\3\3\0\7\3\1\u010d\22\3"+
    "\10\0\2\3\3\0\23\3\1\u010e\6\3\10\0\2\3"+
    "\3\0\12\3\1\302\17\3\10\0\2\3\3\0\1\3"+
    "\1\u010f\1\u0110\4\3\1\374\22\3\10\0\2\3\3\0"+
    "\1\u0111\31\3\10\0\2\3\3\0\21\3\1\u0112\10\3"+
    "\10\0\2\3\3\0\2\3\1\u0113\4\3\1\u0114\5\3"+
    "\1\u0115\14\3\10\0\2\3\3\0\25\3\1\u0116\1\3"+
    "\1\u0117\2\3\10\0\2\3\3\0\1\3\1\45\1\u0118"+
    "\3\3\1\u0119\1\3\1\u011a\21\3\10\0\2\3\3\0"+
    "\7\3\1\u011b\22\3\10\0\2\3\3\0\26\3\1\u011c"+
    "\3\3\1\0\1\u011d\14\0\1\u011e\40\0\2\3\3\0"+
    "\2\3\1\u011f\27\3\10\0\2\3\3\0\1\3\1\u0120"+
    "\3\3\1\u0121\1\u0122\23\3\10\0\2\3\3\0\2\3"+
    "\1\u0123\2\3\1\u0124\2\3\1\310\2\3\1\101\1\u0125"+
    "\1\3\1\u0126\13\3\10\0\2\3\3\0\1\u0127\2\3"+
    "\1\u0128\3\3\1\u0129\15\3\1\u012a\4\3\10\0\2\3"+
    "\3\0\11\3\1\u012b\20\3\10\0\2\3\3\0\10\3"+
    "\1\u012c\1\101\1\3\1\302\16\3\10\0\2\3\3\0"+
    "\10\3\1\113\21\3\10\0\2\3\3\0\12\3\1\u012d"+
    "\12\3\1\u012e\4\3\10\0\2\3\3\0\5\3\1\u012f"+
    "\1\3\1\61\22\3\10\0\2\3\3\0\1\u0130\3\3"+
    "\1\u0131\2\3\1\u0132\14\3\1\u0133\5\3\10\0\2\3"+
    "\3\0\1\355\31\3\36\0\1\u0134\20\0\2\3\3\0"+
    "\1\3\1\u0135\6\3\1\u0136\2\3\1\u0137\16\3\10\0"+
    "\2\3\3\0\2\3\1\u0138\3\3\1\u0139\23\3\10\0"+
    "\2\3\3\0\2\3\1\u013a\1\3\1\u013b\2\3\1\u013c"+
    "\22\3\10\0\2\3\3\0\6\3\1\302\23\3\10\0"+
    "\2\3\3\0\16\3\1\u013d\13\3\10\0\2\3\3\0"+
    "\7\3\1\u013e\22\3\10\0\2\3\3\0\1\u013f\14\3"+
    "\1\u0140\14\3\10\0\2\3\3\0\7\3\1\u0141\22\3"+
    "\10\0\2\3\3\0\1\3\1\101\1\u0142\1\344\15\3"+
    "\1\u0143\10\3\10\0\2\3\3\0\5\3\1\144\17\3"+
    "\1\u0144\4\3\10\0\2\3\3\0\1\u012d\1\u0145\12\3"+
    "\1\302\7\3\1\u0146\5\3\10\0\2\3\3\0\1\u0147"+
    "\1\u0148\4\3\1\277\4\3\1\u0149\5\3\1\u0112\10\3"+
    "\10\0\2\3\3\0\12\3\1\101\6\3\1\u0120\10\3"+
    "\10\0\2\3\3\0\1\3\1\u014a\1\u014b\2\3\1\u014c"+
    "\2\3\1\u014d\4\3\1\302\1\3\1\u014e\12\3\10\0"+
    "\2\3\3\0\5\3\1\u014f\4\3\1\u0150\6\3\1\u0151"+
    "\10\3\10\0\2\3\3\0\4\3\1\344\1\u0152\2\3"+
    "\1\u0153\10\3\1\u0154\2\3\1\u0155\5\3\10\0\2\3"+
    "\3\0\1\u0156\4\3\1\302\24\3\10\0\2\3\3\0"+
    "\13\3\1\u0157\16\3\10\0\2\3\3\0\1\3\1\u0135"+
    "\11\3\1\u0158\16\3\10\0\2\3\3\0\2\3\1\u0159"+
    "\2\3\1\u015a\6\3\1\302\3\3\1\101\10\3\1\u015b"+
    "\10\0\2\3\3\0\2\3\1\u015c\2\3\1\101\1\u0122"+
    "\1\302\3\3\1\u0156\4\3\1\u015d\5\3\1\101\1\3"+
    "\1\u015e\1\3\10\0\2\3\3\0\2\3\1\u015f\27\3"+
    "\10\0\2\3\3\0\2\3\1\u0160\3\3\1\302\4\3"+
    "\1\u0161\11\3\1\u0162\4\3\10\0\2\3\3\0\5\3"+
    "\1\u0163\13\3\1\u0112\10\3\10\0\2\3\3\0\1\u0164"+
    "\2\3\1\u0165\17\3\1\u0166\6\3\10\0\2\3\3\0"+
    "\1\u0167\2\3\1\u0168\1\u0169\3\3\1\u016a\13\3\1\u016b"+
    "\5\3\10\0\2\3\3\0\1\3\1\u016c\3\3\1\u016d"+
    "\1\344\2\3\1\u016e\1\3\1\u016f\5\3\1\101\1\u0170"+
    "\6\3\1\101\10\0\2\3\3\0\4\3\1\u0171\1\302"+
    "\3\3\1\u0172\1\u0173\3\3\1\u0174\7\3\1\u0175\3\3"+
    "\1\0\1\u0176\6\0\2\3\3\0\4\3\1\u0177\25\3"+
    "\10\0\2\3\3\0\1\u0178\1\u0179\1\302\2\3\1\u017a"+
    "\4\3\1\u017b\2\3\1\u017c\7\3\1\u017d\4\3\10\0"+
    "\2\3\3\0\4\3\1\u017e\25\3\10\0\2\3\3\0"+
    "\3\3\1\u017f\1\u0180\25\3\10\0\2\3\3\0\10\3"+
    "\1\u0181\21\3\10\0\2\3\3\0\3\3\1\u0182\26\3"+
    "\10\0\2\3\3\0\1\u0183\3\3\1\u0184\2\3\1\u0185"+
    "\22\3\10\0\2\3\3\0\1\3\1\u0135\3\3\1\302"+
    "\1\u0186\1\3\1\u015d\21\3\10\0\2\3\3\0\24\3"+
    "\1\u0187\5\3\10\0\2\3\3\0\10\3\1\u0188\2\3"+
    "\1\u0183\3\3\1\365\12\3\10\0\2\3\3\0\2\3"+
    "\1\u0189\2\3\1\u018a\20\3\1\101\3\3\10\0\2\3"+
    "\3\0\1\45\4\3\1\332\2\3\1\u018b\1\u010d\12\3"+
    "\1\u018c\5\3\10\0\2\3\3\0\1\u018d\1\3\1\u0112"+
    "\1\u018e\4\3\1\u018f\1\3\1\u0190\17\3\2\0\1\u0191"+
    "\5\0\2\3\3\0\4\3\1\u0192\25\3\10\0\2\3"+
    "\3\0\1\u0193\2\3\1\u0194\1\u0195\2\3\1\u0196\7\3"+
    "\1\u0197\12\3\10\0\2\3\3\0\3\3\1\50\2\3"+
    "\1\101\1\3\1\u0198\2\3\1\u0156\1\3\1\u0144\14\3"+
    "\10\0\2\3\3\0\24\3\1\u0199\5\3\10\0\2\3"+
    "\3\0\1\u019a\3\3\1\57\3\3\1\u019b\2\3\1\u019c"+
    "\16\3\10\0\2\3\3\0\4\3\1\u019d\2\3\1\u019e"+
    "\22\3\10\0\2\3\3\0\7\3\1\u019f\22\3\10\0"+
    "\2\3\3\0\10\3\1\u01a0\21\3\10\0\2\3\3\0"+
    "\1\3\1\u0145\3\3\1\u0145\4\3\1\113\3\3\1\235"+
    "\2\3\1\u01a1\10\3\10\0\2\3\3\0\10\3\1\u012d"+
    "\1\3\1\113\17\3\10\0\2\3\3\0\1\u0156\1\3"+
    "\1\u01a2\1\3\1\u01a3\1\101\11\3\1\302\1\3\1\235"+
    "\1\302\7\3\10\0\2\3\3\0\1\u01a4\1\u01a5\10\3"+
    "\1\u01a6\4\3\1\u01a7\1\3\1\302\1\3\1\u01a8\2\3"+
    "\1\u01a9\3\3\10\0\2\3\3\0\1\315\3\3\1\u01aa"+
    "\25\3\10\0\2\3\3\0\1\u01ab\3\3\1\u01ac\17\3"+
    "\1\u0120\5\3\10\0\2\3\3\0\2\3\1\310\1\u01ad"+
    "\7\3\1\u01ae\16\3\10\0\2\3\3\0\24\3\1\u01af"+
    "\5\3\10\0\2\3\3\0\1\50\1\3\1\310\7\3"+
    "\1\u01b0\1\u01b1\16\3\15\0\1\u01b2\41\0\2\3\3\0"+
    "\17\3\1\302\12\3\10\0\2\3\3\0\1\3\1\u01b3"+
    "\6\3\1\u01b4\2\3\1\u01b5\5\3\1\u0183\10\3\10\0"+
    "\2\3\3\0\1\3\1\u01b6\2\3\1\50\1\332\1\3"+
    "\1\u01b7\2\3\1\u01b8\1\3\1\u01b9\15\3\10\0\2\3"+
    "\3\0\1\116\1\3\1\u01ba\23\3\1\u01bb\3\3\10\0"+
    "\2\3\3\0\17\3\1\u0112\4\3\1\u01bc\5\3\10\0"+
    "\2\3\3\0\10\3\1\u01bd\12\3\1\61\6\3\10\0"+
    "\2\3\3\0\2\3\1\302\1\50\1\3\1\u012d\2\3"+
    "\1\u01be\2\3\1\u0183\1\3\1\u01bf\3\3\1\u0183\3\3"+
    "\1\u018f\4\3\10\0\2\3\3\0\7\3\1\u01c0\1\3"+
    "\1\u01c1\1\3\1\u01c2\16\3\10\0\2\3\3\0\2\3"+
    "\1\u0112\2\3\1\u01c3\2\3\1\u01c4\2\101\1\3\1\u01c5"+
    "\7\3\1\u01c6\5\3\10\0\2\3\3\0\1\u01c7\7\3"+
    "\1\u01c8\21\3\2\0\1\u01c9\5\0\2\3\3\0\5\3"+
    "\1\u01ca\15\3\1\61\6\3\10\0\2\3\3\0\1\u01cb"+
    "\1\3\1\u01cc\7\3\1\u01cd\6\3\1\122\10\3\10\0"+
    "\2\3\3\0\12\3\1\u015b\10\3\1\61\6\3\10\0"+
    "\2\3\3\0\21\3\1\u01ce\10\3\10\0\2\3\3\0"+
    "\12\3\1\u01cf\17\3\10\0\2\3\3\0\14\3\1\u0162"+
    "\15\3\10\0\2\3\3\0\10\3\1\u01d0\21\3\10\0"+
    "\2\3\3\0\3\3\1\u01d1\4\3\1\u01d2\2\3\1\u0175"+
    "\16\3\10\0\2\3\3\0\10\3\1\u01d3\14\3\1\u01d4"+
    "\1\u01d5\3\3\10\0\2\3\3\0\4\3\1\u01d6\3\3"+
    "\1\u01d7\13\3\1\u01d8\5\3\10\0\2\3\3\0\14\3"+
    "\1\321\15\3\10\0\2\3\3\0\3\3\1\u01d9\1\u01da"+
    "\25\3\10\0\2\3\3\0\2\3\1\u01db\7\3\1\342"+
    "\17\3\10\0\2\3\3\0\16\3\1\302\13\3\10\0"+
    "\2\3\3\0\1\u01dc\6\3\1\u01dd\22\3\10\0\2\3"+
    "\3\0\13\3\1\u01de\16\3\10\0\2\3\3\0\3\3"+
    "\1\u01df\3\3\1\u01e0\22\3\10\0\2\3\3\0\10\3"+
    "\1\u01e1\21\3\27\0\1\273\43\0\1\273\74\0\1\40"+
    "\5\0\1\u01e2\45\0\2\3\3\0\3\3\1\u01e3\26\3"+
    "\10\0\2\3\3\0\4\3\1\u01e4\25\3\10\0\2\3"+
    "\3\0\10\3\1\u01e5\21\3\10\0\2\3\3\0\3\3"+
    "\1\u01e6\26\3\10\0\2\3\3\0\11\3\1\u01e7\20\3"+
    "\10\0\2\3\3\0\10\3\1\u015b\21\3\10\0\2\3"+
    "\3\0\14\3\1\u0144\15\3\10\0\2\3\3\0\2\3"+
    "\1\u01e8\1\3\1\u01e9\11\3\1\u0126\4\3\1\u01ea\6\3"+
    "\10\0\2\3\3\0\24\3\1\u01eb\5\3\10\0\2\3"+
    "\3\0\5\3\1\332\24\3\10\0\2\3\3\0\13\3"+
    "\1\61\16\3\10\0\2\3\3\0\23\3\1\u01ec\6\3"+
    "\10\0\2\3\3\0\25\3\1\u0120\4\3\10\0\2\3"+
    "\3\0\5\3\1\u01ed\24\3\10\0\2\3\3\0\7\3"+
    "\1\u01ee\22\3\10\0\2\3\3\0\4\3\1\u01ef\25\3"+
    "\10\0\2\3\3\0\7\3\1\u01f0\22\3\27\0\1\u01f1"+
    "\1\u01f2\1\u01f3\25\0\2\3\3\0\17\3\1\u01f4\1\u0120"+
    "\11\3\10\0\2\3\3\0\12\3\1\101\17\3\10\0"+
    "\2\3\3\0\24\3\1\u01f5\1\u01f6\4\3\10\0\2\3"+
    "\3\0\4\3\1\331\25\3\10\0\2\3\3\0\10\3"+
    "\1\u01f7\21\3\10\0\2\3\3\0\1\u01f8\31\3\10\0"+
    "\2\3\3\0\32\3\2\0\1\u01f9\5\0\2\3\3\0"+
    "\7\3\1\u01fa\22\3\10\0\2\3\3\0\11\3\1\u0112"+
    "\1\302\17\3\10\0\2\3\3\0\3\3\1\u01fb\26\3"+
    "\10\0\2\3\3\0\13\3\1\101\16\3\10\0\2\3"+
    "\3\0\1\3\1\u01fc\30\3\10\0\2\3\3\0\13\3"+
    "\1\u0156\16\3\10\0\2\3\3\0\2\3\1\u01e3\27\3"+
    "\10\0\2\3\3\0\12\3\1\u0112\17\3\10\0\2\3"+
    "\3\0\13\3\1\u01fd\16\3\10\0\2\3\3\0\5\3"+
    "\1\302\24\3\10\0\2\3\3\0\15\3\1\u01fe\14\3"+
    "\10\0\2\3\3\0\4\3\1\50\14\3\1\u0112\10\3"+
    "\10\0\2\3\3\0\1\u01ff\31\3\10\0\2\3\3\0"+
    "\5\3\1\u0200\2\3\1\336\1\3\1\u0129\17\3\10\0"+
    "\2\3\3\0\2\3\1\u0201\27\3\10\0\2\3\3\0"+
    "\2\3\1\u0202\27\3\10\0\2\3\3\0\31\3\1\u015b"+
    "\10\0\2\3\3\0\14\3\1\u012d\15\3\10\0\2\3"+
    "\3\0\13\3\1\u0203\16\3\10\0\2\3\3\0\2\3"+
    "\1\u0204\10\3\1\364\10\3\1\u012d\5\3\10\0\2\3"+
    "\3\0\1\u0205\31\3\10\0\2\3\3\0\5\3\1\u0206"+
    "\24\3\10\0\2\3\3\0\12\3\1\u0207\17\3\10\0"+
    "\2\3\3\0\1\3\1\u0145\30\3\10\0\2\3\3\0"+
    "\10\3\1\u0208\5\3\1\u0209\13\3\10\0\2\3\3\0"+
    "\7\3\1\116\22\3\10\0\2\3\3\0\4\3\1\u020a"+
    "\25\3\10\0\2\3\3\0\7\3\1\u020b\22\3\10\0"+
    "\2\3\3\0\1\u020c\31\3\10\0\2\3\3\0\1\u020d"+
    "\31\3\15\0\1\u020e\1\u020f\1\u0210\1\0\1\u0211\1\u0212"+
    "\1\u0213\1\u0214\1\u0215\1\u0216\1\u0217\1\u0218\1\u0219\1\u021a"+
    "\1\u021b\1\0\1\u021c\1\u021d\1\0\1\u021e\1\u021f\1\0"+
    "\1\u0220\13\0\2\3\3\0\2\3\1\u0221\27\3\10\0"+
    "\2\3\3\0\5\3\1\u0222\4\3\1\u0223\17\3\10\0"+
    "\2\3\3\0\2\3\1\u0224\27\3\10\0\2\3\3\0"+
    "\10\3\1\u0225\2\3\1\u0224\16\3\10\0\2\3\3\0"+
    "\13\3\1\u0226\10\3\1\u0227\5\3\10\0\2\3\3\0"+
    "\3\3\1\u0228\1\3\1\310\2\3\1\u0229\1\u022a\1\3"+
    "\1\u0226\3\3\1\u022b\12\3\10\0\2\3\3\0\4\3"+
    "\1\u022c\2\3\1\u01d4\22\3\10\0\2\3\3\0\7\3"+
    "\1\u022d\22\3\10\0\2\3\3\0\23\3\1\302\6\3"+
    "\10\0\2\3\3\0\4\3\1\u022e\2\3\1\u022f\22\3"+
    "\10\0\2\3\3\0\3\3\1\u0230\3\3\1\u0231\22\3"+
    "\10\0\2\3\3\0\7\3\1\u0232\14\3\1\u0233\5\3"+
    "\10\0\2\3\3\0\4\3\1\u0234\25\3\16\0\1\u0235"+
    "\2\0\1\u0236\35\0\2\3\3\0\7\3\1\u0237\22\3"+
    "\10\0\2\3\3\0\1\u0199\31\3\10\0\2\3\3\0"+
    "\1\302\31\3\10\0\2\3\3\0\1\344\31\3\10\0"+
    "\2\3\3\0\7\3\1\u0238\22\3\10\0\2\3\3\0"+
    "\7\3\1\107\22\3\10\0\2\3\3\0\4\3\1\230"+
    "\25\3\10\0\2\3\3\0\5\3\1\u0239\24\3\10\0"+
    "\2\3\3\0\3\3\1\u023a\26\3\10\0\2\3\3\0"+
    "\5\3\1\u0112\24\3\10\0\2\3\3\0\4\3\1\u023b"+
    "\25\3\10\0\2\3\3\0\3\3\1\u023c\26\3\10\0"+
    "\2\3\3\0\7\3\1\u0231\22\3\10\0\2\3\3\0"+
    "\21\3\1\u01ce\10\3\1\0\1\u023d\6\0\2\3\3\0"+
    "\23\3\1\u023e\6\3\10\0\2\3\3\0\13\3\1\u023f"+
    "\16\3\10\0\2\3\3\0\10\3\1\230\21\3\10\0"+
    "\2\3\3\0\3\3\1\u0240\26\3\16\0\1\u0241\57\0"+
    "\1\u0242\27\0\2\3\3\0\3\3\1\u01e3\20\3\1\u0243"+
    "\5\3\10\0\2\3\3\0\7\3\1\u0112\22\3\10\0"+
    "\2\3\3\0\2\3\1\u0244\4\3\1\u0245\22\3\10\0"+
    "\2\3\3\0\23\3\1\u0156\6\3\10\0\2\3\3\0"+
    "\7\3\1\302\13\3\1\u0246\6\3\1\0\1\u0247\6\0"+
    "\2\3\3\0\7\3\1\252\22\3\10\0\2\3\3\0"+
    "\32\3\1\0\1\u0248\6\0\2\3\3\0\4\3\1\u0249"+
    "\25\3\10\0\2\3\3\0\10\3\1\u01d2\21\3\10\0"+
    "\2\3\3\0\2\3\1\u024a\27\3\10\0\2\3\3\0"+
    "\21\3\1\u0183\10\3\10\0\2\3\3\0\7\3\1\u024b"+
    "\22\3\10\0\2\3\3\0\16\3\1\u0144\13\3\10\0"+
    "\2\3\3\0\21\3\1\u024c\10\3\10\0\2\3\3\0"+
    "\21\3\1\302\10\3\10\0\2\3\3\0\7\3\1\u024d"+
    "\22\3\10\0\2\3\3\0\7\3\1\u024e\22\3\10\0"+
    "\2\3\3\0\13\3\1\u0203\3\3\1\u0112\12\3\10\0"+
    "\2\3\3\0\24\3\1\u0169\5\3\10\0\2\3\3\0"+
    "\7\3\1\u0114\22\3\10\0\2\3\3\0\11\3\1\u024f"+
    "\20\3\15\0\1\u0250\41\0\2\3\3\0\23\3\1\321"+
    "\6\3\10\0\2\3\3\0\2\3\1\u0104\7\3\1\u0251"+
    "\17\3\10\0\2\3\3\0\3\3\1\u01a1\26\3\10\0"+
    "\2\3\3\0\23\3\1\u0252\6\3\10\0\2\3\3\0"+
    "\23\3\1\u0253\6\3\10\0\2\3\3\0\3\3\1\u0254"+
    "\26\3\10\0\2\3\3\0\24\3\1\u0255\5\3\10\0"+
    "\2\3\3\0\10\3\1\u0256\21\3\10\0\2\3\3\0"+
    "\1\u0257\31\3\10\0\2\3\3\0\6\3\1\u0258\16\3"+
    "\1\u0259\4\3\10\0\2\3\3\0\11\3\1\57\20\3"+
    "\10\0\2\3\3\0\7\3\1\u025a\22\3\10\0\2\3"+
    "\3\0\5\3\1\u025b\2\3\1\u025c\21\3\10\0\2\3"+
    "\3\0\23\3\1\u025d\6\3\10\0\2\3\3\0\3\3"+
    "\1\u025e\26\3\10\0\2\3\3\0\7\3\1\50\22\3"+
    "\10\0\2\3\3\0\20\3\1\302\11\3\10\0\2\3"+
    "\3\0\6\3\1\u025f\23\3\10\0\2\3\3\0\12\3"+
    "\1\u0260\1\u01e3\16\3\10\0\2\3\3\0\4\3\1\u0261"+
    "\25\3\10\0\2\3\3\0\15\3\1\u0262\14\3\10\0"+
    "\2\3\3\0\23\3\1\u0263\6\3\10\0\2\3\3\0"+
    "\7\3\1\u0264\22\3\10\0\2\3\3\0\17\3\1\321"+
    "\12\3\10\0\2\3\3\0\10\3\1\u0265\21\3\10\0"+
    "\2\3\3\0\16\3\1\u0266\13\3\10\0\2\3\3\0"+
    "\21\3\1\302\2\3\1\u0267\5\3\10\0\2\3\3\0"+
    "\7\3\1\302\2\3\1\u0268\5\3\1\302\11\3\10\0"+
    "\2\3\3\0\21\3\1\325\10\3\10\0\2\3\3\0"+
    "\2\3\1\u0104\4\3\1\235\22\3\10\0\2\3\3\0"+
    "\7\3\1\u0269\22\3\10\0\2\3\3\0\7\3\1\u026a"+
    "\22\3\10\0\2\3\3\0\2\3\1\u0104\27\3\10\0"+
    "\2\3\3\0\2\3\1\302\27\3\10\0\2\3\3\0"+
    "\2\3\1\u0183\1\u026b\26\3\10\0\2\3\3\0\7\3"+
    "\1\u026c\22\3\10\0\2\3\3\0\6\3\1\u026d\12\3"+
    "\1\302\10\3\10\0\2\3\3\0\17\3\1\u0112\12\3"+
    "\10\0\2\3\3\0\2\3\1\u026e\27\3\10\0\2\3"+
    "\3\0\7\3\1\u0260\22\3\10\0\2\3\3\0\24\3"+
    "\1\u026f\5\3\10\0\2\3\3\0\13\3\1\365\16\3"+
    "\10\0\2\3\3\0\32\3\2\0\1\u01c9\5\0\2\3"+
    "\3\0\13\3\1\321\16\3\10\0\2\3\3\0\7\3"+
    "\1\113\22\3\10\0\2\3\3\0\7\3\1\u0112\11\3"+
    "\1\302\10\3\10\0\2\3\3\0\10\3\1\u0270\21\3"+
    "\10\0\2\3\3\0\7\3\1\u0271\22\3\10\0\2\3"+
    "\3\0\4\3\1\u0272\25\3\10\0\2\3\3\0\2\3"+
    "\1\101\5\3\1\302\21\3\10\0\2\3\3\0\1\3"+
    "\1\u0273\10\3\1\u0274\17\3\10\0\2\3\3\0\15\3"+
    "\1\302\14\3\10\0\2\3\3\0\7\3\1\u0275\22\3"+
    "\10\0\2\3\3\0\21\3\1\u0276\10\3\10\0\2\3"+
    "\3\0\20\3\1\u0112\11\3\10\0\2\3\3\0\1\3"+
    "\1\u0277\4\3\1\u0278\23\3\10\0\2\3\3\0\15\3"+
    "\1\u01a1\14\3\10\0\2\3\3\0\2\3\1\u0144\27\3"+
    "\10\0\2\3\3\0\2\3\1\u0279\27\3\10\0\2\3"+
    "\3\0\5\3\1\u027a\24\3\10\0\2\3\3\0\7\3"+
    "\1\u027b\22\3\10\0\2\3\3\0\3\3\1\116\15\3"+
    "\1\u027c\2\3\1\u027d\5\3\10\0\2\3\3\0\7\3"+
    "\1\u027e\22\3\10\0\2\3\3\0\2\3\1\u0112\27\3"+
    "\17\0\1\u027f\37\0\2\3\3\0\14\3\1\302\15\3"+
    "\10\0\2\3\3\0\4\3\1\u0199\25\3\10\0\2\3"+
    "\3\0\2\3\1\u0165\10\3\1\u0280\16\3\10\0\2\3"+
    "\3\0\26\3\1\u0281\3\3\10\0\2\3\3\0\1\u0282"+
    "\31\3\10\0\2\3\3\0\7\3\1\u0283\22\3\10\0"+
    "\2\3\3\0\4\3\1\u0284\25\3\10\0\2\3\3\0"+
    "\15\3\1\u0285\14\3\10\0\2\3\3\0\14\3\1\u0286"+
    "\15\3\10\0\2\3\3\0\3\3\1\u0287\26\3\10\0"+
    "\2\3\3\0\5\3\1\u0288\24\3\10\0\2\3\3\0"+
    "\24\3\1\u018c\5\3\10\0\2\3\3\0\1\50\31\3"+
    "\10\0\2\3\3\0\1\u0289\31\3\10\0\2\3\3\0"+
    "\11\3\1\u0112\20\3\10\0\2\3\3\0\23\3\1\230"+
    "\6\3\10\0\2\3\3\0\2\3\1\u0144\16\3\1\175"+
    "\10\3\10\0\2\3\3\0\12\3\1\u012d\1\u028a\5\3"+
    "\1\302\10\3\10\0\2\3\3\0\12\3\1\u0129\17\3"+
    "\10\0\2\3\3\0\2\3\1\u028b\27\3\10\0\2\3"+
    "\3\0\6\3\1\u0122\23\3\10\0\2\3\3\0\7\3"+
    "\1\u0183\22\3\10\0\2\3\3\0\12\3\1\u028c\17\3"+
    "\25\0\1\274\1\0\1\272\27\0\2\3\3\0\5\3"+
    "\1\u028d\24\3\10\0\2\3\3\0\2\3\1\u0197\27\3"+
    "\10\0\2\3\3\0\1\3\1\u028e\1\u0120\27\3\10\0"+
    "\2\3\3\0\11\3\1\u0197\1\3\1\u028f\16\3\10\0"+
    "\2\3\3\0\2\3\1\u0290\2\3\1\u0197\2\3\1\u0291"+
    "\21\3\10\0\2\3\3\0\1\u0292\1\3\1\u0293\15\3"+
    "\1\302\11\3\10\0\2\3\3\0\5\3\1\u012d\24\3"+
    "\10\0\2\3\3\0\1\3\1\u0294\30\3\10\0\2\3"+
    "\3\0\13\3\1\u01e3\7\3\1\u0295\6\3\10\0\2\3"+
    "\3\0\13\3\1\u0113\16\3\10\0\2\3\3\0\15\3"+
    "\1\u0296\1\u0297\2\3\1\u0298\2\3\1\116\5\3\10\0"+
    "\2\3\3\0\2\3\1\u0299\10\3\1\u029a\16\3\10\0"+
    "\2\3\3\0\14\3\1\61\15\3\10\0\2\3\3\0"+
    "\15\3\1\u0278\14\3\10\0\2\3\3\0\12\3\1\u029b"+
    "\17\3\10\0\2\3\3\0\2\3\1\u029c\20\3\1\321"+
    "\6\3\10\0\2\3\3\0\24\3\1\u029d\5\3\10\0"+
    "\2\3\3\0\1\u029e\31\3\10\0\2\3\3\0\4\3"+
    "\1\u029f\25\3\10\0\2\3\3\0\4\3\1\u02a0\25\3"+
    "\10\0\2\3\3\0\3\3\1\u02a0\26\3\10\0\2\3"+
    "\3\0\4\3\1\u02a1\25\3\10\0\2\3\3\0\2\3"+
    "\1\u028b\11\3\1\u0114\15\3\10\0\2\3\3\0\1\3"+
    "\1\u016c\30\3\10\0\2\3\3\0\4\3\1\u012d\25\3"+
    "\10\0\2\3\3\0\12\3\1\u02a2\17\3\10\0\2\3"+
    "\3\0\3\3\1\u02a3\26\3\10\0\2\3\3\0\5\3"+
    "\1\u02a4\2\3\1\u02a5\21\3\2\0\1\u02a6\5\0\2\3"+
    "\3\0\12\3\1\u02a7\17\3\10\0\2\3\3\0\2\3"+
    "\1\u02a8\27\3\27\0\1\272\27\0\2\3\3\0\2\3"+
    "\1\u02a9\27\3\10\0\2\3\3\0\2\3\1\u015b\4\3"+
    "\1\u02aa\22\3\10\0\2\3\3\0\2\3\1\u02ab\20\3"+
    "\1\u02ac\6\3\10\0\2\3\3\0\2\3\1\u02ad\27\3"+
    "\10\0\2\3\3\0\13\3\1\u0183\16\3\10\0\2\3"+
    "\3\0\12\3\1\u0186\17\3\10\0\2\3\3\0\5\3"+
    "\1\230\24\3\10\0\2\3\3\0\7\3\1\u02ae\22\3"+
    "\10\0\2\3\3\0\3\3\1\u02af\26\3\10\0\2\3"+
    "\3\0\5\3\1\u016c\24\3\10\0\2\3\3\0\3\3"+
    "\1\316\26\3\10\0\2\3\3\0\21\3\1\u02b0\10\3"+
    "\10\0\2\3\3\0\15\3\1\u02b1\14\3\10\0\2\3"+
    "\3\0\10\3\1\u02b2\21\3\10\0\2\3\3\0\2\3"+
    "\1\u02b3\27\3\10\0\2\3\3\0\7\3\1\u02b4\22\3"+
    "\10\0\2\3\3\0\10\3\1\u02b5\2\3\1\101\16\3"+
    "\10\0\2\3\3\0\7\3\1\u02b6\22\3\10\0\2\3"+
    "\3\0\10\3\1\302\2\3\1\101\16\3\10\0\2\3"+
    "\3\0\2\3\1\302\5\3\1\u0156\1\3\1\u02b7\6\3"+
    "\1\302\10\3\10\0\2\3\3\0\7\3\1\u01d2\3\3"+
    "\1\u0157\16\3\30\0\1\273\26\0\2\3\3\0\6\3"+
    "\1\305\12\3\1\u02b8\10\3\10\0\2\3\3\0\2\3"+
    "\1\u02b9\27\3\10\0\2\3\3\0\3\3\1\u02ba\26\3"+
    "\10\0\2\3\3\0\7\3\1\u02bb\22\3\10\0\2\3"+
    "\3\0\1\u02bc\31\3\10\0\2\3\3\0\12\3\1\u02bd"+
    "\17\3\10\0\2\3\3\0\17\3\1\365\12\3\10\0"+
    "\2\3\3\0\2\3\1\u02be\7\3\1\256\17\3\10\0"+
    "\2\3\3\0\13\3\1\u02bf\16\3\10\0\2\3\3\0"+
    "\7\3\1\374\22\3\10\0\2\3\3\0\2\3\1\u02c0"+
    "\27\3\10\0\2\3\3\0\12\3\1\u0281\17\3\10\0"+
    "\2\3\3\0\2\3\1\u02c1\27\3\10\0\2\3\3\0"+
    "\10\3\1\u02c2\21\3\10\0\2\3\3\0\7\3\1\u02c3"+
    "\22\3\10\0\2\3\3\0\11\3\1\230\20\3\10\0"+
    "\2\3\3\0\24\3\1\u02c4\5\3\10\0\2\3\3\0"+
    "\12\3\1\u02c5\17\3\10\0\2\3\3\0\31\3\1\61"+
    "\10\0\2\3\3\0\2\3\1\u027a\27\3\10\0\2\3"+
    "\3\0\2\3\1\u02c6\27\3\10\0\2\3\3\0\13\3"+
    "\1\u027d\16\3\10\0\2\3\3\0\4\3\1\374\25\3"+
    "\11\0\1\u01e2\43\0\1\u02c7\1\0\2\3\3\0\4\3"+
    "\1\344\25\3\10\0\2\3\3\0\13\3\1\u02c8\16\3"+
    "\10\0\2\3\3\0\1\u02c9\31\3\10\0\2\3\3\0"+
    "\7\3\1\u02ca\22\3\10\0\2\3\3\0\1\113\31\3"+
    "\10\0\2\3\3\0\3\3\1\u02cb\17\3\1\u0246\6\3"+
    "\10\0\2\3\3\0\5\3\1\u0124\24\3\10\0\2\3"+
    "\3\0\4\3\1\u02cc\25\3\10\0\2\3\3\0\5\3"+
    "\1\u02cd\24\3\10\0\2\3\3\0\4\3\1\u02ce\25\3"+
    "\10\0\2\3\3\0\6\3\1\230\23\3\10\0\2\3"+
    "\3\0\1\u02cf\31\3\10\0\2\3\3\0\13\3\1\u02d0"+
    "\16\3\10\0\2\3\3\0\7\3\1\u02d1\22\3\21\0"+
    "\1\u02d2\46\0\1\u02d3\51\0\1\u02d4\32\0\2\3\3\0"+
    "\32\3\1\0\1\u02d5\6\0\2\3\3\0\2\3\1\230"+
    "\27\3\10\0\2\3\3\0\7\3\1\u01d2\22\3\10\0"+
    "\2\3\3\0\1\u02d6\31\3\10\0\2\3\3\0\21\3"+
    "\1\u01d2\10\3\17\0\1\273\37\0\2\3\3\0\12\3"+
    "\1\u02d7\13\3\1\u02d8\3\3\10\0\2\3\3\0\2\3"+
    "\1\u01e7\27\3\10\0\2\3\3\0\1\230\11\3\1\101"+
    "\17\3\10\0\2\3\3\0\4\3\1\u02d9\25\3\10\0"+
    "\2\3\3\0\1\u02da\31\3\10\0\2\3\3\0\10\3"+
    "\1\116\21\3\10\0\2\3\3\0\2\3\1\u02db\27\3"+
    "\10\0\2\3\3\0\7\3\1\50\14\3\1\u02db\5\3"+
    "\10\0\2\3\3\0\1\u02dc\31\3\10\0\2\3\3\0"+
    "\13\3\1\302\16\3\10\0\2\3\3\0\23\3\1\u02dd"+
    "\6\3\10\0\2\3\3\0\5\3\1\u0112\2\3\1\u01a1"+
    "\21\3\10\0\2\3\3\0\1\3\1\101\4\3\1\101"+
    "\23\3\10\0\2\3\3\0\21\3\1\u02de\10\3\10\0"+
    "\2\3\3\0\1\3\1\u0104\30\3\10\0\2\3\3\0"+
    "\16\3\1\u015b\13\3\10\0\2\3\3\0\10\3\1\u02df"+
    "\21\3\10\0\2\3\3\0\10\3\1\u0258\21\3\10\0"+
    "\2\3\3\0\10\3\1\u02e0\21\3\10\0\2\3\3\0"+
    "\17\3\1\u027a\12\3\16\0\1\u02e1\11\0\1\u02e2\33\0"+
    "\1\u02e3\3\0\1\u02e4\5\0\1\u02e5\10\0\1\u02e6\1\u02e7"+
    "\22\0\1\u02e8\6\0\1\u02e9\1\u02ea\12\0\1\u02eb\1\u02ec"+
    "\37\0\1\u02ed\40\0\1\u02ee\42\0\1\u02ef\1\u02f0\2\0"+
    "\1\u02e7\37\0\1\u02e7\21\0\1\u02f1\33\0\1\u02f2\14\0"+
    "\1\u02f3\22\0\1\u02f4\3\0\1\u02ef\2\0\1\u02f5\42\0"+
    "\1\u02f6\1\u02f7\2\0\1\u02f8\37\0\1\u02ea\1\0\1\u02f9"+
    "\1\u02fa\3\0\1\u02fb\2\0\1\u02fc\2\0\1\u02fd\5\0"+
    "\1\u02fe\23\0\1\u02ff\2\0\1\u02f3\1\u0300\3\0\1\u0301"+
    "\36\0\1\u02ea\11\0\1\u0302\11\0\1\u02e7\31\0\1\u0303"+
    "\1\u0304\13\0\1\u0305\27\0\1\u02fe\1\0\1\u0306\37\0"+
    "\1\u0307\3\0\1\u02f0\2\0\1\u0308\1\u0309\36\0\1\u030a"+
    "\2\0\1\u02e7\3\0\1\u030b\14\0\1\u030c\27\0\1\u030d"+
    "\5\0\1\u030e\33\0\1\u030f\2\0\1\u0310\1\u0311\2\0"+
    "\1\u0312\2\0\1\u02ea\27\0\2\3\3\0\23\3\1\u0313"+
    "\6\3\10\0\2\3\3\0\2\3\1\u0314\27\3\10\0"+
    "\2\3\3\0\25\3\1\u01d4\1\u0315\3\3\10\0\2\3"+
    "\3\0\2\3\1\u0316\16\3\1\u0313\10\3\10\0\2\3"+
    "\3\0\7\3\1\u0224\22\3\10\0\2\3\3\0\13\3"+
    "\1\u0317\16\3\10\0\2\3\3\0\10\3\1\u0318\21\3"+
    "\10\0\2\3\3\0\7\3\1\u0319\22\3\10\0\2\3"+
    "\3\0\13\3\1\u031a\16\3\10\0\2\3\3\0\32\3"+
    "\2\0\1\u02a6\5\0\2\3\3\0\24\3\1\u031b\5\3"+
    "\10\0\2\3\3\0\12\3\1\u031c\17\3\10\0\2\3"+
    "\3\0\12\3\1\367\17\3\10\0\2\3\3\0\10\3"+
    "\1\u031d\1\3\1\u031e\17\3\10\0\2\3\3\0\21\3"+
    "\1\u01f6\10\3\10\0\2\3\3\0\1\3\1\u0156\30\3"+
    "\10\0\2\3\3\0\7\3\1\u031f\22\3\10\0\2\3"+
    "\3\0\13\3\1\u0200\16\3\10\0\2\3\3\0\10\3"+
    "\1\u0320\21\3\15\0\1\u0321\56\0\1\u0322\31\0\2\3"+
    "\3\0\13\3\1\u0149\16\3\10\0\2\3\3\0\10\3"+
    "\1\u0323\21\3\10\0\2\3\3\0\6\3\1\u0120\23\3"+
    "\10\0\2\3\3\0\11\3\1\u0324\20\3\10\0\2\3"+
    "\3\0\13\3\1\u0325\16\3\10\0\2\3\3\0\4\3"+
    "\1\u0326\25\3\21\0\1\u0327\35\0\2\3\3\0\2\3"+
    "\1\u0183\27\3\10\0\2\3\3\0\7\3\1\u0328\22\3"+
    "\10\0\2\3\3\0\1\3\1\101\30\3\21\0\1\u0329"+
    "\46\0\1\u032a\35\0\2\3\3\0\10\3\1\u032b\21\3"+
    "\10\0\2\3\3\0\1\3\1\u0221\30\3\10\0\2\3"+
    "\3\0\2\3\1\u0316\27\3\10\0\2\3\3\0\3\3"+
    "\1\u032c\26\3\15\0\1\u032d\50\0\1\u032e\37\0\2\3"+
    "\3\0\21\3\1\u032f\10\3\10\0\2\3\3\0\23\3"+
    "\1\u0330\6\3\10\0\2\3\3\0\10\3\1\u0331\21\3"+
    "\10\0\2\3\3\0\7\3\1\344\22\3\10\0\2\3"+
    "\3\0\10\3\1\u0332\21\3\10\0\2\3\3\0\10\3"+
    "\1\u02c5\21\3\10\0\2\3\3\0\15\3\1\u015b\14\3"+
    "\34\0\1\273\22\0\2\3\3\0\3\3\1\u0333\13\3"+
    "\1\u027a\12\3\10\0\2\3\3\0\7\3\1\u0334\22\3"+
    "\10\0\2\3\3\0\2\3\1\u0335\27\3\10\0\2\3"+
    "\3\0\10\3\1\u0336\21\3\10\0\2\3\3\0\6\3"+
    "\1\u0135\23\3\10\0\2\3\3\0\6\3\1\u0337\23\3"+
    "\10\0\2\3\3\0\10\3\1\u0338\21\3\10\0\2\3"+
    "\3\0\1\u02ca\31\3\10\0\2\3\3\0\7\3\1\76"+
    "\22\3\10\0\2\3\3\0\10\3\1\u0339\21\3\10\0"+
    "\2\3\3\0\32\3\1\0\1\u033a\6\0\2\3\3\0"+
    "\17\3\1\u033b\12\3\10\0\2\3\3\0\7\3\1\u033c"+
    "\22\3\10\0\2\3\3\0\4\3\1\302\25\3\10\0"+
    "\2\3\3\0\23\3\1\u0112\6\3\10\0\2\3\3\0"+
    "\12\3\1\u033d\17\3\10\0\2\3\3\0\10\3\1\u012d"+
    "\21\3\10\0\2\3\3\0\4\3\1\u033e\25\3\10\0"+
    "\2\3\3\0\3\3\1\u033f\26\3\10\0\2\3\3\0"+
    "\10\3\1\u0340\21\3\10\0\2\3\3\0\3\3\1\364"+
    "\26\3\10\0\2\3\3\0\7\3\1\u0341\22\3\10\0"+
    "\2\3\3\0\2\3\1\101\27\3\10\0\2\3\3\0"+
    "\3\3\1\u0342\26\3\10\0\2\3\3\0\4\3\1\u02b6"+
    "\25\3\10\0\2\3\3\0\10\3\1\u0114\21\3\10\0"+
    "\2\3\3\0\1\3\1\302\30\3\10\0\2\3\3\0"+
    "\10\3\1\u027a\21\3\10\0\2\3\3\0\24\3\1\u02bd"+
    "\5\3\10\0\2\3\3\0\12\3\1\u0343\17\3\10\0"+
    "\2\3\3\0\3\3\1\116\26\3\10\0\2\3\3\0"+
    "\1\3\1\u0336\15\3\1\u0112\12\3\10\0\2\3\3\0"+
    "\5\3\1\u0240\24\3\10\0\2\3\3\0\4\3\1\113"+
    "\25\3\10\0\2\3\3\0\20\3\1\u015b\11\3\10\0"+
    "\2\3\3\0\12\3\1\u027a\17\3\10\0\2\3\3\0"+
    "\7\3\1\u0156\22\3\10\0\2\3\3\0\7\3\1\u0344"+
    "\22\3\10\0\2\3\3\0\7\3\1\230\22\3\10\0"+
    "\2\3\3\0\12\3\1\u0120\17\3\10\0\2\3\3\0"+
    "\3\3\1\u0345\3\3\1\u0259\7\3\1\374\3\3\1\u0313"+
    "\6\3\10\0\2\3\3\0\2\3\1\u01e8\1\3\1\u01e9"+
    "\11\3\1\u0126\2\3\1\371\1\3\1\u01ea\6\3\10\0"+
    "\2\3\3\0\3\3\1\u0144\26\3\10\0\2\3\3\0"+
    "\2\3\1\277\27\3\10\0\2\3\3\0\10\3\1\u0112"+
    "\21\3\40\0\1\u0346\16\0\2\3\3\0\3\3\1\u02d6"+
    "\3\3\1\u0347\22\3\10\0\2\3\3\0\3\3\1\u0348"+
    "\26\3\10\0\2\3\3\0\10\3\1\u0349\21\3\10\0"+
    "\2\3\3\0\5\3\1\u0170\2\3\1\u034a\21\3\10\0"+
    "\2\3\3\0\2\3\1\u025f\27\3\10\0\2\3\3\0"+
    "\15\3\1\u034b\14\3\10\0\2\3\3\0\5\3\1\144"+
    "\24\3\10\0\2\3\3\0\5\3\1\u015b\24\3\10\0"+
    "\2\3\3\0\10\3\1\101\21\3\10\0\2\3\3\0"+
    "\7\3\1\u028c\22\3\10\0\2\3\3\0\23\3\1\u0144"+
    "\6\3\10\0\2\3\3\0\6\3\1\u028c\23\3\10\0"+
    "\2\3\3\0\23\3\1\u0197\6\3\10\0\2\3\3\0"+
    "\7\3\1\u0197\22\3\10\0\2\3\3\0\23\3\1\u034c"+
    "\6\3\10\0\2\3\3\0\7\3\1\u034d\22\3\10\0"+
    "\2\3\3\0\6\3\1\u034e\23\3\10\0\2\3\3\0"+
    "\7\3\1\u034f\22\3\10\0\2\3\3\0\1\u0350\31\3"+
    "\10\0\2\3\3\0\7\3\1\u0351\22\3\10\0\2\3"+
    "\3\0\1\u0352\11\3\1\u0353\17\3\10\0\2\3\3\0"+
    "\24\3\1\u0231\5\3\10\0\2\3\3\0\2\3\1\u015b"+
    "\27\3\10\0\2\3\3\0\3\3\1\u016b\26\3\10\0"+
    "\2\3\3\0\17\3\1\u028c\12\3\10\0\2\3\3\0"+
    "\4\3\1\u0354\25\3\10\0\2\3\3\0\2\3\1\u0355"+
    "\27\3\10\0\2\3\3\0\24\3\1\u0356\5\3\10\0"+
    "\2\3\3\0\14\3\1\u01d2\15\3\10\0\2\3\3\0"+
    "\5\3\1\u01f8\24\3\10\0\2\3\3\0\10\3\1\u0277"+
    "\21\3\10\0\2\3\3\0\21\3\1\u0181\10\3\10\0"+
    "\2\3\3\0\5\3\1\u0357\24\3\10\0\2\3\3\0"+
    "\6\3\1\u0112\23\3\10\0\2\3\3\0\13\3\1\u0358"+
    "\16\3\25\0\1\274\31\0\2\3\3\0\4\3\1\u0359"+
    "\25\3\10\0\2\3\3\0\7\3\1\u035a\22\3\10\0"+
    "\2\3\3\0\3\3\1\u035b\26\3\10\0\2\3\3\0"+
    "\1\3\1\u027d\30\3\10\0\2\3\3\0\1\u0271\31\3"+
    "\10\0\2\3\3\0\4\3\1\u035c\25\3\10\0\2\3"+
    "\3\0\4\3\1\50\25\3\10\0\2\3\3\0\13\3"+
    "\1\u035d\16\3\10\0\2\3\3\0\5\3\1\u035e\24\3"+
    "\10\0\2\3\3\0\12\3\1\u01d0\17\3\1\u035f\7\0"+
    "\2\3\3\0\3\3\1\u01a1\13\3\1\u0112\12\3\10\0"+
    "\2\3\3\0\13\3\1\252\16\3\10\0\2\3\3\0"+
    "\4\3\1\u02db\25\3\10\0\2\3\3\0\13\3\1\u0175"+
    "\16\3\10\0\2\3\3\0\3\3\1\u02d6\26\3\10\0"+
    "\2\3\3\0\25\3\1\u0330\4\3\10\0\2\3\3\0"+
    "\2\3\1\u0360\27\3\10\0\2\3\3\0\10\3\1\u0361"+
    "\21\3\10\0\2\3\3\0\12\3\1\230\17\3\10\0"+
    "\2\3\3\0\13\3\1\u0362\16\3\10\0\2\3\3\0"+
    "\2\3\1\364\27\3\10\0\2\3\3\0\1\u0363\31\3"+
    "\10\0\2\3\3\0\23\3\1\u034f\6\3\10\0\2\3"+
    "\3\0\2\3\1\u0313\27\3\10\0\2\3\3\0\7\3"+
    "\1\u0259\7\3\1\374\3\3\1\u0313\6\3\10\0\2\3"+
    "\3\0\3\3\1\u0345\26\3\10\0\2\3\3\0\5\3"+
    "\1\u0364\24\3\10\0\2\3\3\0\10\3\1\u0120\21\3"+
    "\10\0\2\3\3\0\4\3\1\u0365\25\3\10\0\2\3"+
    "\3\0\7\3\1\365\22\3\10\0\2\3\3\0\13\3"+
    "\1\230\16\3\10\0\2\3\3\0\1\3\1\u0366\30\3"+
    "\10\0\2\3\3\0\5\3\1\u0175\24\3\10\0\2\3"+
    "\3\0\11\3\1\u0124\20\3\10\0\2\3\3\0\14\3"+
    "\1\252\15\3\10\0\2\3\3\0\21\3\1\230\10\3"+
    "\10\0\2\3\3\0\24\3\1\u0367\5\3\10\0\2\3"+
    "\3\0\21\3\1\u020d\10\3\10\0\2\3\3\0\2\3"+
    "\1\365\27\3\10\0\2\3\3\0\15\3\1\u0112\14\3"+
    "\22\0\1\u0368\45\0\1\u0369\54\0\1\u036a\62\0\1\u036b"+
    "\13\0\2\3\3\0\16\3\1\u0278\13\3\10\0\2\3"+
    "\3\0\7\3\1\u036c\22\3\10\0\2\3\3\0\24\3"+
    "\1\u036d\5\3\10\0\2\3\3\0\5\3\1\u036e\24\3"+
    "\10\0\2\3\3\0\5\3\1\235\24\3\10\0\2\3"+
    "\3\0\10\3\1\235\21\3\10\0\2\3\3\0\3\3"+
    "\1\u036f\26\3\10\0\2\3\3\0\7\3\1\u0203\22\3"+
    "\10\0\2\3\3\0\10\3\1\u024c\21\3\10\0\2\3"+
    "\3\0\10\3\1\u0370\21\3\10\0\2\3\3\0\21\3"+
    "\1\u02c8\10\3\16\0\1\u0371\65\0\1\u02f0\30\0\1\u0372"+
    "\2\0\1\u0373\2\0\1\u0374\1\0\1\u0375\45\0\1\u030e"+
    "\41\0\1\u0376\2\0\1\u0377\37\0\1\u0378\3\0\1\u0379"+
    "\44\0\1\u02f0\56\0\1\u02e2\5\0\1\u030e\26\0\1\u0372"+
    "\11\0\1\u0375\53\0\1\u02f0\32\0\1\u037a\53\0\1\u02f3"+
    "\45\0\1\u02f3\46\0\1\u037b\64\0\1\u030e\36\0\1\u037c"+
    "\31\0\1\u037b\14\0\1\u037d\36\0\1\u02f0\61\0\1\u030e"+
    "\35\0\1\u02e7\52\0\1\u037e\11\0\1\u030e\25\0\1\u02e2"+
    "\6\0\1\u030e\33\0\1\u037f\1\0\1\u02f0\44\0\1\u0380"+
    "\3\0\1\u0381\17\0\1\u0382\24\0\1\u02f0\3\0\1\u02f3"+
    "\42\0\1\u02f0\2\0\1\u037b\1\0\1\u0383\2\0\1\u0375"+
    "\43\0\1\u0306\46\0\1\u0384\43\0\1\u0385\44\0\1\u0372"+
    "\1\u02e7\1\0\1\u02e7\4\0\1\u02e2\44\0\1\u0386\41\0"+
    "\1\u0387\43\0\1\u02ea\47\0\1\u0388\4\0\1\u0389\3\0"+
    "\1\u038a\37\0\1\u038b\3\0\1\u038c\42\0\1\u038d\13\0"+
    "\1\u02f0\36\0\1\u0381\44\0\1\u038e\42\0\1\u038f\45\0"+
    "\1\u0385\2\0\1\u0390\60\0\1\u0211\7\0\1\u030e\21\0"+
    "\1\u0391\56\0\1\u02e7\57\0\1\u0392\34\0\1\u02f0\51\0"+
    "\1\u0375\36\0\1\u02f0\2\0\1\u0393\4\0\1\u0375\7\0"+
    "\1\u02f0\34\0\1\u0394\45\0\1\u0375\32\0\2\3\3\0"+
    "\3\3\1\u0345\13\3\1\374\12\3\10\0\2\3\3\0"+
    "\3\3\1\u0345\3\3\1\u0259\7\3\1\374\12\3\10\0"+
    "\2\3\3\0\1\u0395\31\3\10\0\2\3\3\0\26\3"+
    "\1\u0396\3\3\10\0\2\3\3\0\6\3\1\u0397\23\3"+
    "\10\0\2\3\3\0\26\3\1\252\3\3\10\0\2\3"+
    "\3\0\7\3\1\340\22\3\10\0\2\3\3\0\12\3"+
    "\1\u0398\17\3\10\0\2\3\3\0\21\3\1\u0399\10\3"+
    "\10\0\2\3\3\0\11\3\1\u039a\20\3\30\0\1\u039b"+
    "\54\0\1\u039c\20\0\2\3\3\0\3\3\1\u039d\26\3"+
    "\10\0\2\3\3\0\3\3\1\u039e\26\3\10\0\2\3"+
    "\3\0\24\3\1\u039f\5\3\43\0\1\u03a0\13\0\2\3"+
    "\3\0\12\3\1\u03a1\17\3\25\0\1\u03a2\37\0\1\u03a3"+
    "\40\0\2\3\3\0\1\u036d\31\3\10\0\2\3\3\0"+
    "\5\3\1\u03a4\24\3\17\0\1\u03a5\67\0\1\u03a6\16\0"+
    "\2\3\3\0\17\3\1\252\12\3\10\0\2\3\3\0"+
    "\7\3\1\u03a7\22\3\10\0\2\3\3\0\2\3\1\u03a8"+
    "\27\3\10\0\2\3\3\0\5\3\1\u03a9\24\3\10\0"+
    "\2\3\3\0\7\3\1\u03aa\22\3\10\0\2\3\3\0"+
    "\10\3\1\321\21\3\10\0\2\3\3\0\7\3\1\u03ab"+
    "\22\3\10\0\2\3\3\0\7\3\1\u03ac\7\3\1\302"+
    "\12\3\10\0\2\3\3\0\10\3\1\u03ad\21\3\10\0"+
    "\2\3\3\0\3\3\1\u0165\26\3\17\0\1\u03ae\1\u03af"+
    "\36\0\2\3\3\0\2\3\1\u03b0\1\3\1\u01e9\11\3"+
    "\1\u0126\13\3\10\0\2\3\3\0\10\3\1\365\21\3"+
    "\10\0\2\3\3\0\17\3\1\u0399\12\3\10\0\2\3"+
    "\3\0\5\3\1\u03b1\24\3\10\0\2\3\3\0\5\3"+
    "\1\101\24\3\10\0\2\3\3\0\3\3\1\u01e7\26\3"+
    "\10\0\2\3\3\0\4\3\1\76\25\3\10\0\2\3"+
    "\3\0\7\3\1\321\22\3\10\0\2\3\3\0\5\3"+
    "\1\u0156\24\3\10\0\2\3\3\0\7\3\1\u0315\22\3"+
    "\15\0\1\u03b2\41\0\2\3\3\0\12\3\1\u03b3\17\3"+
    "\10\0\2\3\3\0\13\3\1\u025f\16\3\10\0\2\3"+
    "\3\0\1\u03b4\31\3\10\0\2\3\3\0\1\u03b5\31\3"+
    "\10\0\2\3\3\0\7\3\1\305\22\3\10\0\2\3"+
    "\3\0\7\3\1\u03b6\22\3\10\0\2\3\3\0\1\u0362"+
    "\31\3\10\0\2\3\3\0\10\3\1\u03b7\21\3\10\0"+
    "\2\3\3\0\26\3\1\u03b8\3\3\10\0\2\3\3\0"+
    "\15\3\1\u03b9\14\3\10\0\2\3\3\0\10\3\1\u03ba"+
    "\21\3\10\0\2\3\3\0\16\3\1\u03bb\13\3\10\0"+
    "\2\3\3\0\7\3\1\u0354\22\3\10\0\2\3\3\0"+
    "\11\3\1\302\20\3\10\0\2\3\3\0\3\3\1\u034f"+
    "\26\3\10\0\2\3\3\0\13\3\1\u010f\16\3\10\0"+
    "\2\3\3\0\7\3\1\355\22\3\10\0\2\3\3\0"+
    "\14\3\1\u0112\15\3\10\0\2\3\3\0\10\3\1\u03bc"+
    "\21\3\10\0\2\3\3\0\4\3\1\u03bd\25\3\10\0"+
    "\2\3\3\0\5\3\1\u01c3\24\3\10\0\2\3\3\0"+
    "\2\3\1\u01f7\27\3\10\0\2\3\3\0\3\3\1\u03be"+
    "\26\3\31\0\1\u03bf\25\0\2\3\3\0\23\3\1\u015b"+
    "\6\3\10\0\2\3\3\0\7\3\1\u03c0\22\3\10\0"+
    "\2\3\3\0\13\3\1\107\16\3\10\0\2\3\3\0"+
    "\6\3\1\101\23\3\10\0\2\3\3\0\21\3\1\u03c1"+
    "\10\3\10\0\2\3\3\0\24\3\1\u03c2\5\3\10\0"+
    "\2\3\3\0\2\3\1\u03c3\27\3\10\0\2\3\3\0"+
    "\6\3\1\u03c4\23\3\23\0\1\u03c5\45\0\1\u03c5\53\0"+
    "\1\u03c6\44\0\1\u03c7\31\0\2\3\3\0\13\3\1\u03c8"+
    "\16\3\10\0\2\3\3\0\12\3\1\u01a1\17\3\10\0"+
    "\2\3\3\0\1\u0344\31\3\10\0\2\3\3\0\5\3"+
    "\1\u0260\24\3\10\0\2\3\3\0\4\3\1\u03c9\25\3"+
    "\24\0\1\u03ca\40\0\1\u03cb\46\0\1\u0312\55\0\1\u02ea"+
    "\50\0\1\u02f0\47\0\1\u030e\33\0\1\u02f3\53\0\1\u03cc"+
    "\45\0\1\u0376\47\0\1\u02e2\62\0\1\u02f0\37\0\1\u03cd"+
    "\46\0\1\u02ea\36\0\1\u02ed\54\0\1\u02f3\14\0\1\u030e"+
    "\26\0\1\u037b\2\0\1\u02e7\53\0\1\u02f0\52\0\1\u02ea"+
    "\36\0\1\u02f0\35\0\1\u02e2\4\0\1\u037b\4\0\1\u0375"+
    "\50\0\1\u02f0\42\0\1\u02ea\7\0\1\u02f0\30\0\1\u030e"+
    "\50\0\1\u02e4\45\0\1\u02f3\46\0\1\u03ce\50\0\1\u03cf"+
    "\41\0\1\u02e2\60\0\1\u037b\35\0\1\u030e\50\0\1\u03d0"+
    "\50\0\1\u02e2\17\0\1\u030e\31\0\1\u02f0\45\0\1\u03d1"+
    "\42\0\1\u03d2\15\0\1\u02f0\33\0\1\u02f5\33\0\2\3"+
    "\3\0\5\3\1\u03d3\24\3\10\0\2\3\3\0\4\3"+
    "\1\u03d4\25\3\10\0\2\3\3\0\23\3\1\u03d5\6\3"+
    "\10\0\2\3\3\0\3\3\1\u03d6\26\3\10\0\2\3"+
    "\3\0\1\u03d7\31\3\24\0\1\u03d8\46\0\1\u03d9\32\0"+
    "\2\3\3\0\13\3\1\u03ac\16\3\10\0\2\3\3\0"+
    "\2\3\1\u01f6\27\3\10\0\2\3\3\0\13\3\1\u0260"+
    "\16\3\10\0\2\3\3\0\25\3\1\u03da\4\3\30\0"+
    "\1\u03db\53\0\1\273\21\0\2\3\3\0\6\3\1\252"+
    "\23\3\50\0\1\u03dc\13\0\1\u03dd\41\0\2\3\3\0"+
    "\10\3\1\310\21\3\10\0\2\3\3\0\23\3\1\u03de"+
    "\6\3\10\0\2\3\3\0\11\3\1\u0276\20\3\10\0"+
    "\2\3\3\0\12\3\1\u01d0\17\3\10\0\2\3\3\0"+
    "\2\3\1\u03df\27\3\10\0\2\3\3\0\1\u03e0\31\3"+
    "\40\0\1\u03e1\51\0\1\u03d8\13\0\2\3\3\0\23\3"+
    "\1\u0246\6\3\10\0\2\3\3\0\13\3\1\u02b5\16\3"+
    "\17\0\1\u03d8\37\0\2\3\3\0\7\3\1\u03e2\22\3"+
    "\10\0\2\3\3\0\2\3\1\u03e3\27\3\10\0\2\3"+
    "\3\0\12\3\1\321\17\3\10\0\2\3\3\0\10\3"+
    "\1\u03e4\21\3\10\0\2\3\3\0\1\u03e5\31\3\10\0"+
    "\2\3\3\0\24\3\1\342\5\3\10\0\2\3\3\0"+
    "\13\3\1\u0341\16\3\10\0\2\3\3\0\2\3\1\235"+
    "\27\3\10\0\2\3\3\0\12\3\1\u03e6\17\3\10\0"+
    "\2\3\3\0\21\3\1\371\10\3\10\0\2\3\3\0"+
    "\5\3\1\u03e7\24\3\10\0\2\3\3\0\2\3\1\u015d"+
    "\27\3\21\0\1\u03e8\35\0\2\3\3\0\21\3\1\373"+
    "\10\3\10\0\2\3\3\0\12\3\1\u015b\17\3\10\0"+
    "\2\3\3\0\13\3\1\u0112\16\3\10\0\2\3\3\0"+
    "\3\3\1\315\26\3\10\0\2\3\3\0\23\3\1\107"+
    "\6\3\50\0\1\u03e9\46\0\1\u03ea\17\0\1\u03eb\35\0"+
    "\2\3\3\0\13\3\1\u01a1\16\3\10\0\2\3\3\0"+
    "\14\3\1\u027a\15\3\32\0\1\u02e7\54\0\1\u02f0\31\0"+
    "\1\u030e\40\0\1\u0389\55\0\1\u02ef\45\0\1\u02f0\61\0"+
    "\1\u030e\35\0\1\u03ec\51\0\1\u03cb\26\0\2\3\3\0"+
    "\21\3\1\374\10\3\10\0\2\3\3\0\10\3\1\u03ed"+
    "\21\3\10\0\2\3\3\0\4\3\1\u03ee\25\3\10\0"+
    "\2\3\3\0\6\3\1\u01e6\23\3\10\0\2\3\3\0"+
    "\2\3\1\277\7\3\1\u0112\17\3\25\0\1\u03ef\31\0"+
    "\2\3\3\0\7\3\1\u02b2\22\3\24\0\1\u03f0\37\0"+
    "\1\u03f1\50\0\1\u03f2\37\0\2\3\3\0\7\3\1\u03f3"+
    "\22\3\10\0\2\3\3\0\3\3\1\u03f4\26\3\10\0"+
    "\2\3\3\0\13\3\1\u03f5\16\3\21\0\1\u03f6\35\0"+
    "\2\3\3\0\13\3\1\u03c2\16\3\10\0\2\3\3\0"+
    "\7\3\1\u01a1\22\3\10\0\2\3\3\0\32\3\1\0"+
    "\1\u03f7\6\0\2\3\3\0\15\3\1\u0104\14\3\10\0"+
    "\2\3\3\0\17\3\1\u0341\12\3\10\0\2\3\3\0"+
    "\1\u02db\31\3\25\0\1\u03f8\36\0\1\u03f9\46\0\1\u03fa"+
    "\57\0\1\u03a0\50\0\1\u03fb\26\0\2\3\3\0\7\3"+
    "\1\310\22\3\10\0\2\3\3\0\24\3\1\u01f5\5\3"+
    "\50\0\1\u03fc\25\0\1\u03fd\27\0\2\3\3\0\12\3"+
    "\1\u03fe\17\3\10\0\2\3\3\0\1\3\1\u0112\30\3"+
    "\10\0\2\3\3\0\13\3\1\364\16\3\41\0\1\u03ff"+
    "\26\0\1\u0400\62\0\1\u0401\41\0\1\u03d8\46\0\1\u03f2"+
    "\35\0\1\u0402\46\0\1\u0403\56\0\1\u0404\27\0\2\3"+
    "\3\0\7\3\1\u0405\22\3\23\0\1\u0406\50\0\1\u03d8"+
    "\41\0\1\u0407\43\0\1\u0408\52\0\1\u03d8\35\0\2\3"+
    "\3\0\13\3\1\u0409\16\3\40\0\1\u03d8\30\0\1\u040a"+
    "\46\0\1\u037b\34\0\2\3\3\0\13\3\1\310\16\3"+
    "\23\0\1\u040b\32\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[38610];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\35\1\1\11\47\1\1\0\13\1\1\0"+
    "\13\1\1\0\73\1\1\0\35\1\1\0\1\11\3\0"+
    "\24\1\1\0\46\1\1\0\16\1\1\0\23\1\2\0"+
    "\25\1\1\0\101\1\1\0\32\1\1\0\40\1\1\0"+
    "\26\1\1\0\30\1\1\0\16\1\3\0\5\1\1\0"+
    "\24\1\23\0\24\1\2\0\6\1\1\0\3\1\2\0"+
    "\4\1\2\0\7\1\1\0\56\1\1\0\46\1\1\0"+
    "\40\1\1\11\12\1\4\0\13\1\17\0\1\11\22\0"+
    "\1\1\17\0\16\1\2\0\4\1\1\0\1\1\2\0"+
    "\2\1\2\0\13\1\1\0\13\1\1\0\30\1\1\0"+
    "\10\1\4\0\5\1\22\0\1\1\21\0\6\1\2\0"+
    "\3\1\1\11\1\1\2\0\1\1\2\0\7\1\2\0"+
    "\2\1\1\0\14\1\1\0\5\1\3\0\2\1\11\0"+
    "\5\1\1\11\1\0\1\1\3\0\3\1\1\0\6\1"+
    "\5\0\2\1\1\0\1\11\1\0\1\11\3\1\10\0"+
    "\1\1\5\0\1\11\1\1\3\0\1\1\1\0\1\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1035];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
      private Symbol symbol(int type, Object value){
        return new Symbol(type, yyline, yycolumn, value);
    }
    private Symbol symbol(int type){
        return new Symbol(type, yyline, yycolumn);
    }


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public LexerCup(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  public LexerCup(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          zzR = false;
          break;
        case '\r':
          yyline++;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
          }
          break;
        default:
          zzR = false;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 26: 
          { return new Symbol(sym.Adverbio_Modo, yychar, yyline, yytext());
          }
        case 31: break;
        case 1: 
          { return new Symbol(sym.ERROR, yychar, yyline, yytext());
          }
        case 32: break;
        case 15: 
          { return new Symbol(sym.Adverbio_Cantidad, yychar, yyline, yytext());
          }
        case 33: break;
        case 11: 
          { return new Symbol(sym.Verbo_Singular, yychar, yyline, yytext());
          }
        case 34: break;
        case 19: 
          { return new Symbol(sym.Verbo_Plural, yychar, yyline, yytext());
          }
        case 35: break;
        case 8: 
          { return new Symbol(sym.Conjucion_Subordinante, yychar, yyline, yytext());
          }
        case 36: break;
        case 9: 
          { return new Symbol(sym.Interjeccion, yychar, yyline, yytext());
          }
        case 37: break;
        case 10: 
          { return new Symbol(sym.Adverbio_Lugar, yychar, yyline, yytext());
          }
        case 38: break;
        case 4: 
          { return new Symbol(sym.Articulo_Indefinido, yychar, yyline, yytext());
          }
        case 39: break;
        case 14: 
          { return new Symbol(sym.Adjetivo_Posesivo, yychar, yyline, yytext());
          }
        case 40: break;
        case 6: 
          { return new Symbol(sym.Signo_Puntuacion, yychar, yyline, yytext());
          }
        case 41: break;
        case 16: 
          { return new Symbol(sym.Contraccion, yychar, yyline, yytext());
          }
        case 42: break;
        case 7: 
          { return new Symbol(sym.Preposicion, yychar, yyline, yytext());
          }
        case 43: break;
        case 17: 
          { return new Symbol(sym.Sustantivo, yychar, yyline, yytext());
          }
        case 44: break;
        case 22: 
          { return new Symbol(sym.Adjetivo_Calificativo, yychar, yyline, yytext());
          }
        case 45: break;
        case 2: 
          { return new Symbol(sym.Numero, yychar, yyline, yytext());
          }
        case 46: break;
        case 23: 
          { return new Symbol(sym.Adverbio_Tiempo, yychar, yyline, yytext());
          }
        case 47: break;
        case 13: 
          { return new Symbol(sym.Adverbio_Negacion, yychar, yyline, yytext());
          }
        case 48: break;
        case 12: 
          { return new Symbol(sym.Conjucion_Cordinantes, yychar, yyline, yytext());
          }
        case 49: break;
        case 30: 
          { return new Symbol(sym.Adverbio_Afirmacion, yychar, yyline, yytext());
          }
        case 50: break;
        case 20: 
          { return new Symbol(sym.Numeral_Cardinal, yychar, yyline, yytext());
          }
        case 51: break;
        case 29: 
          { return new Symbol(sym.Adverbio_Duda, yychar, yyline, yytext());
          }
        case 52: break;
        case 25: 
          { return new Symbol(sym.Adjetivo_Demostrativo, yychar, yyline, yytext());
          }
        case 53: break;
        case 18: 
          { return new Symbol(sym.Adjetivo_Indefinido, yychar, yyline, yytext());
          }
        case 54: break;
        case 28: 
          { return new Symbol(sym.Numeral_Ordinal, yychar, yyline, yytext());
          }
        case 55: break;
        case 27: 
          { return new Symbol(sym.Verbo, yychar, yyline, yytext());
          }
        case 56: break;
        case 5: 
          { return new Symbol(sym.Pronombre_Personal, yychar, yyline, yytext());
          }
        case 57: break;
        case 21: 
          { return new Symbol(sym.Articulo_Definido, yychar, yyline, yytext());
          }
        case 58: break;
        case 3: 
          { /*Ignore*/
          }
        case 59: break;
        case 24: 
          { return new Symbol(sym.Pronombre_Interrogativo, yychar, yyline, yytext());
          }
        case 60: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            zzDoEOF();
              { return new java_cup.runtime.Symbol(sym.EOF); }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
