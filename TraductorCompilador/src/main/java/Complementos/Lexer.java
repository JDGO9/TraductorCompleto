/* The following code was generated by JFlex 1.4.3 on 22/05/22 09:22 AM */

package Complementos;
import javax.swing.table.DefaultTableModel;
import static Complementos.Tokens.*;
import Interfaz.Compilador;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 22/05/22 09:22 AM from the specification file
 * <tt>C:/Users/Kathya Ortiz/Documents/NetBeansProjects/AnalizadorLexicoS/src/Complementos/Lexer.flex</tt>
 */
public class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = {
     0,  0,  0,  0,  0,  0,  0,  0,  0,  3,  5,  0,  0,  3,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
    33, 36,  0,  0,  0,  0,  0, 34, 37, 38,  0,  0,  3, 32, 35,  4, 
     2,  2,  2,  2,  2,  2,  2,  2,  2,  2, 36, 36,  0,  0,  0, 36, 
     0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 
     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 36,  0, 36,  0,  1, 
     0,  6, 20,  7, 23, 13, 28, 12, 25,  9, 29, 22, 16, 15, 11, 10, 
    19, 30, 14, 17,  8, 26, 27, 18, 24, 21, 31, 36,  0, 36,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0, 36,  0,  0,  0,  0,  0,  0,  0,  0,  0, 36,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 36,  0,  0,  0, 36, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
  };

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\1\1\5\1\6"+
    "\2\2\1\7\25\2\1\10\1\1\2\10\1\4\2\2"+
    "\1\11\1\2\1\6\3\2\1\12\3\2\1\13\1\2"+
    "\1\13\16\2\1\7\1\14\1\2\1\15\1\2\1\12"+
    "\1\0\3\2\1\11\1\16\5\2\1\11\1\0\2\2"+
    "\1\17\10\2\1\0\20\2\1\7\1\20\11\2\1\21"+
    "\14\2\1\7\16\2\1\11\3\2\1\0\11\2\1\7"+
    "\3\2\1\7\1\11\16\2\1\0\1\22\3\0\3\2"+
    "\1\23\4\2\1\24\1\16\1\2\1\25\6\2\1\24"+
    "\1\2\1\0\23\2\1\23\15\2\1\21\4\2\1\0"+
    "\2\26\4\2\1\27\1\2\1\20\5\2\1\0\10\2"+
    "\1\30\5\2\1\14\1\2\1\20\1\2\1\11\2\0"+
    "\4\2\1\17\1\2\1\31\16\2\1\0\1\2\1\23"+
    "\25\2\1\23\43\2\1\26\5\2\1\0\1\2\1\23"+
    "\14\2\1\7\2\2\1\23\10\2\1\0\3\2\1\32"+
    "\1\2\1\32\3\2\1\11\7\2\1\13\13\2\1\7"+
    "\2\2\1\0\16\2\1\7\1\20\2\2\1\32\2\2"+
    "\1\20\1\0\10\2\1\14\4\2\1\11\12\2\1\0"+
    "\16\2\3\0\1\14\4\2\1\0\7\2\1\23\14\2"+
    "\23\0\3\2\1\33\5\2\2\7\2\2\1\11\6\2"+
    "\2\0\6\2\1\0\1\2\1\7\1\2\2\0\2\2"+
    "\1\26\1\2\2\0\7\2\1\0\30\2\1\24\2\2"+
    "\1\31\15\2\1\31\1\24\3\2\1\0\6\2\1\30"+
    "\1\2\1\23\3\2\1\34\6\2\1\23\21\2\1\20"+
    "\1\0\11\2\1\30\21\2\1\26\4\2\1\3\12\2"+
    "\4\0\10\2\1\23\2\2\17\0\1\35\22\0\1\35"+
    "\17\0\1\36\4\2\1\20\1\14\7\2\2\0\1\24"+
    "\3\2\1\0\1\2\2\0\2\2\2\0\2\2\1\17"+
    "\3\2\1\26\4\2\1\0\6\2\1\37\4\2\1\0"+
    "\6\2\1\32\12\2\1\7\6\2\1\0\10\2\4\0"+
    "\5\2\22\0\1\35\21\0\4\2\1\40\1\2\2\0"+
    "\3\2\1\11\1\2\2\0\1\2\2\0\7\2\2\0"+
    "\2\2\1\0\14\2\1\0\5\2\3\0\2\2\11\0"+
    "\5\2\1\12\1\0\1\2\3\0\3\2\1\0\2\2"+
    "\1\12\3\2\5\0\2\2\1\0\1\40\1\0\1\16"+
    "\3\2\10\0\1\2\5\0\1\17\1\2\3\0\1\2"+
    "\1\0\1\30";

  private static int [] zzUnpackAction() {
    int [] result = new int[1036];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\47\0\116\0\165\0\234\0\303\0\47\0\352"+
    "\0\u0111\0\u0138\0\u015f\0\u0186\0\u01ad\0\u01d4\0\u01fb\0\u0222"+
    "\0\u0249\0\u0270\0\u0297\0\u02be\0\u02e5\0\u030c\0\u0333\0\u035a"+
    "\0\u0381\0\u03a8\0\u03cf\0\u03f6\0\u041d\0\u0444\0\u046b\0\u0492"+
    "\0\47\0\u04b9\0\u04e0\0\u0507\0\u052e\0\u0555\0\u057c\0\u05a3"+
    "\0\u05ca\0\u05f1\0\u0618\0\u063f\0\u0666\0\u068d\0\u06b4\0\u06db"+
    "\0\u0702\0\116\0\u0729\0\u0750\0\u0777\0\u079e\0\u07c5\0\u07ec"+
    "\0\u0813\0\u083a\0\u0861\0\u0888\0\u08af\0\u08d6\0\u08fd\0\u0924"+
    "\0\u094b\0\u0972\0\u0999\0\u09c0\0\u09e7\0\u0a0e\0\u0a35\0\116"+
    "\0\u0a5c\0\u0a83\0\u0aaa\0\u0ad1\0\u0af8\0\u0b1f\0\u0b46\0\u0b6d"+
    "\0\u0b94\0\u0bbb\0\u0be2\0\u0c09\0\u0c30\0\u0c57\0\u0c7e\0\u0ca5"+
    "\0\u0ccc\0\u0cf3\0\u0d1a\0\u0d41\0\u0d68\0\u0d8f\0\u0db6\0\u0ddd"+
    "\0\u0e04\0\u0e2b\0\u0e52\0\u0e79\0\u0ea0\0\u0ec7\0\u0eee\0\u0f15"+
    "\0\u0f3c\0\u0f63\0\u0f8a\0\u0fb1\0\u0fd8\0\u0fff\0\u1026\0\u104d"+
    "\0\u1074\0\u109b\0\u10c2\0\u10e9\0\u1110\0\u1137\0\u115e\0\u1185"+
    "\0\u11ac\0\u11d3\0\u11fa\0\u1221\0\u1248\0\u126f\0\u1296\0\u12bd"+
    "\0\u12e4\0\u130b\0\u1332\0\u1359\0\u1380\0\u13a7\0\u13ce\0\u13f5"+
    "\0\u141c\0\u1443\0\u146a\0\u1491\0\u14b8\0\u14df\0\u1506\0\u152d"+
    "\0\u1554\0\u157b\0\u15a2\0\u15c9\0\u15f0\0\u1617\0\u163e\0\u1665"+
    "\0\116\0\u168c\0\u16b3\0\u16da\0\u1701\0\u1728\0\u174f\0\u1776"+
    "\0\u179d\0\u17c4\0\u17eb\0\u1812\0\u1839\0\u1860\0\u1887\0\u18ae"+
    "\0\u18d5\0\u18fc\0\116\0\u1923\0\u194a\0\u1971\0\u1998\0\u19bf"+
    "\0\u19e6\0\u1a0d\0\u1a34\0\u1a5b\0\u1a82\0\u1aa9\0\u1ad0\0\u1af7"+
    "\0\u1b1e\0\u1b45\0\u1b6c\0\47\0\u1b93\0\u1bba\0\u1be1\0\u1c08"+
    "\0\u1c2f\0\u1c56\0\116\0\u1c7d\0\u1ca4\0\u1ccb\0\u1cf2\0\u1d19"+
    "\0\116\0\u1d40\0\u1d67\0\u1d8e\0\u1db5\0\u1ddc\0\u1e03\0\u1e2a"+
    "\0\u1e51\0\116\0\u1e78\0\u1e9f\0\u1ec6\0\u1eed\0\u1f14\0\u1f3b"+
    "\0\u1f62\0\u1f89\0\u1fb0\0\u1fd7\0\u1ffe\0\u2025\0\u204c\0\u2073"+
    "\0\u209a\0\u20c1\0\u20e8\0\u210f\0\u2136\0\u215d\0\u2184\0\u21ab"+
    "\0\u21d2\0\u21f9\0\u2220\0\u2247\0\u226e\0\u2295\0\u22bc\0\u22e3"+
    "\0\u230a\0\u2331\0\u2358\0\u237f\0\u23a6\0\116\0\u23cd\0\u23f4"+
    "\0\u241b\0\u2442\0\u2469\0\u2490\0\116\0\u24b7\0\u24de\0\u2505"+
    "\0\u252c\0\u2553\0\u257a\0\u25a1\0\u25c8\0\u25ef\0\u2616\0\u263d"+
    "\0\u2664\0\u268b\0\u26b2\0\u26d9\0\u2700\0\u2727\0\u274e\0\u2775"+
    "\0\u279c\0\u27c3\0\116\0\u27ea\0\u2811\0\u2838\0\u285f\0\u2886"+
    "\0\u28ad\0\u28d4\0\u28fb\0\u2922\0\u2949\0\u2970\0\u2997\0\u29be"+
    "\0\u29e5\0\u2a0c\0\u2a33\0\u2a5a\0\u2a81\0\u2aa8\0\u2acf\0\u2af6"+
    "\0\u2b1d\0\u2b44\0\u2b6b\0\u2b92\0\u2bb9\0\u2be0\0\u2c07\0\u2c2e"+
    "\0\u2c55\0\u2c7c\0\u2ca3\0\u2cca\0\u2cf1\0\u2d18\0\u2d3f\0\u2d66"+
    "\0\u2d8d\0\u2db4\0\u2ddb\0\u2e02\0\u2e29\0\u2e50\0\u2e77\0\u2e9e"+
    "\0\u2ec5\0\u2eec\0\u2f13\0\u2f3a\0\u2f61\0\u2f88\0\u2faf\0\u2fd6"+
    "\0\u2ffd\0\u3024\0\u304b\0\u3072\0\u3099\0\u30c0\0\u30e7\0\u310e"+
    "\0\u3135\0\u315c\0\u3183\0\u31aa\0\u31d1\0\u31f8\0\u321f\0\u25a1"+
    "\0\u3246\0\u326d\0\u3294\0\u32bb\0\u32e2\0\u3309\0\u3330\0\u3357"+
    "\0\u337e\0\u33a5\0\u33cc\0\u33f3\0\u341a\0\u3441\0\u3468\0\u348f"+
    "\0\u34b6\0\u34dd\0\u3504\0\u352b\0\u3552\0\u3579\0\u35a0\0\u35c7"+
    "\0\u35ee\0\u3615\0\u363c\0\u3663\0\u368a\0\u36b1\0\u36d8\0\u36ff"+
    "\0\u321f\0\u3726\0\u374d\0\u3774\0\u379b\0\u37c2\0\u37e9\0\u3810"+
    "\0\u3837\0\u385e\0\u3885\0\u1d67\0\u38ac\0\u337e\0\u38d3\0\u38fa"+
    "\0\u3921\0\u3948\0\u396f\0\u3996\0\u39bd\0\u39e4\0\u3a0b\0\u3a32"+
    "\0\u3a59\0\u3a80\0\u3aa7\0\u3ace\0\u3af5\0\u3b1c\0\u3b43\0\116"+
    "\0\u3b6a\0\u3b91\0\u3bb8\0\u3bdf\0\u3c06\0\u3c2d\0\u3c54\0\u3c7b"+
    "\0\u3ca2\0\u3cc9\0\u3cf0\0\u2f88\0\u3d17\0\u3d3e\0\u3d65\0\u3d8c"+
    "\0\u3db3\0\u3dda\0\u3e01\0\u3e28\0\u3e4f\0\u3e76\0\u3e9d\0\u3ec4"+
    "\0\u3eeb\0\u3f12\0\u3f39\0\u3f60\0\u3f87\0\u3fae\0\u3fd5\0\u3ffc"+
    "\0\u4023\0\u404a\0\u4071\0\u4098\0\u40bf\0\u40e6\0\u410d\0\u4134"+
    "\0\u415b\0\u10c2\0\u4182\0\u41a9\0\u41d0\0\u41f7\0\u421e\0\u4245"+
    "\0\u426c\0\u4293\0\u42ba\0\u42e1\0\u4308\0\u432f\0\u4356\0\u437d"+
    "\0\u43a4\0\u43cb\0\116\0\u43f2\0\u4419\0\u4440\0\u4467\0\u448e"+
    "\0\u44b5\0\u44dc\0\u4503\0\u452a\0\u4551\0\u4578\0\u459f\0\u45c6"+
    "\0\u45ed\0\u4614\0\u463b\0\u4662\0\u4689\0\u46b0\0\u46d7\0\u46fe"+
    "\0\u4725\0\u474c\0\u4773\0\u479a\0\u47c1\0\u47e8\0\u480f\0\u4836"+
    "\0\u485d\0\u4884\0\u48ab\0\u48d2\0\u48f9\0\u4920\0\u4947\0\u496e"+
    "\0\u4995\0\u49bc\0\u49e3\0\u4a0a\0\u4a31\0\u4a58\0\u4a7f\0\u4aa6"+
    "\0\u4acd\0\u4af4\0\u4b1b\0\u4b42\0\u4b69\0\u4b90\0\u4bb7\0\u4bde"+
    "\0\u4c05\0\u4c2c\0\u4c53\0\u4c7a\0\u4ca1\0\u4cc8\0\u4cef\0\u4d16"+
    "\0\u4d3d\0\u4d64\0\u4d8b\0\u4db2\0\u4dd9\0\u4e00\0\u4e27\0\u4e4e"+
    "\0\u4e75\0\u4e9c\0\u4ec3\0\u4eea\0\u4f11\0\u4f38\0\u4f5f\0\u4f86"+
    "\0\u4fad\0\u4fd4\0\u4ffb\0\u5022\0\116\0\u5049\0\u5070\0\u5097"+
    "\0\u50be\0\u50e5\0\u510c\0\u5133\0\u515a\0\u5181\0\u51a8\0\u51cf"+
    "\0\u51f6\0\u521d\0\u5244\0\u526b\0\u5292\0\u52b9\0\u52e0\0\u5307"+
    "\0\u532e\0\u5355\0\u537c\0\u53a3\0\u53ca\0\u53f1\0\u5418\0\u543f"+
    "\0\u5466\0\u548d\0\u54b4\0\u54db\0\u5502\0\u5529\0\u5550\0\u5577"+
    "\0\u559e\0\u55c5\0\u55ec\0\u5613\0\u563a\0\u5661\0\u5688\0\u56af"+
    "\0\u56d6\0\u56fd\0\u5724\0\u574b\0\u5772\0\u5799\0\u57c0\0\u57e7"+
    "\0\u580e\0\u5835\0\u585c\0\u5883\0\u58aa\0\u58d1\0\u58f8\0\u591f"+
    "\0\u5946\0\u596d\0\u5994\0\u59bb\0\u59e2\0\u5a09\0\u5a30\0\u5a57"+
    "\0\u5a7e\0\u5aa5\0\u5acc\0\u5af3\0\u5b1a\0\u5b41\0\u5b68\0\u5b8f"+
    "\0\u5bb6\0\u5bdd\0\u5c04\0\u5c2b\0\u5c52\0\u5c79\0\u5ca0\0\u5cc7"+
    "\0\u5cee\0\u5d15\0\116\0\u5d3c\0\u5d63\0\u5d8a\0\u5db1\0\u5dd8"+
    "\0\u5dff\0\u5e26\0\u5e4d\0\u5e74\0\u5e9b\0\u5ec2\0\u3cc9\0\u5ee9"+
    "\0\u5f10\0\u5f37\0\u5f5e\0\u5f85\0\116\0\u5fac\0\u5fd3\0\u5ffa"+
    "\0\u6021\0\u6048\0\u606f\0\u1728\0\u6096\0\u60bd\0\u60e4\0\u610b"+
    "\0\u6132\0\u6159\0\u6180\0\u61a7\0\u61ce\0\u61f5\0\u621c\0\u6243"+
    "\0\u626a\0\u6291\0\u62b8\0\u62df\0\u6306\0\u632d\0\u6354\0\u637b"+
    "\0\u63a2\0\u63c9\0\u63f0\0\u6417\0\u643e\0\u6465\0\u648c\0\u64b3"+
    "\0\u64da\0\u6501\0\u6528\0\u654f\0\u6576\0\u659d\0\u65c4\0\u65eb"+
    "\0\u6612\0\u05a3\0\u6639\0\u6660\0\u6687\0\u66ae\0\u66d5\0\u66fc"+
    "\0\u6723\0\u674a\0\u4440\0\u6771\0\u6798\0\u67bf\0\u67e6\0\47"+
    "\0\u680d\0\u6834\0\u685b\0\u6882\0\u68a9\0\u68d0\0\u68f7\0\u691e"+
    "\0\u6945\0\u696c\0\u6993\0\u69ba\0\u69e1\0\u6a08\0\u6a2f\0\u6a56"+
    "\0\u6a7d\0\u6aa4\0\u6acb\0\u6af2\0\u6b19\0\u6b40\0\u6b67\0\u6b8e"+
    "\0\u6bb5\0\u6bdc\0\u6c03\0\u6c2a\0\u6c51\0\u6c78\0\u6c9f\0\u6cc6"+
    "\0\u6ced\0\u6d14\0\u6d3b\0\u6d62\0\u6d89\0\u6db0\0\u6dd7\0\u6dfe"+
    "\0\47\0\u6e25\0\u6e4c\0\u6e73\0\u6e9a\0\u6ec1\0\u6ee8\0\u6f0f"+
    "\0\u6f36\0\u6f5d\0\u6f84\0\u6fab\0\u6fd2\0\u6ff9\0\u7020\0\u7047"+
    "\0\u706e\0\u7095\0\u70bc\0\u70e3\0\u710a\0\u7131\0\u7158\0\u717f"+
    "\0\u71a6\0\u71cd\0\u71f4\0\u721b\0\u7242\0\u7269\0\u7290\0\u72b7"+
    "\0\u72de\0\u7305\0\u732c\0\116\0\u7353\0\u2490\0\u737a\0\u73a1"+
    "\0\u6528\0\u73c8\0\u543f\0\u73ef\0\u7416\0\u743d\0\u7464\0\u748b"+
    "\0\u74b2\0\u74d9\0\u7500\0\u33a5\0\u7527\0\u754e\0\u7575\0\u759c"+
    "\0\u75c3\0\u75ea\0\u7611\0\u7638\0\u765f\0\u7686\0\u76ad\0\u76d4"+
    "\0\u76fb\0\u7722\0\u7749\0\u7770\0\u7797\0\u5d15\0\u77be\0\u77e5"+
    "\0\u780c\0\u7833\0\u785a\0\u7881\0\u78a8\0\u78cf\0\u78f6\0\u791d"+
    "\0\u7944\0\116\0\u796b\0\u7992\0\u79b9\0\u79e0\0\u7a07\0\u7a2e"+
    "\0\u7a55\0\u7a7c\0\u7aa3\0\u7aca\0\u7af1\0\u7b18\0\u7b3f\0\u7b66"+
    "\0\u7b8d\0\u7bb4\0\u7bdb\0\u7c02\0\u7c29\0\u7c50\0\u7c77\0\u7c9e"+
    "\0\u25a1\0\u7cc5\0\u7cec\0\u7d13\0\u7d3a\0\u7d61\0\u7d88\0\u7daf"+
    "\0\u7dd6\0\u7dfd\0\u7e24\0\u7e4b\0\u7e72\0\u7e99\0\u7ec0\0\u7ee7"+
    "\0\u7f0e\0\u7f35\0\u7f5c\0\u7f83\0\u7faa\0\u7fd1\0\u7ff8\0\u801f"+
    "\0\u8046\0\u806d\0\u8094\0\u80bb\0\u80e2\0\u8109\0\u8130\0\u8157"+
    "\0\u817e\0\u81a5\0\u81cc\0\u81f3\0\u821a\0\u8241\0\u8268\0\u828f"+
    "\0\u82b6\0\u82dd\0\u8304\0\u832b\0\u8352\0\u8379\0\u83a0\0\u83c7"+
    "\0\u83ee\0\u8415\0\u843c\0\u8463\0\u848a\0\u84b1\0\u84d8\0\u84ff"+
    "\0\u8526\0\u854d\0\u8574\0\u859b\0\u85c2\0\u85e9\0\u8610\0\u8637"+
    "\0\u865e\0\116\0\u8685\0\u86ac\0\u86d3\0\u86fa\0\u8721\0\u8748"+
    "\0\47\0\u876f\0\u8796\0\u87bd\0\u87e4\0\u880b\0\u8832\0\u8859"+
    "\0\u8880\0\u88a7\0\u5b1a\0\u88ce\0\u88f5\0\u891c\0\u8943\0\u896a"+
    "\0\u8991\0\u89b8\0\u89df\0\u8a06\0\u8a2d\0\u8a54\0\u8a7b\0\u8aa2"+
    "\0\u8ac9\0\u8af0\0\u8b17\0\u8b3e\0\u8b65\0\u8b8c\0\u8bb3\0\u8bda"+
    "\0\u8c01\0\u8c28\0\u8c4f\0\u8c76\0\u8c9d\0\u8cc4\0\u8ceb\0\u8d12"+
    "\0\u8d39\0\u8d60\0\u8d87\0\u8dae\0\u8dd5\0\u8dfc\0\u8e23\0\u8e4a"+
    "\0\u8e71\0\u8e98\0\u8ebf\0\u8ee6\0\u8f0d\0\u8f34\0\u8f5b\0\u8f82"+
    "\0\47\0\u8fa9\0\u8fd0\0\u8ff7\0\u901e\0\u9045\0\u906c\0\u9093"+
    "\0\u90ba\0\u90e1\0\u9108\0\u912f\0\u9156\0\u917d\0\u91a4\0\u91cb"+
    "\0\u91f2\0\u9219\0\u9240\0\u9267\0\u928e\0\u92b5\0\u92dc\0\u9303"+
    "\0\47\0\u932a\0\47\0\u9351\0\u9378\0\u939f\0\u93c6\0\u93ed"+
    "\0\u9414\0\u943b\0\u9462\0\u9489\0\u94b0\0\u94d7\0\u94fe\0\u9525"+
    "\0\u954c\0\u9573\0\u959a\0\u95c1\0\47\0\u95e8\0\u960f\0\u9636"+
    "\0\u965d\0\u9684\0\u96ab\0\47";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1036];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31"+
    "\1\3\1\32\1\33\1\34\1\35\1\36\1\37\1\40"+
    "\1\41\1\5\1\42\1\43\1\41\1\44\1\41\50\0"+
    "\2\3\3\0\32\3\11\0\1\4\47\0\1\5\35\0"+
    "\1\5\11\0\1\45\43\0\2\3\3\0\1\46\1\47"+
    "\1\50\1\51\1\3\1\52\1\53\1\3\1\54\1\3"+
    "\1\55\1\56\1\57\1\60\1\61\1\62\1\3\1\63"+
    "\1\3\1\64\2\3\1\65\3\3\10\0\2\3\3\0"+
    "\1\66\2\3\1\67\1\70\2\3\1\71\1\72\1\3"+
    "\1\73\10\3\1\74\6\3\10\0\2\3\3\0\3\3"+
    "\1\75\1\76\2\3\1\77\4\3\1\100\6\3\1\101"+
    "\6\3\10\0\2\3\3\0\1\3\1\102\1\103\2\3"+
    "\1\104\2\3\1\105\2\3\1\106\5\3\1\107\4\3"+
    "\1\110\3\3\2\0\1\111\5\0\2\3\3\0\1\3"+
    "\1\112\1\113\1\114\1\3\1\115\2\3\1\116\1\3"+
    "\1\117\2\3\1\120\1\121\4\3\1\62\1\122\1\123"+
    "\1\124\3\3\2\0\1\125\5\0\2\3\3\0\1\126"+
    "\2\3\1\127\1\130\2\3\1\131\14\3\1\132\5\3"+
    "\10\0\2\3\3\0\1\133\2\3\1\134\1\135\2\3"+
    "\1\136\1\137\1\3\1\140\17\3\2\0\1\141\5\0"+
    "\2\3\3\0\1\142\2\3\1\143\1\3\1\144\1\145"+
    "\1\3\1\62\1\146\1\147\4\3\1\102\2\3\1\150"+
    "\1\62\1\3\1\151\4\3\10\0\2\3\3\0\1\152"+
    "\2\3\1\153\1\154\2\3\1\155\14\3\1\156\5\3"+
    "\10\0\2\3\3\0\1\157\2\3\1\160\1\161\2\3"+
    "\1\162\7\3\1\163\4\3\1\164\5\3\10\0\2\3"+
    "\3\0\1\165\2\3\1\166\1\167\2\3\1\170\22\3"+
    "\10\0\2\3\3\0\1\171\1\172\1\173\1\174\1\175"+
    "\1\176\1\3\1\177\1\3\1\200\1\201\2\3\1\202"+
    "\2\3\1\203\2\3\1\204\1\205\3\3\1\206\1\3"+
    "\10\0\2\3\3\0\1\207\2\3\1\210\1\211\2\3"+
    "\1\212\1\213\12\3\1\214\6\3\10\0\2\3\3\0"+
    "\1\215\3\3\1\216\2\3\1\217\1\220\12\3\1\221"+
    "\1\222\5\3\10\0\2\3\3\0\1\223\2\3\1\224"+
    "\1\225\2\3\1\226\1\227\1\3\1\230\4\3\1\231"+
    "\4\3\1\232\5\3\10\0\2\3\3\0\4\3\1\233"+
    "\2\3\1\234\22\3\2\0\1\235\5\0\2\3\3\0"+
    "\7\3\1\236\22\3\10\0\2\3\3\0\1\236\2\3"+
    "\1\237\1\240\2\3\1\241\1\242\13\3\1\243\5\3"+
    "\10\0\2\3\3\0\1\244\2\3\1\245\1\246\2\3"+
    "\1\247\14\3\1\250\5\3\10\0\2\3\3\0\5\3"+
    "\1\251\1\252\4\3\1\253\1\3\1\254\14\3\10\0"+
    "\2\3\3\0\3\3\1\255\1\256\2\3\1\257\22\3"+
    "\10\0\2\3\3\0\1\260\2\3\1\261\1\262\2\3"+
    "\1\263\1\264\13\3\1\265\5\3\10\0\2\3\3\0"+
    "\4\3\1\266\2\3\1\267\14\3\1\270\5\3\10\0"+
    "\2\3\3\0\24\3\1\271\5\3\10\0\2\3\3\0"+
    "\7\3\1\272\22\3\27\0\1\273\1\274\5\0\1\274"+
    "\3\0\1\275\56\0\1\276\43\0\1\277\6\0\5\45"+
    "\1\0\41\45\1\0\2\3\3\0\23\3\1\62\6\3"+
    "\10\0\2\3\3\0\2\3\1\300\5\3\1\301\21\3"+
    "\10\0\2\3\3\0\2\3\1\302\27\3\10\0\2\3"+
    "\3\0\10\3\1\303\21\3\10\0\2\3\3\0\1\3"+
    "\1\304\1\3\1\305\2\3\1\306\4\3\1\307\3\3"+
    "\1\310\1\3\1\311\10\3\10\0\2\3\3\0\4\3"+
    "\1\231\2\3\1\303\22\3\10\0\2\3\3\0\2\3"+
    "\1\303\1\3\1\312\2\3\1\313\22\3\10\0\2\3"+
    "\3\0\1\314\1\3\1\315\1\316\1\317\3\3\1\320"+
    "\1\321\1\322\17\3\10\0\2\3\3\0\12\3\1\323"+
    "\17\3\1\0\1\324\6\0\2\3\3\0\1\325\31\3"+
    "\10\0\2\3\3\0\15\3\1\326\14\3\10\0\2\3"+
    "\3\0\4\3\1\327\3\3\1\330\21\3\10\0\2\3"+
    "\3\0\4\3\1\331\25\3\10\0\2\3\3\0\7\3"+
    "\1\332\22\3\10\0\2\3\3\0\2\3\1\123\27\3"+
    "\10\0\2\3\3\0\2\3\1\303\2\3\1\333\2\3"+
    "\1\334\1\3\1\335\1\102\1\3\1\336\6\3\1\337"+
    "\5\3\10\0\2\3\3\0\2\3\1\236\5\3\1\340"+
    "\21\3\10\0\2\3\3\0\1\341\1\3\1\342\1\3"+
    "\1\343\1\344\2\3\1\345\1\346\1\347\1\3\1\350"+
    "\1\236\6\3\1\351\5\3\10\0\2\3\3\0\5\3"+
    "\1\352\2\3\1\353\21\3\10\0\2\3\3\0\1\354"+
    "\3\3\1\355\25\3\10\0\2\3\3\0\1\356\3\3"+
    "\1\357\2\3\1\360\22\3\10\0\2\3\3\0\1\361"+
    "\2\3\1\362\3\3\1\363\14\3\1\364\5\3\10\0"+
    "\2\3\3\0\10\3\1\365\21\3\10\0\2\3\3\0"+
    "\4\3\1\366\4\3\1\367\1\370\1\3\1\371\4\3"+
    "\1\372\10\3\1\0\1\373\6\0\2\3\3\0\5\3"+
    "\1\374\24\3\10\0\2\3\3\0\4\3\1\375\2\3"+
    "\1\376\22\3\10\0\2\3\3\0\1\377\2\3\1\u0100"+
    "\1\u0101\2\3\1\u0102\1\u0103\21\3\10\0\2\3\3\0"+
    "\7\3\1\303\22\3\10\0\2\3\3\0\13\3\1\u0104"+
    "\16\3\10\0\2\3\3\0\1\3\1\u0105\1\u0106\10\3"+
    "\1\u0107\5\3\1\u0108\4\3\1\u0109\3\3\1\0\1\u010a"+
    "\6\0\2\3\3\0\4\3\1\345\3\3\1\u010b\21\3"+
    "\10\0\2\3\3\0\5\3\1\333\4\3\1\u010c\17\3"+
    "\10\0\2\3\3\0\7\3\1\u010d\22\3\26\0\1\274"+
    "\30\0\2\3\3\0\7\3\1\u010e\22\3\10\0\2\3"+
    "\3\0\23\3\1\u010f\6\3\10\0\2\3\3\0\12\3"+
    "\1\303\17\3\10\0\2\3\3\0\1\3\1\u0110\1\u0111"+
    "\4\3\1\375\22\3\10\0\2\3\3\0\1\u0112\31\3"+
    "\10\0\2\3\3\0\21\3\1\u0113\10\3\10\0\2\3"+
    "\3\0\2\3\1\u0114\4\3\1\u0115\5\3\1\u0116\14\3"+
    "\10\0\2\3\3\0\25\3\1\u0117\1\3\1\u0118\2\3"+
    "\10\0\2\3\3\0\1\3\1\46\1\u0119\3\3\1\u011a"+
    "\1\3\1\u011b\21\3\10\0\2\3\3\0\7\3\1\u011c"+
    "\22\3\10\0\2\3\3\0\26\3\1\u011d\3\3\1\0"+
    "\1\u011e\14\0\1\u011f\40\0\2\3\3\0\2\3\1\u0120"+
    "\27\3\10\0\2\3\3\0\1\3\1\u0121\3\3\1\u0122"+
    "\1\u0123\23\3\10\0\2\3\3\0\2\3\1\u0124\2\3"+
    "\1\u0125\2\3\1\311\2\3\1\102\1\u0126\1\3\1\u0127"+
    "\13\3\10\0\2\3\3\0\1\u0128\2\3\1\u0129\3\3"+
    "\1\u012a\15\3\1\u012b\4\3\10\0\2\3\3\0\11\3"+
    "\1\u012c\20\3\10\0\2\3\3\0\10\3\1\u012d\1\102"+
    "\1\3\1\303\16\3\10\0\2\3\3\0\10\3\1\114"+
    "\21\3\10\0\2\3\3\0\12\3\1\u012e\12\3\1\u012f"+
    "\4\3\10\0\2\3\3\0\5\3\1\u0130\1\3\1\62"+
    "\22\3\10\0\2\3\3\0\1\u0131\3\3\1\u0132\2\3"+
    "\1\u0133\14\3\1\u0134\5\3\10\0\2\3\3\0\1\356"+
    "\31\3\36\0\1\u0135\20\0\2\3\3\0\1\3\1\u0136"+
    "\6\3\1\u0137\2\3\1\u0138\16\3\10\0\2\3\3\0"+
    "\2\3\1\u0139\3\3\1\u013a\23\3\10\0\2\3\3\0"+
    "\2\3\1\u013b\1\3\1\u013c\2\3\1\u013d\22\3\10\0"+
    "\2\3\3\0\6\3\1\303\23\3\10\0\2\3\3\0"+
    "\16\3\1\u013e\13\3\10\0\2\3\3\0\7\3\1\u013f"+
    "\22\3\10\0\2\3\3\0\1\u0140\14\3\1\u0141\14\3"+
    "\10\0\2\3\3\0\7\3\1\u0142\22\3\10\0\2\3"+
    "\3\0\1\3\1\102\1\u0143\1\345\15\3\1\u0144\10\3"+
    "\10\0\2\3\3\0\5\3\1\145\17\3\1\u0145\4\3"+
    "\10\0\2\3\3\0\1\u012e\1\u0146\12\3\1\303\7\3"+
    "\1\u0147\5\3\10\0\2\3\3\0\1\u0148\1\u0149\4\3"+
    "\1\300\4\3\1\u014a\5\3\1\u0113\10\3\10\0\2\3"+
    "\3\0\12\3\1\102\6\3\1\u0121\10\3\10\0\2\3"+
    "\3\0\1\3\1\u014b\1\u014c\2\3\1\u014d\2\3\1\u014e"+
    "\4\3\1\303\1\3\1\u014f\12\3\10\0\2\3\3\0"+
    "\5\3\1\u0150\4\3\1\u0151\6\3\1\u0152\10\3\10\0"+
    "\2\3\3\0\4\3\1\345\1\u0153\2\3\1\u0154\10\3"+
    "\1\u0155\2\3\1\u0156\5\3\10\0\2\3\3\0\1\u0157"+
    "\4\3\1\303\24\3\10\0\2\3\3\0\13\3\1\u0158"+
    "\16\3\10\0\2\3\3\0\1\3\1\u0136\11\3\1\u0159"+
    "\16\3\10\0\2\3\3\0\2\3\1\u015a\2\3\1\u015b"+
    "\6\3\1\303\3\3\1\102\10\3\1\u015c\10\0\2\3"+
    "\3\0\2\3\1\u015d\2\3\1\102\1\u0123\1\303\3\3"+
    "\1\u0157\4\3\1\u015e\5\3\1\102\1\3\1\u015f\1\3"+
    "\10\0\2\3\3\0\2\3\1\u0160\27\3\10\0\2\3"+
    "\3\0\2\3\1\u0161\3\3\1\303\4\3\1\u0162\11\3"+
    "\1\u0163\4\3\10\0\2\3\3\0\5\3\1\u0164\13\3"+
    "\1\u0113\10\3\10\0\2\3\3\0\1\u0165\2\3\1\u0166"+
    "\17\3\1\u0167\6\3\10\0\2\3\3\0\1\u0168\2\3"+
    "\1\u0169\1\u016a\3\3\1\u016b\13\3\1\u016c\5\3\10\0"+
    "\2\3\3\0\1\3\1\u016d\3\3\1\u016e\1\345\2\3"+
    "\1\u016f\1\3\1\u0170\5\3\1\102\1\u0171\6\3\1\102"+
    "\10\0\2\3\3\0\4\3\1\u0172\1\303\3\3\1\u0173"+
    "\1\u0174\3\3\1\u0175\7\3\1\u0176\3\3\1\0\1\u0177"+
    "\6\0\2\3\3\0\4\3\1\u0178\25\3\10\0\2\3"+
    "\3\0\1\u0179\1\u017a\1\303\2\3\1\u017b\4\3\1\u017c"+
    "\2\3\1\u017d\7\3\1\u017e\4\3\10\0\2\3\3\0"+
    "\4\3\1\u017f\25\3\10\0\2\3\3\0\3\3\1\u0180"+
    "\1\u0181\25\3\10\0\2\3\3\0\10\3\1\u0182\21\3"+
    "\10\0\2\3\3\0\3\3\1\u0183\26\3\10\0\2\3"+
    "\3\0\1\u0184\3\3\1\u0185\2\3\1\u0186\22\3\10\0"+
    "\2\3\3\0\1\3\1\u0136\3\3\1\303\1\u0187\1\3"+
    "\1\u015e\21\3\10\0\2\3\3\0\24\3\1\u0188\5\3"+
    "\10\0\2\3\3\0\10\3\1\u0189\2\3\1\u0184\3\3"+
    "\1\366\12\3\10\0\2\3\3\0\2\3\1\u018a\2\3"+
    "\1\u018b\20\3\1\102\3\3\10\0\2\3\3\0\1\46"+
    "\4\3\1\333\2\3\1\u018c\1\u010e\12\3\1\u018d\5\3"+
    "\10\0\2\3\3\0\1\u018e\1\3\1\u0113\1\u018f\4\3"+
    "\1\u0190\1\3\1\u0191\17\3\2\0\1\u0192\5\0\2\3"+
    "\3\0\4\3\1\u0193\25\3\10\0\2\3\3\0\1\u0194"+
    "\2\3\1\u0195\1\u0196\2\3\1\u0197\7\3\1\u0198\12\3"+
    "\10\0\2\3\3\0\3\3\1\51\2\3\1\102\1\3"+
    "\1\u0199\2\3\1\u0157\1\3\1\u0145\14\3\10\0\2\3"+
    "\3\0\24\3\1\u019a\5\3\10\0\2\3\3\0\1\u019b"+
    "\3\3\1\60\3\3\1\u019c\2\3\1\u019d\16\3\10\0"+
    "\2\3\3\0\4\3\1\u019e\2\3\1\u019f\22\3\10\0"+
    "\2\3\3\0\7\3\1\u01a0\22\3\10\0\2\3\3\0"+
    "\10\3\1\u01a1\21\3\10\0\2\3\3\0\1\3\1\u0146"+
    "\3\3\1\u0146\4\3\1\114\3\3\1\236\2\3\1\u01a2"+
    "\10\3\10\0\2\3\3\0\10\3\1\u012e\1\3\1\114"+
    "\17\3\10\0\2\3\3\0\1\u0157\1\3\1\u01a3\1\3"+
    "\1\u01a4\1\102\11\3\1\303\1\3\1\236\1\303\7\3"+
    "\10\0\2\3\3\0\1\u01a5\1\u01a6\10\3\1\u01a7\4\3"+
    "\1\u01a8\1\3\1\303\1\3\1\u01a9\2\3\1\u01aa\3\3"+
    "\10\0\2\3\3\0\1\316\3\3\1\u01ab\25\3\10\0"+
    "\2\3\3\0\1\u01ac\3\3\1\u01ad\17\3\1\u0121\5\3"+
    "\10\0\2\3\3\0\2\3\1\311\1\u01ae\7\3\1\u01af"+
    "\16\3\10\0\2\3\3\0\24\3\1\u01b0\5\3\10\0"+
    "\2\3\3\0\1\51\1\3\1\311\7\3\1\u01b1\1\u01b2"+
    "\16\3\15\0\1\u01b3\41\0\2\3\3\0\17\3\1\303"+
    "\12\3\10\0\2\3\3\0\1\3\1\u01b4\6\3\1\u01b5"+
    "\2\3\1\u01b6\5\3\1\u0184\10\3\10\0\2\3\3\0"+
    "\1\3\1\u01b7\2\3\1\51\1\333\1\3\1\u01b8\2\3"+
    "\1\u01b9\1\3\1\u01ba\15\3\10\0\2\3\3\0\1\117"+
    "\1\3\1\u01bb\23\3\1\u01bc\3\3\10\0\2\3\3\0"+
    "\17\3\1\u0113\4\3\1\u01bd\5\3\10\0\2\3\3\0"+
    "\10\3\1\u01be\12\3\1\62\6\3\10\0\2\3\3\0"+
    "\2\3\1\303\1\51\1\3\1\u012e\2\3\1\u01bf\2\3"+
    "\1\u0184\1\3\1\u01c0\3\3\1\u0184\3\3\1\u0190\4\3"+
    "\10\0\2\3\3\0\7\3\1\u01c1\1\3\1\u01c2\1\3"+
    "\1\u01c3\16\3\10\0\2\3\3\0\2\3\1\u0113\2\3"+
    "\1\u01c4\2\3\1\u01c5\2\102\1\3\1\u01c6\7\3\1\u01c7"+
    "\5\3\10\0\2\3\3\0\1\u01c8\7\3\1\u01c9\21\3"+
    "\2\0\1\u01ca\5\0\2\3\3\0\5\3\1\u01cb\15\3"+
    "\1\62\6\3\10\0\2\3\3\0\1\u01cc\1\3\1\u01cd"+
    "\7\3\1\u01ce\6\3\1\123\10\3\10\0\2\3\3\0"+
    "\12\3\1\u015c\10\3\1\62\6\3\10\0\2\3\3\0"+
    "\21\3\1\u01cf\10\3\10\0\2\3\3\0\12\3\1\u01d0"+
    "\17\3\10\0\2\3\3\0\14\3\1\u0163\15\3\10\0"+
    "\2\3\3\0\10\3\1\u01d1\21\3\10\0\2\3\3\0"+
    "\3\3\1\u01d2\4\3\1\u01d3\2\3\1\u0176\16\3\10\0"+
    "\2\3\3\0\10\3\1\u01d4\14\3\1\u01d5\1\u01d6\3\3"+
    "\10\0\2\3\3\0\4\3\1\u01d7\3\3\1\u01d8\13\3"+
    "\1\u01d9\5\3\10\0\2\3\3\0\14\3\1\322\15\3"+
    "\10\0\2\3\3\0\3\3\1\u01da\1\u01db\25\3\10\0"+
    "\2\3\3\0\2\3\1\u01dc\7\3\1\343\17\3\10\0"+
    "\2\3\3\0\16\3\1\303\13\3\10\0\2\3\3\0"+
    "\1\u01dd\6\3\1\u01de\22\3\10\0\2\3\3\0\13\3"+
    "\1\u01df\16\3\10\0\2\3\3\0\3\3\1\u01e0\3\3"+
    "\1\u01e1\22\3\10\0\2\3\3\0\10\3\1\u01e2\21\3"+
    "\27\0\1\274\43\0\1\274\74\0\1\41\5\0\1\u01e3"+
    "\45\0\2\3\3\0\3\3\1\u01e4\26\3\10\0\2\3"+
    "\3\0\4\3\1\u01e5\25\3\10\0\2\3\3\0\10\3"+
    "\1\u01e6\21\3\10\0\2\3\3\0\3\3\1\u01e7\26\3"+
    "\10\0\2\3\3\0\11\3\1\u01e8\20\3\10\0\2\3"+
    "\3\0\10\3\1\u015c\21\3\10\0\2\3\3\0\14\3"+
    "\1\u0145\15\3\10\0\2\3\3\0\2\3\1\u01e9\1\3"+
    "\1\u01ea\11\3\1\u0127\4\3\1\u01eb\6\3\10\0\2\3"+
    "\3\0\24\3\1\u01ec\5\3\10\0\2\3\3\0\5\3"+
    "\1\333\24\3\10\0\2\3\3\0\13\3\1\62\16\3"+
    "\10\0\2\3\3\0\23\3\1\u01ed\6\3\10\0\2\3"+
    "\3\0\25\3\1\u0121\4\3\10\0\2\3\3\0\5\3"+
    "\1\u01ee\24\3\10\0\2\3\3\0\7\3\1\u01ef\22\3"+
    "\10\0\2\3\3\0\4\3\1\u01f0\25\3\10\0\2\3"+
    "\3\0\7\3\1\u01f1\22\3\27\0\1\u01f2\1\u01f3\1\u01f4"+
    "\25\0\2\3\3\0\17\3\1\u01f5\1\u0121\11\3\10\0"+
    "\2\3\3\0\12\3\1\102\17\3\10\0\2\3\3\0"+
    "\24\3\1\u01f6\1\u01f7\4\3\10\0\2\3\3\0\4\3"+
    "\1\332\25\3\10\0\2\3\3\0\10\3\1\u01f8\21\3"+
    "\10\0\2\3\3\0\1\u01f9\31\3\10\0\2\3\3\0"+
    "\32\3\2\0\1\u01fa\5\0\2\3\3\0\7\3\1\u01fb"+
    "\22\3\10\0\2\3\3\0\11\3\1\u0113\1\303\17\3"+
    "\10\0\2\3\3\0\3\3\1\u01fc\26\3\10\0\2\3"+
    "\3\0\13\3\1\102\16\3\10\0\2\3\3\0\1\3"+
    "\1\u01fd\30\3\10\0\2\3\3\0\13\3\1\u0157\16\3"+
    "\10\0\2\3\3\0\2\3\1\u01e4\27\3\10\0\2\3"+
    "\3\0\12\3\1\u0113\17\3\10\0\2\3\3\0\13\3"+
    "\1\u01fe\16\3\10\0\2\3\3\0\5\3\1\303\24\3"+
    "\10\0\2\3\3\0\15\3\1\u01ff\14\3\10\0\2\3"+
    "\3\0\4\3\1\51\14\3\1\u0113\10\3\10\0\2\3"+
    "\3\0\1\u0200\31\3\10\0\2\3\3\0\5\3\1\u0201"+
    "\2\3\1\337\1\3\1\u012a\17\3\10\0\2\3\3\0"+
    "\2\3\1\u0202\27\3\10\0\2\3\3\0\2\3\1\u0203"+
    "\27\3\10\0\2\3\3\0\31\3\1\u015c\10\0\2\3"+
    "\3\0\14\3\1\u012e\15\3\10\0\2\3\3\0\13\3"+
    "\1\u0204\16\3\10\0\2\3\3\0\2\3\1\u0205\10\3"+
    "\1\365\10\3\1\u012e\5\3\10\0\2\3\3\0\1\u0206"+
    "\31\3\10\0\2\3\3\0\5\3\1\u0207\24\3\10\0"+
    "\2\3\3\0\12\3\1\u0208\17\3\10\0\2\3\3\0"+
    "\1\3\1\u0146\30\3\10\0\2\3\3\0\10\3\1\u0209"+
    "\5\3\1\u020a\13\3\10\0\2\3\3\0\7\3\1\117"+
    "\22\3\10\0\2\3\3\0\4\3\1\u020b\25\3\10\0"+
    "\2\3\3\0\7\3\1\u020c\22\3\10\0\2\3\3\0"+
    "\1\u020d\31\3\10\0\2\3\3\0\1\u020e\31\3\15\0"+
    "\1\u020f\1\u0210\1\u0211\1\0\1\u0212\1\u0213\1\u0214\1\u0215"+
    "\1\u0216\1\u0217\1\u0218\1\u0219\1\u021a\1\u021b\1\u021c\1\0"+
    "\1\u021d\1\u021e\1\0\1\u021f\1\u0220\1\0\1\u0221\13\0"+
    "\2\3\3\0\2\3\1\u0222\27\3\10\0\2\3\3\0"+
    "\5\3\1\u0223\4\3\1\u0224\17\3\10\0\2\3\3\0"+
    "\2\3\1\u0225\27\3\10\0\2\3\3\0\10\3\1\u0226"+
    "\2\3\1\u0225\16\3\10\0\2\3\3\0\13\3\1\u0227"+
    "\10\3\1\u0228\5\3\10\0\2\3\3\0\3\3\1\u0229"+
    "\1\3\1\311\2\3\1\u022a\1\u022b\1\3\1\u0227\3\3"+
    "\1\u022c\12\3\10\0\2\3\3\0\4\3\1\u022d\2\3"+
    "\1\u01d5\22\3\10\0\2\3\3\0\7\3\1\u022e\22\3"+
    "\10\0\2\3\3\0\23\3\1\303\6\3\10\0\2\3"+
    "\3\0\4\3\1\u022f\2\3\1\u0230\22\3\10\0\2\3"+
    "\3\0\3\3\1\u0231\3\3\1\u0232\22\3\10\0\2\3"+
    "\3\0\7\3\1\u0233\14\3\1\u0234\5\3\10\0\2\3"+
    "\3\0\4\3\1\u0235\25\3\16\0\1\u0236\2\0\1\u0237"+
    "\35\0\2\3\3\0\7\3\1\u0238\22\3\10\0\2\3"+
    "\3\0\1\u019a\31\3\10\0\2\3\3\0\1\303\31\3"+
    "\10\0\2\3\3\0\1\345\31\3\10\0\2\3\3\0"+
    "\7\3\1\u0239\22\3\10\0\2\3\3\0\7\3\1\110"+
    "\22\3\10\0\2\3\3\0\4\3\1\231\25\3\10\0"+
    "\2\3\3\0\5\3\1\u023a\24\3\10\0\2\3\3\0"+
    "\3\3\1\u023b\26\3\10\0\2\3\3\0\5\3\1\u0113"+
    "\24\3\10\0\2\3\3\0\4\3\1\u023c\25\3\10\0"+
    "\2\3\3\0\3\3\1\u023d\26\3\10\0\2\3\3\0"+
    "\7\3\1\u0232\22\3\10\0\2\3\3\0\21\3\1\u01cf"+
    "\10\3\1\0\1\u023e\6\0\2\3\3\0\23\3\1\u023f"+
    "\6\3\10\0\2\3\3\0\13\3\1\u0240\16\3\10\0"+
    "\2\3\3\0\10\3\1\231\21\3\10\0\2\3\3\0"+
    "\3\3\1\u0241\26\3\16\0\1\u0242\57\0\1\u0243\27\0"+
    "\2\3\3\0\3\3\1\u01e4\20\3\1\u0244\5\3\10\0"+
    "\2\3\3\0\7\3\1\u0113\22\3\10\0\2\3\3\0"+
    "\2\3\1\u0245\4\3\1\u0246\22\3\10\0\2\3\3\0"+
    "\23\3\1\u0157\6\3\10\0\2\3\3\0\7\3\1\303"+
    "\13\3\1\u0247\6\3\1\0\1\u0248\6\0\2\3\3\0"+
    "\7\3\1\253\22\3\10\0\2\3\3\0\32\3\1\0"+
    "\1\u0249\6\0\2\3\3\0\4\3\1\u024a\25\3\10\0"+
    "\2\3\3\0\10\3\1\u01d3\21\3\10\0\2\3\3\0"+
    "\2\3\1\u024b\27\3\10\0\2\3\3\0\21\3\1\u0184"+
    "\10\3\10\0\2\3\3\0\7\3\1\u024c\22\3\10\0"+
    "\2\3\3\0\16\3\1\u0145\13\3\10\0\2\3\3\0"+
    "\21\3\1\u024d\10\3\10\0\2\3\3\0\21\3\1\303"+
    "\10\3\10\0\2\3\3\0\7\3\1\u024e\22\3\10\0"+
    "\2\3\3\0\7\3\1\u024f\22\3\10\0\2\3\3\0"+
    "\13\3\1\u0204\3\3\1\u0113\12\3\10\0\2\3\3\0"+
    "\24\3\1\u016a\5\3\10\0\2\3\3\0\7\3\1\u0115"+
    "\22\3\10\0\2\3\3\0\11\3\1\u0250\20\3\15\0"+
    "\1\u0251\41\0\2\3\3\0\23\3\1\322\6\3\10\0"+
    "\2\3\3\0\2\3\1\u0105\7\3\1\u0252\17\3\10\0"+
    "\2\3\3\0\3\3\1\u01a2\26\3\10\0\2\3\3\0"+
    "\23\3\1\u0253\6\3\10\0\2\3\3\0\23\3\1\u0254"+
    "\6\3\10\0\2\3\3\0\3\3\1\u0255\26\3\10\0"+
    "\2\3\3\0\24\3\1\u0256\5\3\10\0\2\3\3\0"+
    "\10\3\1\u0257\21\3\10\0\2\3\3\0\1\u0258\31\3"+
    "\10\0\2\3\3\0\6\3\1\u0259\16\3\1\u025a\4\3"+
    "\10\0\2\3\3\0\11\3\1\60\20\3\10\0\2\3"+
    "\3\0\7\3\1\u025b\22\3\10\0\2\3\3\0\5\3"+
    "\1\u025c\2\3\1\u025d\21\3\10\0\2\3\3\0\23\3"+
    "\1\u025e\6\3\10\0\2\3\3\0\3\3\1\u025f\26\3"+
    "\10\0\2\3\3\0\7\3\1\51\22\3\10\0\2\3"+
    "\3\0\20\3\1\303\11\3\10\0\2\3\3\0\6\3"+
    "\1\u0260\23\3\10\0\2\3\3\0\12\3\1\u0261\1\u01e4"+
    "\16\3\10\0\2\3\3\0\4\3\1\u0262\25\3\10\0"+
    "\2\3\3\0\15\3\1\u0263\14\3\10\0\2\3\3\0"+
    "\23\3\1\u0264\6\3\10\0\2\3\3\0\7\3\1\u0265"+
    "\22\3\10\0\2\3\3\0\17\3\1\322\12\3\10\0"+
    "\2\3\3\0\10\3\1\u0266\21\3\10\0\2\3\3\0"+
    "\16\3\1\u0267\13\3\10\0\2\3\3\0\21\3\1\303"+
    "\2\3\1\u0268\5\3\10\0\2\3\3\0\7\3\1\303"+
    "\2\3\1\u0269\5\3\1\303\11\3\10\0\2\3\3\0"+
    "\21\3\1\326\10\3\10\0\2\3\3\0\2\3\1\u0105"+
    "\4\3\1\236\22\3\10\0\2\3\3\0\7\3\1\u026a"+
    "\22\3\10\0\2\3\3\0\7\3\1\u026b\22\3\10\0"+
    "\2\3\3\0\2\3\1\u0105\27\3\10\0\2\3\3\0"+
    "\2\3\1\303\27\3\10\0\2\3\3\0\2\3\1\u0184"+
    "\1\u026c\26\3\10\0\2\3\3\0\7\3\1\u026d\22\3"+
    "\10\0\2\3\3\0\6\3\1\u026e\12\3\1\303\10\3"+
    "\10\0\2\3\3\0\17\3\1\u0113\12\3\10\0\2\3"+
    "\3\0\2\3\1\u026f\27\3\10\0\2\3\3\0\7\3"+
    "\1\u0261\22\3\10\0\2\3\3\0\24\3\1\u0270\5\3"+
    "\10\0\2\3\3\0\13\3\1\366\16\3\10\0\2\3"+
    "\3\0\32\3\2\0\1\u01ca\5\0\2\3\3\0\13\3"+
    "\1\322\16\3\10\0\2\3\3\0\7\3\1\114\22\3"+
    "\10\0\2\3\3\0\7\3\1\u0113\11\3\1\303\10\3"+
    "\10\0\2\3\3\0\10\3\1\u0271\21\3\10\0\2\3"+
    "\3\0\7\3\1\u0272\22\3\10\0\2\3\3\0\4\3"+
    "\1\u0273\25\3\10\0\2\3\3\0\2\3\1\102\5\3"+
    "\1\303\21\3\10\0\2\3\3\0\1\3\1\u0274\10\3"+
    "\1\u0275\17\3\10\0\2\3\3\0\15\3\1\303\14\3"+
    "\10\0\2\3\3\0\7\3\1\u0276\22\3\10\0\2\3"+
    "\3\0\21\3\1\u0277\10\3\10\0\2\3\3\0\20\3"+
    "\1\u0113\11\3\10\0\2\3\3\0\1\3\1\u0278\4\3"+
    "\1\u0279\23\3\10\0\2\3\3\0\15\3\1\u01a2\14\3"+
    "\10\0\2\3\3\0\2\3\1\u0145\27\3\10\0\2\3"+
    "\3\0\2\3\1\u027a\27\3\10\0\2\3\3\0\5\3"+
    "\1\u027b\24\3\10\0\2\3\3\0\7\3\1\u027c\22\3"+
    "\10\0\2\3\3\0\3\3\1\117\15\3\1\u027d\2\3"+
    "\1\u027e\5\3\10\0\2\3\3\0\7\3\1\u027f\22\3"+
    "\10\0\2\3\3\0\2\3\1\u0113\27\3\17\0\1\u0280"+
    "\37\0\2\3\3\0\14\3\1\303\15\3\10\0\2\3"+
    "\3\0\4\3\1\u019a\25\3\10\0\2\3\3\0\2\3"+
    "\1\u0166\10\3\1\u0281\16\3\10\0\2\3\3\0\26\3"+
    "\1\u0282\3\3\10\0\2\3\3\0\1\u0283\31\3\10\0"+
    "\2\3\3\0\7\3\1\u0284\22\3\10\0\2\3\3\0"+
    "\4\3\1\u0285\25\3\10\0\2\3\3\0\15\3\1\u0286"+
    "\14\3\10\0\2\3\3\0\14\3\1\u0287\15\3\10\0"+
    "\2\3\3\0\3\3\1\u0288\26\3\10\0\2\3\3\0"+
    "\5\3\1\u0289\24\3\10\0\2\3\3\0\24\3\1\u018d"+
    "\5\3\10\0\2\3\3\0\1\51\31\3\10\0\2\3"+
    "\3\0\1\u028a\31\3\10\0\2\3\3\0\11\3\1\u0113"+
    "\20\3\10\0\2\3\3\0\23\3\1\231\6\3\10\0"+
    "\2\3\3\0\2\3\1\u0145\16\3\1\176\10\3\10\0"+
    "\2\3\3\0\12\3\1\u012e\1\u028b\5\3\1\303\10\3"+
    "\10\0\2\3\3\0\12\3\1\u012a\17\3\10\0\2\3"+
    "\3\0\2\3\1\u028c\27\3\10\0\2\3\3\0\6\3"+
    "\1\u0123\23\3\10\0\2\3\3\0\7\3\1\u0184\22\3"+
    "\10\0\2\3\3\0\12\3\1\u028d\17\3\25\0\1\275"+
    "\1\0\1\273\27\0\2\3\3\0\5\3\1\u028e\24\3"+
    "\10\0\2\3\3\0\2\3\1\u0198\27\3\10\0\2\3"+
    "\3\0\1\3\1\u028f\1\u0121\27\3\10\0\2\3\3\0"+
    "\11\3\1\u0198\1\3\1\u0290\16\3\10\0\2\3\3\0"+
    "\2\3\1\u0291\2\3\1\u0198\2\3\1\u0292\21\3\10\0"+
    "\2\3\3\0\1\u0293\1\3\1\u0294\15\3\1\303\11\3"+
    "\10\0\2\3\3\0\5\3\1\u012e\24\3\10\0\2\3"+
    "\3\0\1\3\1\u0295\30\3\10\0\2\3\3\0\13\3"+
    "\1\u01e4\7\3\1\u0296\6\3\10\0\2\3\3\0\13\3"+
    "\1\u0114\16\3\10\0\2\3\3\0\15\3\1\u0297\1\u0298"+
    "\2\3\1\u0299\2\3\1\117\5\3\10\0\2\3\3\0"+
    "\2\3\1\u029a\10\3\1\u029b\16\3\10\0\2\3\3\0"+
    "\14\3\1\62\15\3\10\0\2\3\3\0\15\3\1\u0279"+
    "\14\3\10\0\2\3\3\0\12\3\1\u029c\17\3\10\0"+
    "\2\3\3\0\2\3\1\u029d\20\3\1\322\6\3\10\0"+
    "\2\3\3\0\24\3\1\u029e\5\3\10\0\2\3\3\0"+
    "\1\u029f\31\3\10\0\2\3\3\0\4\3\1\u02a0\25\3"+
    "\10\0\2\3\3\0\4\3\1\u02a1\25\3\10\0\2\3"+
    "\3\0\3\3\1\u02a1\26\3\10\0\2\3\3\0\4\3"+
    "\1\u02a2\25\3\10\0\2\3\3\0\2\3\1\u028c\11\3"+
    "\1\u0115\15\3\10\0\2\3\3\0\1\3\1\u016d\30\3"+
    "\10\0\2\3\3\0\4\3\1\u012e\25\3\10\0\2\3"+
    "\3\0\12\3\1\u02a3\17\3\10\0\2\3\3\0\3\3"+
    "\1\u02a4\26\3\10\0\2\3\3\0\5\3\1\u02a5\2\3"+
    "\1\u02a6\21\3\2\0\1\u02a7\5\0\2\3\3\0\12\3"+
    "\1\u02a8\17\3\10\0\2\3\3\0\2\3\1\u02a9\27\3"+
    "\27\0\1\273\27\0\2\3\3\0\2\3\1\u02aa\27\3"+
    "\10\0\2\3\3\0\2\3\1\u015c\4\3\1\u02ab\22\3"+
    "\10\0\2\3\3\0\2\3\1\u02ac\20\3\1\u02ad\6\3"+
    "\10\0\2\3\3\0\2\3\1\u02ae\27\3\10\0\2\3"+
    "\3\0\13\3\1\u0184\16\3\10\0\2\3\3\0\12\3"+
    "\1\u0187\17\3\10\0\2\3\3\0\5\3\1\231\24\3"+
    "\10\0\2\3\3\0\7\3\1\u02af\22\3\10\0\2\3"+
    "\3\0\3\3\1\u02b0\26\3\10\0\2\3\3\0\5\3"+
    "\1\u016d\24\3\10\0\2\3\3\0\3\3\1\317\26\3"+
    "\10\0\2\3\3\0\21\3\1\u02b1\10\3\10\0\2\3"+
    "\3\0\15\3\1\u02b2\14\3\10\0\2\3\3\0\10\3"+
    "\1\u02b3\21\3\10\0\2\3\3\0\2\3\1\u02b4\27\3"+
    "\10\0\2\3\3\0\7\3\1\u02b5\22\3\10\0\2\3"+
    "\3\0\10\3\1\u02b6\2\3\1\102\16\3\10\0\2\3"+
    "\3\0\7\3\1\u02b7\22\3\10\0\2\3\3\0\10\3"+
    "\1\303\2\3\1\102\16\3\10\0\2\3\3\0\2\3"+
    "\1\303\5\3\1\u0157\1\3\1\u02b8\6\3\1\303\10\3"+
    "\10\0\2\3\3\0\7\3\1\u01d3\3\3\1\u0158\16\3"+
    "\30\0\1\274\26\0\2\3\3\0\6\3\1\306\12\3"+
    "\1\u02b9\10\3\10\0\2\3\3\0\2\3\1\u02ba\27\3"+
    "\10\0\2\3\3\0\3\3\1\u02bb\26\3\10\0\2\3"+
    "\3\0\7\3\1\u02bc\22\3\10\0\2\3\3\0\1\u02bd"+
    "\31\3\10\0\2\3\3\0\12\3\1\u02be\17\3\10\0"+
    "\2\3\3\0\17\3\1\366\12\3\10\0\2\3\3\0"+
    "\2\3\1\u02bf\7\3\1\257\17\3\10\0\2\3\3\0"+
    "\13\3\1\u02c0\16\3\10\0\2\3\3\0\7\3\1\375"+
    "\22\3\10\0\2\3\3\0\2\3\1\u02c1\27\3\10\0"+
    "\2\3\3\0\12\3\1\u0282\17\3\10\0\2\3\3\0"+
    "\2\3\1\u02c2\27\3\10\0\2\3\3\0\10\3\1\u02c3"+
    "\21\3\10\0\2\3\3\0\7\3\1\u02c4\22\3\10\0"+
    "\2\3\3\0\11\3\1\231\20\3\10\0\2\3\3\0"+
    "\24\3\1\u02c5\5\3\10\0\2\3\3\0\12\3\1\u02c6"+
    "\17\3\10\0\2\3\3\0\31\3\1\62\10\0\2\3"+
    "\3\0\2\3\1\u027b\27\3\10\0\2\3\3\0\2\3"+
    "\1\u02c7\27\3\10\0\2\3\3\0\13\3\1\u027e\16\3"+
    "\10\0\2\3\3\0\4\3\1\375\25\3\11\0\1\u01e3"+
    "\43\0\1\u02c8\1\0\2\3\3\0\4\3\1\345\25\3"+
    "\10\0\2\3\3\0\13\3\1\u02c9\16\3\10\0\2\3"+
    "\3\0\1\u02ca\31\3\10\0\2\3\3\0\7\3\1\u02cb"+
    "\22\3\10\0\2\3\3\0\1\114\31\3\10\0\2\3"+
    "\3\0\3\3\1\u02cc\17\3\1\u0247\6\3\10\0\2\3"+
    "\3\0\5\3\1\u0125\24\3\10\0\2\3\3\0\4\3"+
    "\1\u02cd\25\3\10\0\2\3\3\0\5\3\1\u02ce\24\3"+
    "\10\0\2\3\3\0\4\3\1\u02cf\25\3\10\0\2\3"+
    "\3\0\6\3\1\231\23\3\10\0\2\3\3\0\1\u02d0"+
    "\31\3\10\0\2\3\3\0\13\3\1\u02d1\16\3\10\0"+
    "\2\3\3\0\7\3\1\u02d2\22\3\21\0\1\u02d3\46\0"+
    "\1\u02d4\51\0\1\u02d5\32\0\2\3\3\0\32\3\1\0"+
    "\1\u02d6\6\0\2\3\3\0\2\3\1\231\27\3\10\0"+
    "\2\3\3\0\7\3\1\u01d3\22\3\10\0\2\3\3\0"+
    "\1\u02d7\31\3\10\0\2\3\3\0\21\3\1\u01d3\10\3"+
    "\17\0\1\274\37\0\2\3\3\0\12\3\1\u02d8\13\3"+
    "\1\u02d9\3\3\10\0\2\3\3\0\2\3\1\u01e8\27\3"+
    "\10\0\2\3\3\0\1\231\11\3\1\102\17\3\10\0"+
    "\2\3\3\0\4\3\1\u02da\25\3\10\0\2\3\3\0"+
    "\1\u02db\31\3\10\0\2\3\3\0\10\3\1\117\21\3"+
    "\10\0\2\3\3\0\2\3\1\u02dc\27\3\10\0\2\3"+
    "\3\0\7\3\1\51\14\3\1\u02dc\5\3\10\0\2\3"+
    "\3\0\1\u02dd\31\3\10\0\2\3\3\0\13\3\1\303"+
    "\16\3\10\0\2\3\3\0\23\3\1\u02de\6\3\10\0"+
    "\2\3\3\0\5\3\1\u0113\2\3\1\u01a2\21\3\10\0"+
    "\2\3\3\0\1\3\1\102\4\3\1\102\23\3\10\0"+
    "\2\3\3\0\21\3\1\u02df\10\3\10\0\2\3\3\0"+
    "\1\3\1\u0105\30\3\10\0\2\3\3\0\16\3\1\u015c"+
    "\13\3\10\0\2\3\3\0\10\3\1\u02e0\21\3\10\0"+
    "\2\3\3\0\10\3\1\u0259\21\3\10\0\2\3\3\0"+
    "\10\3\1\u02e1\21\3\10\0\2\3\3\0\17\3\1\u027b"+
    "\12\3\16\0\1\u02e2\11\0\1\u02e3\33\0\1\u02e4\3\0"+
    "\1\u02e5\5\0\1\u02e6\10\0\1\u02e7\1\u02e8\22\0\1\u02e9"+
    "\6\0\1\u02ea\1\u02eb\12\0\1\u02ec\1\u02ed\37\0\1\u02ee"+
    "\40\0\1\u02ef\42\0\1\u02f0\1\u02f1\2\0\1\u02e8\37\0"+
    "\1\u02e8\21\0\1\u02f2\33\0\1\u02f3\14\0\1\u02f4\22\0"+
    "\1\u02f5\3\0\1\u02f0\2\0\1\u02f6\42\0\1\u02f7\1\u02f8"+
    "\2\0\1\u02f9\37\0\1\u02eb\1\0\1\u02fa\1\u02fb\3\0"+
    "\1\u02fc\2\0\1\u02fd\2\0\1\u02fe\5\0\1\u02ff\23\0"+
    "\1\u0300\2\0\1\u02f4\1\u0301\3\0\1\u0302\36\0\1\u02eb"+
    "\11\0\1\u0303\11\0\1\u02e8\31\0\1\u0304\1\u0305\13\0"+
    "\1\u0306\27\0\1\u02ff\1\0\1\u0307\37\0\1\u0308\3\0"+
    "\1\u02f1\2\0\1\u0309\1\u030a\36\0\1\u030b\2\0\1\u02e8"+
    "\3\0\1\u030c\14\0\1\u030d\27\0\1\u030e\5\0\1\u030f"+
    "\33\0\1\u0310\2\0\1\u0311\1\u0312\2\0\1\u0313\2\0"+
    "\1\u02eb\27\0\2\3\3\0\23\3\1\u0314\6\3\10\0"+
    "\2\3\3\0\2\3\1\u0315\27\3\10\0\2\3\3\0"+
    "\25\3\1\u01d5\1\u0316\3\3\10\0\2\3\3\0\2\3"+
    "\1\u0317\16\3\1\u0314\10\3\10\0\2\3\3\0\7\3"+
    "\1\u0225\22\3\10\0\2\3\3\0\13\3\1\u0318\16\3"+
    "\10\0\2\3\3\0\10\3\1\u0319\21\3\10\0\2\3"+
    "\3\0\7\3\1\u031a\22\3\10\0\2\3\3\0\13\3"+
    "\1\u031b\16\3\10\0\2\3\3\0\32\3\2\0\1\u02a7"+
    "\5\0\2\3\3\0\24\3\1\u031c\5\3\10\0\2\3"+
    "\3\0\12\3\1\u031d\17\3\10\0\2\3\3\0\12\3"+
    "\1\370\17\3\10\0\2\3\3\0\10\3\1\u031e\1\3"+
    "\1\u031f\17\3\10\0\2\3\3\0\21\3\1\u01f7\10\3"+
    "\10\0\2\3\3\0\1\3\1\u0157\30\3\10\0\2\3"+
    "\3\0\7\3\1\u0320\22\3\10\0\2\3\3\0\13\3"+
    "\1\u0201\16\3\10\0\2\3\3\0\10\3\1\u0321\21\3"+
    "\15\0\1\u0322\56\0\1\u0323\31\0\2\3\3\0\13\3"+
    "\1\u014a\16\3\10\0\2\3\3\0\10\3\1\u0324\21\3"+
    "\10\0\2\3\3\0\6\3\1\u0121\23\3\10\0\2\3"+
    "\3\0\11\3\1\u0325\20\3\10\0\2\3\3\0\13\3"+
    "\1\u0326\16\3\10\0\2\3\3\0\4\3\1\u0327\25\3"+
    "\21\0\1\u0328\35\0\2\3\3\0\2\3\1\u0184\27\3"+
    "\10\0\2\3\3\0\7\3\1\u0329\22\3\10\0\2\3"+
    "\3\0\1\3\1\102\30\3\21\0\1\u032a\46\0\1\u032b"+
    "\35\0\2\3\3\0\10\3\1\u032c\21\3\10\0\2\3"+
    "\3\0\1\3\1\u0222\30\3\10\0\2\3\3\0\2\3"+
    "\1\u0317\27\3\10\0\2\3\3\0\3\3\1\u032d\26\3"+
    "\15\0\1\u032e\50\0\1\u032f\37\0\2\3\3\0\21\3"+
    "\1\u0330\10\3\10\0\2\3\3\0\23\3\1\u0331\6\3"+
    "\10\0\2\3\3\0\10\3\1\u0332\21\3\10\0\2\3"+
    "\3\0\7\3\1\345\22\3\10\0\2\3\3\0\10\3"+
    "\1\u0333\21\3\10\0\2\3\3\0\10\3\1\u02c6\21\3"+
    "\10\0\2\3\3\0\15\3\1\u015c\14\3\34\0\1\274"+
    "\22\0\2\3\3\0\3\3\1\u0334\13\3\1\u027b\12\3"+
    "\10\0\2\3\3\0\7\3\1\u0335\22\3\10\0\2\3"+
    "\3\0\2\3\1\u0336\27\3\10\0\2\3\3\0\10\3"+
    "\1\u0337\21\3\10\0\2\3\3\0\6\3\1\u0136\23\3"+
    "\10\0\2\3\3\0\6\3\1\u0338\23\3\10\0\2\3"+
    "\3\0\10\3\1\u0339\21\3\10\0\2\3\3\0\1\u02cb"+
    "\31\3\10\0\2\3\3\0\7\3\1\77\22\3\10\0"+
    "\2\3\3\0\10\3\1\u033a\21\3\10\0\2\3\3\0"+
    "\32\3\1\0\1\u033b\6\0\2\3\3\0\17\3\1\u033c"+
    "\12\3\10\0\2\3\3\0\7\3\1\u033d\22\3\10\0"+
    "\2\3\3\0\4\3\1\303\25\3\10\0\2\3\3\0"+
    "\23\3\1\u0113\6\3\10\0\2\3\3\0\12\3\1\u033e"+
    "\17\3\10\0\2\3\3\0\10\3\1\u012e\21\3\10\0"+
    "\2\3\3\0\4\3\1\u033f\25\3\10\0\2\3\3\0"+
    "\3\3\1\u0340\26\3\10\0\2\3\3\0\10\3\1\u0341"+
    "\21\3\10\0\2\3\3\0\3\3\1\365\26\3\10\0"+
    "\2\3\3\0\7\3\1\u0342\22\3\10\0\2\3\3\0"+
    "\2\3\1\102\27\3\10\0\2\3\3\0\3\3\1\u0343"+
    "\26\3\10\0\2\3\3\0\4\3\1\u02b7\25\3\10\0"+
    "\2\3\3\0\10\3\1\u0115\21\3\10\0\2\3\3\0"+
    "\1\3\1\303\30\3\10\0\2\3\3\0\10\3\1\u027b"+
    "\21\3\10\0\2\3\3\0\24\3\1\u02be\5\3\10\0"+
    "\2\3\3\0\12\3\1\u0344\17\3\10\0\2\3\3\0"+
    "\3\3\1\117\26\3\10\0\2\3\3\0\1\3\1\u0337"+
    "\15\3\1\u0113\12\3\10\0\2\3\3\0\5\3\1\u0241"+
    "\24\3\10\0\2\3\3\0\4\3\1\114\25\3\10\0"+
    "\2\3\3\0\20\3\1\u015c\11\3\10\0\2\3\3\0"+
    "\12\3\1\u027b\17\3\10\0\2\3\3\0\7\3\1\u0157"+
    "\22\3\10\0\2\3\3\0\7\3\1\u0345\22\3\10\0"+
    "\2\3\3\0\7\3\1\231\22\3\10\0\2\3\3\0"+
    "\12\3\1\u0121\17\3\10\0\2\3\3\0\3\3\1\u0346"+
    "\3\3\1\u025a\7\3\1\375\3\3\1\u0314\6\3\10\0"+
    "\2\3\3\0\2\3\1\u01e9\1\3\1\u01ea\11\3\1\u0127"+
    "\2\3\1\372\1\3\1\u01eb\6\3\10\0\2\3\3\0"+
    "\3\3\1\u0145\26\3\10\0\2\3\3\0\2\3\1\300"+
    "\27\3\10\0\2\3\3\0\10\3\1\u0113\21\3\40\0"+
    "\1\u0347\16\0\2\3\3\0\3\3\1\u02d7\3\3\1\u0348"+
    "\22\3\10\0\2\3\3\0\3\3\1\u0349\26\3\10\0"+
    "\2\3\3\0\10\3\1\u034a\21\3\10\0\2\3\3\0"+
    "\5\3\1\u0171\2\3\1\u034b\21\3\10\0\2\3\3\0"+
    "\2\3\1\u0260\27\3\10\0\2\3\3\0\15\3\1\u034c"+
    "\14\3\10\0\2\3\3\0\5\3\1\145\24\3\10\0"+
    "\2\3\3\0\5\3\1\u015c\24\3\10\0\2\3\3\0"+
    "\10\3\1\102\21\3\10\0\2\3\3\0\7\3\1\u028d"+
    "\22\3\10\0\2\3\3\0\23\3\1\u0145\6\3\10\0"+
    "\2\3\3\0\6\3\1\u028d\23\3\10\0\2\3\3\0"+
    "\23\3\1\u0198\6\3\10\0\2\3\3\0\7\3\1\u0198"+
    "\22\3\10\0\2\3\3\0\23\3\1\u034d\6\3\10\0"+
    "\2\3\3\0\7\3\1\u034e\22\3\10\0\2\3\3\0"+
    "\6\3\1\u034f\23\3\10\0\2\3\3\0\7\3\1\u0350"+
    "\22\3\10\0\2\3\3\0\1\u0351\31\3\10\0\2\3"+
    "\3\0\7\3\1\u0352\22\3\10\0\2\3\3\0\1\u0353"+
    "\11\3\1\u0354\17\3\10\0\2\3\3\0\24\3\1\u0232"+
    "\5\3\10\0\2\3\3\0\2\3\1\u015c\27\3\10\0"+
    "\2\3\3\0\3\3\1\u016c\26\3\10\0\2\3\3\0"+
    "\17\3\1\u028d\12\3\10\0\2\3\3\0\4\3\1\u0355"+
    "\25\3\10\0\2\3\3\0\2\3\1\u0356\27\3\10\0"+
    "\2\3\3\0\24\3\1\u0357\5\3\10\0\2\3\3\0"+
    "\14\3\1\u01d3\15\3\10\0\2\3\3\0\5\3\1\u01f9"+
    "\24\3\10\0\2\3\3\0\10\3\1\u0278\21\3\10\0"+
    "\2\3\3\0\21\3\1\u0182\10\3\10\0\2\3\3\0"+
    "\5\3\1\u0358\24\3\10\0\2\3\3\0\6\3\1\u0113"+
    "\23\3\10\0\2\3\3\0\13\3\1\u0359\16\3\25\0"+
    "\1\275\31\0\2\3\3\0\4\3\1\u035a\25\3\10\0"+
    "\2\3\3\0\7\3\1\u035b\22\3\10\0\2\3\3\0"+
    "\3\3\1\u035c\26\3\10\0\2\3\3\0\1\3\1\u027e"+
    "\30\3\10\0\2\3\3\0\1\u0272\31\3\10\0\2\3"+
    "\3\0\4\3\1\u035d\25\3\10\0\2\3\3\0\4\3"+
    "\1\51\25\3\10\0\2\3\3\0\13\3\1\u035e\16\3"+
    "\10\0\2\3\3\0\5\3\1\u035f\24\3\10\0\2\3"+
    "\3\0\12\3\1\u01d1\17\3\1\u0360\7\0\2\3\3\0"+
    "\3\3\1\u01a2\13\3\1\u0113\12\3\10\0\2\3\3\0"+
    "\13\3\1\253\16\3\10\0\2\3\3\0\4\3\1\u02dc"+
    "\25\3\10\0\2\3\3\0\13\3\1\u0176\16\3\10\0"+
    "\2\3\3\0\3\3\1\u02d7\26\3\10\0\2\3\3\0"+
    "\25\3\1\u0331\4\3\10\0\2\3\3\0\2\3\1\u0361"+
    "\27\3\10\0\2\3\3\0\10\3\1\u0362\21\3\10\0"+
    "\2\3\3\0\12\3\1\231\17\3\10\0\2\3\3\0"+
    "\13\3\1\u0363\16\3\10\0\2\3\3\0\2\3\1\365"+
    "\27\3\10\0\2\3\3\0\1\u0364\31\3\10\0\2\3"+
    "\3\0\23\3\1\u0350\6\3\10\0\2\3\3\0\2\3"+
    "\1\u0314\27\3\10\0\2\3\3\0\7\3\1\u025a\7\3"+
    "\1\375\3\3\1\u0314\6\3\10\0\2\3\3\0\3\3"+
    "\1\u0346\26\3\10\0\2\3\3\0\5\3\1\u0365\24\3"+
    "\10\0\2\3\3\0\10\3\1\u0121\21\3\10\0\2\3"+
    "\3\0\4\3\1\u0366\25\3\10\0\2\3\3\0\7\3"+
    "\1\366\22\3\10\0\2\3\3\0\13\3\1\231\16\3"+
    "\10\0\2\3\3\0\1\3\1\u0367\30\3\10\0\2\3"+
    "\3\0\5\3\1\u0176\24\3\10\0\2\3\3\0\11\3"+
    "\1\u0125\20\3\10\0\2\3\3\0\14\3\1\253\15\3"+
    "\10\0\2\3\3\0\21\3\1\231\10\3\10\0\2\3"+
    "\3\0\24\3\1\u0368\5\3\10\0\2\3\3\0\21\3"+
    "\1\u020e\10\3\10\0\2\3\3\0\2\3\1\366\27\3"+
    "\10\0\2\3\3\0\15\3\1\u0113\14\3\22\0\1\u0369"+
    "\45\0\1\u036a\54\0\1\u036b\62\0\1\u036c\13\0\2\3"+
    "\3\0\16\3\1\u0279\13\3\10\0\2\3\3\0\7\3"+
    "\1\u036d\22\3\10\0\2\3\3\0\24\3\1\u036e\5\3"+
    "\10\0\2\3\3\0\5\3\1\u036f\24\3\10\0\2\3"+
    "\3\0\5\3\1\236\24\3\10\0\2\3\3\0\10\3"+
    "\1\236\21\3\10\0\2\3\3\0\3\3\1\u0370\26\3"+
    "\10\0\2\3\3\0\7\3\1\u0204\22\3\10\0\2\3"+
    "\3\0\10\3\1\u024d\21\3\10\0\2\3\3\0\10\3"+
    "\1\u0371\21\3\10\0\2\3\3\0\21\3\1\u02c9\10\3"+
    "\16\0\1\u0372\65\0\1\u02f1\30\0\1\u0373\2\0\1\u0374"+
    "\2\0\1\u0375\1\0\1\u0376\45\0\1\u030f\41\0\1\u0377"+
    "\2\0\1\u0378\37\0\1\u0379\3\0\1\u037a\44\0\1\u02f1"+
    "\56\0\1\u02e3\5\0\1\u030f\26\0\1\u0373\11\0\1\u0376"+
    "\53\0\1\u02f1\32\0\1\u037b\53\0\1\u02f4\45\0\1\u02f4"+
    "\46\0\1\u037c\64\0\1\u030f\36\0\1\u037d\31\0\1\u037c"+
    "\14\0\1\u037e\36\0\1\u02f1\61\0\1\u030f\35\0\1\u02e8"+
    "\52\0\1\u037f\11\0\1\u030f\25\0\1\u02e3\6\0\1\u030f"+
    "\33\0\1\u0380\1\0\1\u02f1\44\0\1\u0381\3\0\1\u0382"+
    "\17\0\1\u0383\24\0\1\u02f1\3\0\1\u02f4\42\0\1\u02f1"+
    "\2\0\1\u037c\1\0\1\u0384\2\0\1\u0376\43\0\1\u0307"+
    "\46\0\1\u0385\43\0\1\u0386\44\0\1\u0373\1\u02e8\1\0"+
    "\1\u02e8\4\0\1\u02e3\44\0\1\u0387\41\0\1\u0388\43\0"+
    "\1\u02eb\47\0\1\u0389\4\0\1\u038a\3\0\1\u038b\37\0"+
    "\1\u038c\3\0\1\u038d\42\0\1\u038e\13\0\1\u02f1\36\0"+
    "\1\u0382\44\0\1\u038f\42\0\1\u0390\45\0\1\u0386\2\0"+
    "\1\u0391\60\0\1\u0212\7\0\1\u030f\21\0\1\u0392\56\0"+
    "\1\u02e8\57\0\1\u0393\34\0\1\u02f1\51\0\1\u0376\36\0"+
    "\1\u02f1\2\0\1\u0394\4\0\1\u0376\7\0\1\u02f1\34\0"+
    "\1\u0395\45\0\1\u0376\32\0\2\3\3\0\3\3\1\u0346"+
    "\13\3\1\375\12\3\10\0\2\3\3\0\3\3\1\u0346"+
    "\3\3\1\u025a\7\3\1\375\12\3\10\0\2\3\3\0"+
    "\1\u0396\31\3\10\0\2\3\3\0\26\3\1\u0397\3\3"+
    "\10\0\2\3\3\0\6\3\1\u0398\23\3\10\0\2\3"+
    "\3\0\26\3\1\253\3\3\10\0\2\3\3\0\7\3"+
    "\1\341\22\3\10\0\2\3\3\0\12\3\1\u0399\17\3"+
    "\10\0\2\3\3\0\21\3\1\u039a\10\3\10\0\2\3"+
    "\3\0\11\3\1\u039b\20\3\30\0\1\u039c\54\0\1\u039d"+
    "\20\0\2\3\3\0\3\3\1\u039e\26\3\10\0\2\3"+
    "\3\0\3\3\1\u039f\26\3\10\0\2\3\3\0\24\3"+
    "\1\u03a0\5\3\43\0\1\u03a1\13\0\2\3\3\0\12\3"+
    "\1\u03a2\17\3\25\0\1\u03a3\37\0\1\u03a4\40\0\2\3"+
    "\3\0\1\u036e\31\3\10\0\2\3\3\0\5\3\1\u03a5"+
    "\24\3\17\0\1\u03a6\67\0\1\u03a7\16\0\2\3\3\0"+
    "\17\3\1\253\12\3\10\0\2\3\3\0\7\3\1\u03a8"+
    "\22\3\10\0\2\3\3\0\2\3\1\u03a9\27\3\10\0"+
    "\2\3\3\0\5\3\1\u03aa\24\3\10\0\2\3\3\0"+
    "\7\3\1\u03ab\22\3\10\0\2\3\3\0\10\3\1\322"+
    "\21\3\10\0\2\3\3\0\7\3\1\u03ac\22\3\10\0"+
    "\2\3\3\0\7\3\1\u03ad\7\3\1\303\12\3\10\0"+
    "\2\3\3\0\10\3\1\u03ae\21\3\10\0\2\3\3\0"+
    "\3\3\1\u0166\26\3\17\0\1\u03af\1\u03b0\36\0\2\3"+
    "\3\0\2\3\1\u03b1\1\3\1\u01ea\11\3\1\u0127\13\3"+
    "\10\0\2\3\3\0\10\3\1\366\21\3\10\0\2\3"+
    "\3\0\17\3\1\u039a\12\3\10\0\2\3\3\0\5\3"+
    "\1\u03b2\24\3\10\0\2\3\3\0\5\3\1\102\24\3"+
    "\10\0\2\3\3\0\3\3\1\u01e8\26\3\10\0\2\3"+
    "\3\0\4\3\1\77\25\3\10\0\2\3\3\0\7\3"+
    "\1\322\22\3\10\0\2\3\3\0\5\3\1\u0157\24\3"+
    "\10\0\2\3\3\0\7\3\1\u0316\22\3\15\0\1\u03b3"+
    "\41\0\2\3\3\0\12\3\1\u03b4\17\3\10\0\2\3"+
    "\3\0\13\3\1\u0260\16\3\10\0\2\3\3\0\1\u03b5"+
    "\31\3\10\0\2\3\3\0\1\u03b6\31\3\10\0\2\3"+
    "\3\0\7\3\1\306\22\3\10\0\2\3\3\0\7\3"+
    "\1\u03b7\22\3\10\0\2\3\3\0\1\u0363\31\3\10\0"+
    "\2\3\3\0\10\3\1\u03b8\21\3\10\0\2\3\3\0"+
    "\26\3\1\u03b9\3\3\10\0\2\3\3\0\15\3\1\u03ba"+
    "\14\3\10\0\2\3\3\0\10\3\1\u03bb\21\3\10\0"+
    "\2\3\3\0\16\3\1\u03bc\13\3\10\0\2\3\3\0"+
    "\7\3\1\u0355\22\3\10\0\2\3\3\0\11\3\1\303"+
    "\20\3\10\0\2\3\3\0\3\3\1\u0350\26\3\10\0"+
    "\2\3\3\0\13\3\1\u0110\16\3\10\0\2\3\3\0"+
    "\7\3\1\356\22\3\10\0\2\3\3\0\14\3\1\u0113"+
    "\15\3\10\0\2\3\3\0\10\3\1\u03bd\21\3\10\0"+
    "\2\3\3\0\4\3\1\u03be\25\3\10\0\2\3\3\0"+
    "\5\3\1\u01c4\24\3\10\0\2\3\3\0\2\3\1\u01f8"+
    "\27\3\10\0\2\3\3\0\3\3\1\u03bf\26\3\31\0"+
    "\1\u03c0\25\0\2\3\3\0\23\3\1\u015c\6\3\10\0"+
    "\2\3\3\0\7\3\1\u03c1\22\3\10\0\2\3\3\0"+
    "\13\3\1\110\16\3\10\0\2\3\3\0\6\3\1\102"+
    "\23\3\10\0\2\3\3\0\21\3\1\u03c2\10\3\10\0"+
    "\2\3\3\0\24\3\1\u03c3\5\3\10\0\2\3\3\0"+
    "\2\3\1\u03c4\27\3\10\0\2\3\3\0\6\3\1\u03c5"+
    "\23\3\23\0\1\u03c6\45\0\1\u03c6\53\0\1\u03c7\44\0"+
    "\1\u03c8\31\0\2\3\3\0\13\3\1\u03c9\16\3\10\0"+
    "\2\3\3\0\12\3\1\u01a2\17\3\10\0\2\3\3\0"+
    "\1\u0345\31\3\10\0\2\3\3\0\5\3\1\u0261\24\3"+
    "\10\0\2\3\3\0\4\3\1\u03ca\25\3\24\0\1\u03cb"+
    "\40\0\1\u03cc\46\0\1\u0313\55\0\1\u02eb\50\0\1\u02f1"+
    "\47\0\1\u030f\33\0\1\u02f4\53\0\1\u03cd\45\0\1\u0377"+
    "\47\0\1\u02e3\62\0\1\u02f1\37\0\1\u03ce\46\0\1\u02eb"+
    "\36\0\1\u02ee\54\0\1\u02f4\14\0\1\u030f\26\0\1\u037c"+
    "\2\0\1\u02e8\53\0\1\u02f1\52\0\1\u02eb\36\0\1\u02f1"+
    "\35\0\1\u02e3\4\0\1\u037c\4\0\1\u0376\50\0\1\u02f1"+
    "\42\0\1\u02eb\7\0\1\u02f1\30\0\1\u030f\50\0\1\u02e5"+
    "\45\0\1\u02f4\46\0\1\u03cf\50\0\1\u03d0\41\0\1\u02e3"+
    "\60\0\1\u037c\35\0\1\u030f\50\0\1\u03d1\50\0\1\u02e3"+
    "\17\0\1\u030f\31\0\1\u02f1\45\0\1\u03d2\42\0\1\u03d3"+
    "\15\0\1\u02f1\33\0\1\u02f6\33\0\2\3\3\0\5\3"+
    "\1\u03d4\24\3\10\0\2\3\3\0\4\3\1\u03d5\25\3"+
    "\10\0\2\3\3\0\23\3\1\u03d6\6\3\10\0\2\3"+
    "\3\0\3\3\1\u03d7\26\3\10\0\2\3\3\0\1\u03d8"+
    "\31\3\24\0\1\u03d9\46\0\1\u03da\32\0\2\3\3\0"+
    "\13\3\1\u03ad\16\3\10\0\2\3\3\0\2\3\1\u01f7"+
    "\27\3\10\0\2\3\3\0\13\3\1\u0261\16\3\10\0"+
    "\2\3\3\0\25\3\1\u03db\4\3\30\0\1\u03dc\53\0"+
    "\1\274\21\0\2\3\3\0\6\3\1\253\23\3\50\0"+
    "\1\u03dd\13\0\1\u03de\41\0\2\3\3\0\10\3\1\311"+
    "\21\3\10\0\2\3\3\0\23\3\1\u03df\6\3\10\0"+
    "\2\3\3\0\11\3\1\u0277\20\3\10\0\2\3\3\0"+
    "\12\3\1\u01d1\17\3\10\0\2\3\3\0\2\3\1\u03e0"+
    "\27\3\10\0\2\3\3\0\1\u03e1\31\3\40\0\1\u03e2"+
    "\51\0\1\u03d9\13\0\2\3\3\0\23\3\1\u0247\6\3"+
    "\10\0\2\3\3\0\13\3\1\u02b6\16\3\17\0\1\u03d9"+
    "\37\0\2\3\3\0\7\3\1\u03e3\22\3\10\0\2\3"+
    "\3\0\2\3\1\u03e4\27\3\10\0\2\3\3\0\12\3"+
    "\1\322\17\3\10\0\2\3\3\0\10\3\1\u03e5\21\3"+
    "\10\0\2\3\3\0\1\u03e6\31\3\10\0\2\3\3\0"+
    "\24\3\1\343\5\3\10\0\2\3\3\0\13\3\1\u0342"+
    "\16\3\10\0\2\3\3\0\2\3\1\236\27\3\10\0"+
    "\2\3\3\0\12\3\1\u03e7\17\3\10\0\2\3\3\0"+
    "\21\3\1\372\10\3\10\0\2\3\3\0\5\3\1\u03e8"+
    "\24\3\10\0\2\3\3\0\2\3\1\u015e\27\3\21\0"+
    "\1\u03e9\35\0\2\3\3\0\21\3\1\374\10\3\10\0"+
    "\2\3\3\0\12\3\1\u015c\17\3\10\0\2\3\3\0"+
    "\13\3\1\u0113\16\3\10\0\2\3\3\0\3\3\1\316"+
    "\26\3\10\0\2\3\3\0\23\3\1\110\6\3\50\0"+
    "\1\u03ea\46\0\1\u03eb\17\0\1\u03ec\35\0\2\3\3\0"+
    "\13\3\1\u01a2\16\3\10\0\2\3\3\0\14\3\1\u027b"+
    "\15\3\32\0\1\u02e8\54\0\1\u02f1\31\0\1\u030f\40\0"+
    "\1\u038a\55\0\1\u02f0\45\0\1\u02f1\61\0\1\u030f\35\0"+
    "\1\u03ed\51\0\1\u03cc\26\0\2\3\3\0\21\3\1\375"+
    "\10\3\10\0\2\3\3\0\10\3\1\u03ee\21\3\10\0"+
    "\2\3\3\0\4\3\1\u03ef\25\3\10\0\2\3\3\0"+
    "\6\3\1\u01e7\23\3\10\0\2\3\3\0\2\3\1\300"+
    "\7\3\1\u0113\17\3\25\0\1\u03f0\31\0\2\3\3\0"+
    "\7\3\1\u02b3\22\3\24\0\1\u03f1\37\0\1\u03f2\50\0"+
    "\1\u03f3\37\0\2\3\3\0\7\3\1\u03f4\22\3\10\0"+
    "\2\3\3\0\3\3\1\u03f5\26\3\10\0\2\3\3\0"+
    "\13\3\1\u03f6\16\3\21\0\1\u03f7\35\0\2\3\3\0"+
    "\13\3\1\u03c3\16\3\10\0\2\3\3\0\7\3\1\u01a2"+
    "\22\3\10\0\2\3\3\0\32\3\1\0\1\u03f8\6\0"+
    "\2\3\3\0\15\3\1\u0105\14\3\10\0\2\3\3\0"+
    "\17\3\1\u0342\12\3\10\0\2\3\3\0\1\u02dc\31\3"+
    "\25\0\1\u03f9\36\0\1\u03fa\46\0\1\u03fb\57\0\1\u03a1"+
    "\50\0\1\u03fc\26\0\2\3\3\0\7\3\1\311\22\3"+
    "\10\0\2\3\3\0\24\3\1\u01f6\5\3\50\0\1\u03fd"+
    "\25\0\1\u03fe\27\0\2\3\3\0\12\3\1\u03ff\17\3"+
    "\10\0\2\3\3\0\1\3\1\u0113\30\3\10\0\2\3"+
    "\3\0\13\3\1\365\16\3\41\0\1\u0400\26\0\1\u0401"+
    "\62\0\1\u0402\41\0\1\u03d9\46\0\1\u03f3\35\0\1\u0403"+
    "\46\0\1\u0404\56\0\1\u0405\27\0\2\3\3\0\7\3"+
    "\1\u0406\22\3\23\0\1\u0407\50\0\1\u03d9\41\0\1\u0408"+
    "\43\0\1\u0409\52\0\1\u03d9\35\0\2\3\3\0\13\3"+
    "\1\u040a\16\3\40\0\1\u03d9\30\0\1\u040b\46\0\1\u037c"+
    "\34\0\2\3\3\0\13\3\1\311\16\3\23\0\1\u040c"+
    "\32\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[38610];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\4\1\1\11\31\1\1\11\47\1\1\0"+
    "\13\1\1\0\13\1\1\0\73\1\1\0\35\1\1\0"+
    "\1\11\3\0\24\1\1\0\46\1\1\0\16\1\1\0"+
    "\23\1\2\0\25\1\1\0\101\1\1\0\32\1\1\0"+
    "\40\1\1\0\26\1\1\0\30\1\1\0\16\1\3\0"+
    "\5\1\1\0\24\1\23\0\24\1\2\0\6\1\1\0"+
    "\3\1\2\0\4\1\2\0\7\1\1\0\56\1\1\0"+
    "\46\1\1\0\40\1\1\11\12\1\4\0\13\1\17\0"+
    "\1\11\22\0\1\1\17\0\16\1\2\0\4\1\1\0"+
    "\1\1\2\0\2\1\2\0\13\1\1\0\13\1\1\0"+
    "\30\1\1\0\10\1\4\0\5\1\22\0\1\1\21\0"+
    "\6\1\2\0\3\1\1\11\1\1\2\0\1\1\2\0"+
    "\7\1\2\0\2\1\1\0\14\1\1\0\5\1\3\0"+
    "\2\1\11\0\5\1\1\11\1\0\1\1\3\0\3\1"+
    "\1\0\6\1\5\0\2\1\1\0\1\11\1\0\1\11"+
    "\3\1\10\0\1\1\5\0\1\11\1\1\3\0\1\1"+
    "\1\0\1\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1036];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    public String lexeme;
    public static Compilador principals= new Compilador();


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  public Lexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn++;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 26: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Pronombre interrogativo",yytext(),yyline,yycolumn});lexeme=yytext(); return pronombre_interrogativo;
          }
        case 33: break;
        case 11: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Interjeccion",yytext(),yyline,yycolumn});lexeme=yytext(); return interjeccion;
          }
        case 34: break;
        case 21: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Verbo_Plural",yytext(),yyline,yycolumn});lexeme=yytext();lexeme=yytext(); return Verbo_Plural;
          }
        case 35: break;
        case 3: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Signod de puntuacion",yytext(),yyline,yycolumn});lexeme=yytext(); return Numero;
          }
        case 36: break;
        case 22: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Numero Cardinal",yytext(),yyline,yycolumn});lexeme=yytext();return numeral_cardinal;
          }
        case 37: break;
        case 15: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Adverbio negacion",yytext(),yyline,yycolumn});lexeme=yytext(); return adverbio_negacion;
          }
        case 38: break;
        case 29: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Verbo",yytext(),yyline,yycolumn});lexeme=yytext(); return verbo;
          }
        case 39: break;
        case 20: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Adjetivo indefinido",yytext(),yyline,yycolumn});lexeme=yytext(); return adjetivo_indefinido;
          }
        case 40: break;
        case 16: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Adjetivo Posesivo",yytext(),yyline,yycolumn});lexeme=yytext();return adjetivo_posesivo;
          }
        case 41: break;
        case 13: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Verbo_Singular",yytext(),yyline,yycolumn});lexeme=yytext();lexeme=yytext(); return Verbo_Singular;
          }
        case 42: break;
        case 24: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Adjetivo calificativo",yytext(),yyline,yycolumn});lexeme=yytext();return adjetivo_calificativo;
          }
        case 43: break;
        case 19: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Sustantivo",yytext(),yyline,yycolumn});lexeme=yytext(); return sustantivo;
          }
        case 44: break;
        case 5: 
          { return Linea;
          }
        case 45: break;
        case 1: 
          { DefaultTableModel modeloe= (DefaultTableModel) principals.jTable1.getModel(); modeloe.addRow(new Object[]{"No definido en el lexico ,error " +yytext()+" linea "+yyline+" columna "+yycolumn,"Lexico"});return ERROR;
          }
        case 46: break;
        case 28: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Adverbio modo",yytext(),yyline,yycolumn});lexeme=yytext();return adverbio_modo;
          }
        case 47: break;
        case 18: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Contracciones",yytext(),yyline,yycolumn});lexeme=yytext(); return contraccion;
          }
        case 48: break;
        case 32: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Adverbio afirmacion",yytext(),yyline,yycolumn});lexeme=yytext(); return adverbio_afirmacion;
          }
        case 49: break;
        case 6: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Articulo indefinido",yytext(),yyline,yycolumn});lexeme=yytext();return articulo_indefinido;
          }
        case 50: break;
        case 12: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Adverbio lugar",yytext(),yyline,yycolumn});lexeme=yytext(); return adverbio_lugar;
          }
        case 51: break;
        case 17: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Adverbio cantidad",yytext(),yyline,yycolumn});lexeme=yytext(); return adverbio_cantidad;
          }
        case 52: break;
        case 10: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Conjucion subordinante",yytext(),yyline,yycolumn});lexeme=yytext(); return conjucion_subordinante;
          }
        case 53: break;
        case 14: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Conjucion cordinante",yytext(),yyline,yycolumn});lexeme=yytext();return conjucion_cordinante;
          }
        case 54: break;
        case 27: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Adjetivo Demostrativo",yytext(),yyline,yycolumn});lexeme=yytext(); return adjetivo_demostrativo;
          }
        case 55: break;
        case 30: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Numero Ordinal",yytext(),yyline,yycolumn});lexeme=yytext();return numeral_ordinal;
          }
        case 56: break;
        case 23: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Articulo definido",yytext(),yyline,yycolumn});lexeme=yytext();return articulo_definido;
          }
        case 57: break;
        case 4: 
          { /*Ignore*/
          }
        case 58: break;
        case 31: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Adverbio duda",yytext(),yyline,yycolumn});lexeme=yytext(); return adverbio_duda;
          }
        case 59: break;
        case 9: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Preposicion",yytext(),yyline,yycolumn});lexeme=yytext();return preposicion;
          }
        case 60: break;
        case 8: 
          { lexeme=yytext(); return signo_puntuacion;
          }
        case 61: break;
        case 25: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Adverbio tiempo",yytext(),yyline,yycolumn});lexeme=yytext(); return adverbio_tiempo;
          }
        case 62: break;
        case 7: 
          { DefaultTableModel modelo1= (DefaultTableModel) principals.tabla_s.getModel(); modelo1.addRow(new Object[]{"Pronombre personal",yytext(),yyline,yycolumn});lexeme=yytext();return pronombre_personal;
          }
        case 63: break;
        case 2: 
          { DefaultTableModel modeloe= (DefaultTableModel) principals.jTable1.getModel(); modeloe.addRow(new Object[]{"Palabra no definida en el lexico ,error " +yytext()+" linea "+yyline+" columna "+yycolumn,"Lexico"});return ERROR;
          }
        case 64: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
